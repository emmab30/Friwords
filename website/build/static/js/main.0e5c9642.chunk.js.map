{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Notifications.js","services/Firebase.js","components/FriwordWelcome.js","components/FriwordLogin.js","components/FriwordCreatePost.js","components/FadeInSection.js","components/FriwordCard.js","components/FriwordsNotificationsPanel.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","onLike","onLikeComment","comment","playHeart","setState","isPlayingAnimation","stopHeart","state","randomColor","Math","floor","random","length","heartAnimation","liked","componentWillReceiveProps","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Item","dot","style","marginTop","width","height","borderRadius","backgroundColor","user","gender","marginBottom","className","padding","gutter","span","justify","display","flex","flexDirection","user_alias","justifyContent","alignItems","fontSize","textAlign","color","fontWeight","onClick","ref","e","options","isStopped","marginLeft","likes_qty","moment","created_at","fromNow","dangerouslySetInnerHTML","__html","html","fontFamily","ENVIRONMENTS","BASE_URL","SetToken","token","localStorage","setItem","ApiService","timeout","headers","getItem","api","axios","create","baseURL","getBaseUrl","interceptors","response","use","error","axiosRetry","retries","retryDelay","retryCount","setBaseUrl","baseUrl","encodeQueryData","parameters","ret","d","push","encodeURIComponent","join","Auth","isAuthenticated","register","success","post","then","catch","err","signInWithAlias","getMe","updateMe","generateRandomAlias","Friwords","getFriwords","getFriwordsByFilter","filter","getFriwordById","id","url","getPossibleMentionsByFriwordId","likeById","likeCommentById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","Notifications","getNotifications","updateNotification","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Option","FriwordWelcome","getRandomAlias","isLoading","Services","auth","alias","form","setFieldsValue","onFinish","password","onStart","open","message","description","isVisible","position","top","left","minHeight","zIndex","paddingBottom","maxWidth","margin","name","initialValues","rules","required","onChange","evt","value","prefix","placeholder","textDecoration","type","maxHeight","opacity","src","htmlType","loading","onRequestLogin","FriwordLogin","checkProps","friword","onLoggedIn","isValid","title","visible","closable","onCancel","onRequestClose","footer","TextArea","FriwordCreatePost","resetFields","onCreated","text","remember","autoSize","minRows","maxRows","maxLength","FadeInSection","useState","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","getMentions","FriwordCard","hasLiked","hasDisliked","isLoadingComments","isSendingComment","canLeaveComment","showComments","mentions","sendCommentSuffix","likes","dislikes","onRequestComments","twoToneColor","onPostedComment","console","log","spin","bordered","bodyStyle","avatar","size","substring","comments","comments_qty","map","index","refreshFriword","paddingLeft","paddingRight","FriwordsNotificationsPanel","idx","notifications","seen","notification","onClickNotification","borderBottomWidth","borderBottomColor","Title","TabPane","country_code","ip","ipInfo","country_name","country_code2","hasUpdates","filters","promises","friwords","_","some","Promise","resolve","reject","all","info","ordered","orderBy","page","concat","alert","displayOnlyThis","findIndex","currentFriwordId","refresh","listing_mode","tabActiveKey","isViewingNotifications","isWelcome","isCreating","isLoggingIn","renderWelcome","hasNoticicationsUnread","unread_notifications","right","borderTopLeftRadius","borderBottomLeftRadius","cursor","borderLeft","borderBottom","textDecorationLine","href","borderBottomRightRadius","level","redirect_to","indexOf","replace","icon","dislikes_qty","commentsQty","setTimeout","disabled","marginRight","activeKey","onTabClick","val","only_me","defaultActiveKey","tab","indicator","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e5c9642.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Timeline\n} from 'antd';\n\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)],\n            isPlayingAnimation: false\n        };\n\n        this.heartAnimation = null;\n    }\n\n    onLike = () => {\n        if(this.props.onLikeComment)\n            this.props.onLikeComment(this.props.comment);\n    }\n\n    componentDidMount() {\n        const { comment } = this.props;\n\n        if(comment.liked == true) this.playHeart();\n        else this.stopHeart();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.comment) {\n\n            if(nextProps.comment.liked == true) this.playHeart();\n            else this.stopHeart();\n        } else {\n            this.stopHeart()\n        }\n    }\n\n    playHeart = () => {\n        this.setState({ isPlayingAnimation : true });\n    }\n\n    stopHeart = () => {\n        this.setState({ isPlayingAnimation : false });\n    }\n\n    render() {\n        const { comment } = this.props;\n        const defaultOptions = {\n            loop: false,\n            autoplay: false,\n            animationData: animationData.default,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        }\n\n        return (\n            <Timeline.Item\n                dot={\n                    <div style={{ marginTop: 5, width: 10, height: 10, borderRadius: 5, backgroundColor: comment && comment.user && comment.user.gender == 'female' ? '#ff8b9a' : '#8baeff' }}></div>\n                }>\n                <div style={{ marginBottom: 0 }}>\n                    {/*<div style={{ width: '95%', marginLeft: '2%', height: 3, backgroundColor: 'rgba(0,0,0,.005)', marginTop: 5, marginBottom: 0 }} />*/}\n                    <div className={`custom-card`} style={{ width: '100%', padding: 5, marginBottom: 0, backgroundColor: 'white', borderRadius: 2 }}>\n                        <Row gutter={24}>\n                            <Col span={24} justify={'center'}>\n\n                                <div style={{ display: 'flex', flex: 1, flexDirection: 'row' }}>\n                                    <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\n                                        { comment && comment.user_alias &&\n                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                <div style={{ display: 'flex', flex: 1, marginBottom: 0, backgroundColor: 'white' }}>\n                                                    <span style={{ display: 'block', marginTop: 0, fontSize: 13, textAlign: 'left', color: comment && comment.user && comment.user.gender == 'female' ? '#ff8b9a' : '#8baeff', fontWeight: 500 }}>@{ comment.user_alias }</span>\n                                                </div>\n\n                                                <div\n                                                    onClick={this.onLike}\n                                                    style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0 }}>\n                                                    <Lottie\n                                                        ref={(e) => { this.heartAnimation = e; }}\n                                                        options={defaultOptions}\n                                                        height={20}\n                                                        width={35}\n                                                        isStopped={!this.state.isPlayingAnimation}\n                                                    />\n                                                    <span style={{ color: '#f87676', marginLeft: -5, fontWeight: 800, fontSize: '0.75em' }}>{ comment.likes_qty }</span>\n                                                </div>\n                                            </div>\n                                        }\n\n                                        <div style={{ width: 'auto', marginBottom: 0, backgroundColor: 'white' }}>\n                                            <span style={{ display: 'block', marginTop: 2, marginBottom: 5, fontSize: 10, textAlign: 'left' }}>{ moment(comment.created_at).fromNow() }</span>\n                                        </div>\n\n                                        <span\n                                            dangerouslySetInnerHTML={{ __html: comment.html }}\n                                            style={{ color: 'rgba(0,0,0,.75)', fontSize: 13, fontFamily: 'Open Sans', marginLeft: 0, marginTop: 0, fontWeight: 400 }}></span>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Timeline.Item>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'https://api.friwords.com/api/v1/'\n};\n\nvar BASE_URL = process.env.NODE_ENV == 'development' ? ENVIRONMENTS.LOCAL : ENVIRONMENTS.PRODUCTION;\nvar JWT_TOKEN = null;\n\nexport function SetToken(token) {\n    localStorage.setItem('JWT_TOKEN', token);\n    JWT_TOKEN = token;\n}\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n\n        if(localStorage.getItem('JWT_TOKEN')) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem('JWT_TOKEN');\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        /*if (error.response.status === 401) {\n            alert(\"error\");\n        }*/\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    user: null,\n    isAuthenticated: () => {\n        return Auth.user != null\n    },\n    register: function(data, success, error) {\n        let url = 'auth/register';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    signInWithAlias: function(data, success, error) {\n        let url = 'auth/sign_in';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getMe: function(success, error) {\n        let url = 'profile/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateMe: function(data, success, error) {\n        let url = 'profile/me';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    generateRandomAlias: function(success, error) {\n        let url = 'auth/generate_alias';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordsByFilter: function(filter, success, error) {\n        let url = 'friwords/filter';\n\n        ApiService().post(url, filter).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getPossibleMentionsByFriwordId: function(id, success, error) {\n        let url = `friwords/${id}/possible_mentions`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeCommentById: function(id, success, error) {\n        let url = `friwords/comments/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import { ApiService } from './BaseService.js';\n\nvar Notifications = {\n    getNotifications: function(success, error) {\n        let url = 'notifications/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateNotification: function(data, success, error) {\n        let url = `notifications/${data.id}/update`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Notifications;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n    authDomain: \"friwords-a3536.firebaseapp.com\",\n    databaseURL: \"https://friwords-a3536.firebaseio.com\",\n    projectId: \"friwords-a3536\",\n    storageBucket: \"friwords-a3536.appspot.com\",\n    messagingSenderId: \"882500991771\",\n    appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n    measurementId: \"G-P8SQZY3BKH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordWelcome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.getRandomAlias();\n    }\n\n    getRandomAlias = () => {\n        this.setState({ isLoading: true });\n        Services.Auth.generateRandomAlias((data) => {\n            this.setState({ isLoading: false });\n            if(data.success) {\n                let auth = this.state.auth;\n                auth.alias = data.alias;\n                this.setState({ auth });\n\n                this.form.setFieldsValue({\n                    alias: data.alias\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    onFinish = () => {\n        if(!this.state.auth.gender) {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Escoge tu género',\n            });\n            return;\n        };\n\n        this.setState({ isLoading : true });\n        Services.Auth.register({\n            alias: this.state.auth.alias,\n            password: this.state.auth.password,\n            gender: this.state.auth.gender\n        }, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                if(this.props.onStart)\n                    this.props.onStart();\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message,\n                });\n            }\n\n            this.setState({ isLoading : false });\n        }, (err) => {\n            // Do nothing\n            this.setState({ isLoading : false });\n        });\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        if(!this.props.isVisible)\n            return null;\n\n        return (\n            <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', minHeight: '100%', zIndex: 99999, backgroundColor: '#25b864', paddingBottom: 20 }}>\n                <h1 style={{ textAlign: 'center', color: 'white', marginTop: 10 }}>Ingresa a Friwords</h1>\n\n                <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <p style={{ maxWidth: '80%', margin: '0 auto', color: 'rgba(255,255,255,.8)', textAlign: 'center' }}>Crea tu alias y tu contraseña. Recordá que <b>todo será anónimo</b></p>\n\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    initialValues={{\n                        alias: auth.alias\n                    }}\n                    onFinish={this.onFinish}>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<span>@</span>} placeholder=\"Tu alias\" />\n                    </Form.Item>\n\n                    <a\n                        onClick={this.getRandomAlias}\n                        style={{ width: '90%', color: 'white', textDecoration: 'underline', marginLeft: '5%', margin: '0 auto', padding: 0, display: 'block', marginBottom: 5 }}\n                    >Generar alias al azar</a>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Ingresa una contraseña' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600, color: 'white' }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'female';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'female' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'male';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'male' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading} style={{ display: 'flex', width: '75%', margin: '0 auto', backgroundColor: 'white', height: 50, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', color: '#00a2ff', marginTop: 15 }}>\n                            Registrarme\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <Button\n                    onClick={() => {\n                        this.props.onRequestLogin();\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={this.state.isLoading} style={{ display: 'flex', width: '100%', margin: '0 auto', height: 40, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', backgroundColor: '#00a2ff' }}>\n                    ¡Ya tengo un alias!\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        this.setState({ isLoading : true });\n        Services.Auth.signInWithAlias(this.state.auth, (data) => {\n            this.setState({ isLoading : false });\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                this.props.onLoggedIn(data.user);\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading : false });\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Ese alias no es válido'\n            });\n\n            return false;\n        });\n    }\n\n    isValid = () => {\n        return true;\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Ingresá con tu alias`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¿Tienes un alias distinto? Ingresa tu alias y la contraseña que se te pidió al crearlo.</span>\n                    </div>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            prefix={<Icons.UserSwitchOutlined className=\"site-form-item-icon\" />} placeholder=\"Alias\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa la contraseña' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Ingresar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¡Recuerda! Esto es totalmente anónimo, y tu friword aparecerá creado por <b>{friword.user_alias != null ? friword.user_alias : ''}</b></span>\n                    </div>\n\n                    {/*<div style={{ width: '100%', height: 8, backgroundColor: 'rgba(0,0,0,0.01)', marginTop: 10, marginBottom: 10 }}></div>*/}\n\n                    {/*<Form.Item\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Ingresa un título' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                friword.title = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Título\" />\n                    </Form.Item>*/}\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa el texto' }]}>\n                        <TextArea\n                            placeholder=\"Tu texto\"\n                            autoSize={{ minRows: 2, maxRows: 8 }}\n                            maxLength={750}\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />}\n                        />\n                        {/*<Input\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Texto\" />*/}\n                    </Form.Item>\n                    <span>{750 - (friword && friword.text && friword.text.length ? friword.text.length : 0)} caracteres restantes</span>\n\n                    <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.05)', marginTop: 20, marginBottom: 20 }}></div>\n\n                    {/*<span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600 }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'female';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'female' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'male';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'male' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>*/}\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Publicar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification,\n    Mentions,\n    Timeline\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\nimport FadeInSection from './FadeInSection'\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\n// Modules\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ParticleEffectButton from 'react-particle-effect-button'\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\nconst { Option, getMentions } = Mentions;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n            mentions: [],\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false,\n            friword: null\n        };\n    }\n\n    componentDidMount() {\n        // Get possible mentions\n        if(this.props.user != null) {\n            Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n                if(data.success) {\n                    this.setState({ mentions : data.mentions });\n                }\n            }, (err) => {\n                // Do nothing\n            });\n        }\n\n        if(this.props.friword != null) {\n            this.setState({ friword : this.props.friword });\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.friword != null) {\n            this.setState({ friword : nextProps.friword });\n        }\n\n        if(this.props.user != null && (!this.state.mentions || !this.state.mentions.length)) {\n            Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n                if(data.success) {\n                    this.setState({ mentions : data.mentions });\n                }\n            }, (err) => {\n                // Do nothing\n            });\n        }\n    }\n\n    onLike = () => {\n        if(this.props.user == null){\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'No se pudo dar like. Debes ingresar con tu alias para hacer esto',\n            });\n            return;\n        } else if(this.state.hasLiked || this.state.hasDisliked) {\n            return;\n        }\n\n        const { friword } = this.state;\n        friword.liked = true;\n        this.setState({ friword });\n\n        this.props.onLike();\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        if(!friword)\n            return null;\n\n        const { mentions } = this.state;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n\n                    if(this.props.user == null) {\n                        notification.open({\n                            className: 'error',\n                            message: 'Ingresa primero',\n                            description:\n                                'Ingresa o crea tu alias para dejar comentarios',\n                        });\n                        return;\n                    }\n\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification.open({\n                            className: 'error',\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n\n                    this.setState({ isSendingComment : true });\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: false,\n                            showComments: true\n                        });\n\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n\n                        if(this.props.onPostedComment)\n                            this.props.onPostedComment();\n                    }, (err) => {\n                        console.log(err);\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'transparent', padding: 0, marginTop: 0, display: 'flex', flex: 1 }}>\n                <a style={{ fontWeight: 800, padding: 15 }}>Enviar</a>\n                {/*<Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />*/}\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        let isMale = friword && friword.user && friword.user.gender == 'male';\n        let isFemale = friword && friword.user && friword.user.gender == 'female';\n        const defaultOptions = {\n            loop: false,\n            autoplay: false,\n            animationData: animationData.default,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        }\n\n        return (\n            <FadeInSection key={friword.id}>\n                <div className={`data-node-${friword.id}`}>\n                    <div style={{ width: '100%' }}>\n                        <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,.025)' }}></div>\n                        <Card\n                            bordered={false}\n                            // loading={this.props.loading}\n                            bodyStyle={{ padding: 10, opacity: this.props.loading ? .1 : 1 }}>\n                            <Meta\n                                avatar={\n                                    <Avatar\n                                        src={friword && friword.user && friword.user.gender == 'female' ? 'https://image.flaticon.com/icons/svg/2284/2284897.svg' : 'https://image.flaticon.com/icons/svg/2284/2284900.svg'}\n                                        size={'large'}\n                                        style={{ borderRadius: 0, width: 30, height: 30 }}\n                                    />\n                                }\n                                title={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span>\n                                            { `${friword.text.substring(0, 30)}...` }\n                                        </span>\n                                    </div>\n                                }\n                                description={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span style={{ fontSize: '0.9em' }}>{ `${friword.text}` }</span>\n                                    </div>\n                                }\n                            />\n\n                            <span style={{ display: 'block', marginTop: 10, fontSize: 10, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>\n\n                            { friword && friword.user_alias &&\n                                <span style={{ display: 'block', marginTop: 0, fontSize: 10, textAlign: 'right' }}>por <span style={{ color: '#25b864', fontWeight: 600 }}>@{ friword.user_alias }</span></span>\n                            }\n\n                            <div\n                                onClick={this.onLike}\n                                style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center', marginTop: 5, marginBottom: 5 }}>\n                                <Lottie\n                                    options={defaultOptions}\n                                    autoplay={false}\n                                    height={50}\n                                    width={32}\n                                    isStopped={!friword.liked}\n                                />\n                                <span style={{ color: '#f87676', marginLeft: 5, fontWeight: 800 }}>{ this.props.likes } like{this.props.likes > 1 ? 's' : ''}</span>\n                            </div>\n\n                            { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                                <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                            }\n\n                            { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: true,\n                                            showComments: true\n                                        });\n                                        this.props.onRequestComments();\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginTop: 0, marginBottom: 10, marginLeft: 7, fontWeight: 400, textDecoration: 'underline' }}>\n                                    Ver { friword.comments_qty } comentario{friword.comments_qty > 1 ? 's' : ''}\n                                </a>\n                            }\n\n                            { friword.comments != null && friword.comments.length > 0 && this.state.showComments &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: false,\n                                            showComments: false\n                                        });\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginBottom: 15, fontWeight: 500 }}>\n                                    Ocultar comentarios\n                                </a>\n                            }\n\n                            <div style={{ marginLeft: 5 }}>\n                                <Timeline>\n                                    { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e, index) => {\n                                        return (\n                                            <FriwordComment\n                                                key={`comment_${e.id}`}\n                                                comment={e}\n                                                onLikeComment={(comment) => {\n                                                    if(this.props.user != null) {\n                                                        Services.Friwords.likeCommentById(comment.id, (data) => {\n                                                            this.props.refreshFriword();\n                                                        }, (err) => {\n                                                            this.props.refreshFriword();\n                                                        });\n                                                    } else {\n                                                        notification.open({\n                                                            className: 'error',\n                                                            message: 'Oops',\n                                                            description: 'No se pudo dar like. Debes ingresar con tu alias para hacer esto',\n                                                        });\n                                                        return;\n                                                    }\n                                                }}\n                                            />\n                                        );\n                                    })}\n                                </Timeline>\n                            </div>\n\n                            { this.state.canLeaveComment &&\n                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0 }}>\n                                    <div style={{ display: 'flex', flex: 1 }}>\n                                        <Form\n                                            name=\"post_comment\"\n                                            style={{ width: '100%', paddingLeft: 0, paddingRight: 0, position: 'relative' }}>\n                                            <Form.Item\n                                                name=\"comment\"\n                                                rules={[{ required: true, message: 'Ingresa un comentario' }]}\n                                                style={{ marginBottom: 0, paddingBottom: 0 }}>\n                                                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                    <Mentions\n                                                        onChange={(comment) => {\n                                                            this.setState({ comment });\n                                                        }}\n                                                        className=\"input-comment\"\n                                                        placeholder=\"Deja tu comentario\"\n                                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                                        maxLength={750}>\n                                                        { mentions && mentions.map((e) => {\n                                                            return (\n                                                                <Option value={e.alias}>{e.alias}</Option>\n                                                            );\n                                                        })}\n                                                    </Mentions>\n\n                                                    { sendCommentSuffix }\n                                                </div>\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </div>\n                            }\n\n                            { this.props.user == null &&\n                                <div style={{ width: '100%', backgroundColor: '#25b864', padding: 5, marginTop: 10, borderRadius: 2 }}>\n                                    <span style={{ display: 'block', fontSize: 12, fontWeight: 600, textAlign: 'left', color: 'white' }}>Creá tu alias anónimo para dejar un comentario</span>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                </div>\n            </FadeInSection>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport moment from 'moment';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordsNotificationsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            notifications: []\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps);\n    }\n\n    checkProps = (props) => {\n        this.setState({ isVisible : props.isVisible });\n        if(props.isVisible == true && this.state.isVisible == false) {\n            this.getNotifications();\n        }\n    }\n\n    getNotifications = () => {\n        this.setState({ isLoading : true });\n        Services.Notifications.getNotifications((data) => {\n            if(data.success) {\n                this.setState({\n                    notifications: data.notifications,\n                    isLoading: false\n                });\n\n                // Mark as seen\n                for(var idx in data.notifications) {\n                    Services.Notifications.updateNotification({\n                        id: data.notifications[idx].id,\n                        seen: true\n                    }, (response) => {\n                        let notifications = this.state;\n                        notifications[idx].seen = true;\n                        this.setState({ notifications });\n                    });\n                }\n            }\n        }, (err) => {\n            this.setState({\n                notifications: [],\n                isLoading: false\n            });\n            // Do nothing\n        });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            notifications,\n            friword,\n            isLoading\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Tus notificaciones`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n\n                { !isLoading && notifications && notifications.length > 0 && notifications.map((notification) => {\n                    return (\n                        <div\n                            onClick={() => {\n                                if(this.props.onClickNotification){\n                                    this.props.onClickNotification(notification);\n                                }\n                            }}\n                            style={{ width: '100%', marginBottom: 10, position: 'relative', backgroundColor: !notification.seen ? 'rgba(255, 160, 0, .15)' : 'white', padding: 10, borderRadius: 5 }}>\n\n                            <div style={{ width: '100%', borderBottomWidth: 5, borderBottomColor: 'rgba(0,0,0,.05)' }} dangerouslySetInnerHTML={{ __html: notification.html }}></div>\n\n                            <span style={{ display: 'block', width: '100%', fontSize: 11, marginTop: 5, textAlign: 'right' }}>{ moment(notification.created_at).fromNow() }</span>\n\n                            <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.1)', marginTop: 10 }}></div>\n                        </div>\n                    );\n                })}\n\n                { !isLoading && (!notifications || notifications.length == 0) &&\n                    <span>¡Aún no tienes notificaciones para revisar!</span>\n                }\n\n                { isLoading &&\n                    <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                }\n\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    DatePicker,\n    Switch,\n    Slider,\n    Button,\n    Typography,\n    Tabs,\n    notification,\n    Spin\n} from 'antd';\n\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\n\n// Cards\nimport FriwordWelcome from '../components/FriwordWelcome';\nimport FriwordLogin from '../components/FriwordLogin';\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\nimport FriwordsNotificationsPanel from '../components/FriwordsNotificationsPanel';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            filters: {\n                listing_mode : 1,\n                page: 0\n            },\n            tabActiveKey: '1',\n            isViewingNotifications: false,\n            isWelcome: false,\n            isCreating: false,\n            isLoggingIn: false,\n            isLoading: true,\n            hasUpdates: false,\n            /*previousOnlineUsers: 132,\n            newOnlineUsers: 132,*/\n            user: null,\n            currentFriwordId: null\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n        this.getMe();\n\n        /*setInterval(() => {\n            if(this.state.friwords && this.state.friwords.length > 0) {\n                Services.Friwords.hasUpdatesAvailable(_.first(this.state.friwords).id, (data) => {\n                    if(data.success) {\n                        this.setState({ hasUpdates : data.hasUpdates });\n                    }\n                });\n            }\n        }, 10000);*/\n    }\n\n    getMe = () => {\n        Services.Auth.getMe((data) => {\n            if(data.success) {\n                if(data.user != null) {\n                    this.setState({ user: data.user });\n\n                    Services.Auth.user = data.user;\n\n                    if(data.user && !data.user.country_code && !data.user.ip) {\n                        const apiKey = '45c816eed2d04a8b96e59ff177c609af';\n                        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&fields=geo&output=json`).then((data) => {\n                            if(data && data.data) {\n                                const ipInfo = data.data;\n                                Services.Auth.updateMe({\n                                    country_name: ipInfo && ipInfo.country_name,\n                                    country_code: ipInfo && ipInfo.country_code2,\n                                    ip: ipInfo && ipInfo.ip\n                                }, (success) => {\n                                    if(success.success) {\n                                        this.setState({ user : success.user });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    /*getUsersOnline = () => {\n        let onlineUsers = this.state.previousOnlineUsers;\n        let offsetIncrement = 5;\n        let operator = Math.random() < 0.5 ? 1 : -1;\n        let newUsers = (onlineUsers + ((Math.floor(Math.random() * offsetIncrement) + 1) * operator));\n\n        this.setState({\n            newOnlineUsers: newUsers,\n            previousOnlineUsers: onlineUsers\n        });\n    }*/\n\n    getFriwords = () => {\n        // this.getUsersOnline()\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwordsByFilter(this.state.filters, (data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n\n                // If there are friwords on the state, we need to append this list (since it's a new page)\n                if(this.state.friwords && this.state.friwords.length > 0 && this.state.filters.page > 0)\n                    ordered = this.state.friwords.concat(ordered);\n\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id, displayOnlyThis = false) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                if(displayOnlyThis) {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = [data.friword];\n                    this.setState({\n                        friwords,\n                        currentFriwordId: id,\n                        isLoading: false\n                    }, this.getMe);\n                } else {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = this.state.friwords;\n                    friwords[index] = data.friword;\n                    this.setState({\n                        friwords,\n                        isLoading: false\n                    });\n                }\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    refresh = () => {\n        this.getFriwords();\n        this.getMe();\n    }\n\n    isAuthenticated = () => {\n        return Services.Auth.isAuthenticated();\n    }\n\n    render() {\n        const {\n            friwords,\n            filters\n        } = this.state;\n\n        if(this.state.isWelcome) {\n            return this.renderWelcome();\n        }\n\n        const hasNoticicationsUnread = this.state.user != null && this.state.user.unread_notifications > 0;\n\n        return (\n            <div className=\"friwords-container\">\n                <div style={{ width: '100%', height: 45, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 45, display: 'flex', flexDirection: 'column', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                        <a\n                            style={{ textDecorationLine: 'underline', fontSize: '0.6em' }}\n                            href=\"#\"\n                            onClick={() => {\n                                if(this.isAuthenticated()) {\n                                    this.setState({ isLoggingIn : true });\n                                } else {\n                                    this.setState({ isWelcome : true });\n                                }\n                            }}\n                        >{ this.isAuthenticated() ? 'Cambiar' : 'Registrar alias' }</a>\n                    </div>\n                    <div\n                        className=\"counter-online-users\"\n                        onClick={() => {\n                            if(this.isAuthenticated()) {\n                                this.setState({ isViewingNotifications : true });\n                            } else {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        style={{ height: 45, display: 'flex', flex: hasNoticicationsUnread ? 1 : 0, justifyContent: 'center', alignItems: 'center', backgroundColor: hasNoticicationsUnread ? '#fccf84' : 'white', borderTopLeftRadius: 0, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', paddingLeft: 10, paddingRight: 10 }}>\n                        <p style={{ fontWeight: 600, margin: 0, padding: 0, fontSize: '0.75em' }}>{ hasNoticicationsUnread ? `${this.state.user.unread_notifications} nueva${this.state.user.unread_notifications > 1 ? 's' : ''}` : 0 }</p>\n                        <img\n                            style={{ width: 20, height: 20, marginLeft: 5, opacity: 1 }}\n                            src={`/img/bell-${hasNoticicationsUnread ? 'on' : 'off'}.png`} />\n                    </div>\n                    <div\n                        onClick={this.refresh}\n                        style={{ height: 45, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '0px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.2)', opacity: this.state.hasUpdates ? 1 : .6 }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em', color: 'white' }}>{ this.state.isLoading ? 'Actualizando..' : 'Actualizar' }</span>\n                        <img\n                            style={{ width: 30, height: 30, marginLeft: 10 }}\n                            src=\"https://image.flaticon.com/icons/svg/1688/1688988.svg\" />\n                    </div>\n                </div>\n\n                <section style={{ textAlign: 'center', marginTop: 80, marginBottom: 20 }}>\n                    <Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordsNotificationsPanel\n                        isVisible={this.state.isViewingNotifications}\n                        user={this.state.user}\n                        onRequestClose={() => {\n                            this.setState({ isViewingNotifications : false }, this.getMe);\n                        }}\n                        onClickNotification={(e) => {\n                            if(e.redirect_to != null) {\n                                if(e.redirect_to.indexOf('friword/') > -1) {\n                                    this.setState({ isLoading : true, isViewingNotifications: false });\n                                    this.getFriwordById(e.redirect_to.replace('friword/', ''), true);\n                                }\n                            }\n                        }}\n                    />\n\n                    <FriwordLogin\n                        isVisible={this.state.isLoggingIn}\n                        onRequestClose={() => {\n                            this.setState({ isLoggingIn : false });\n                            /*if(!this.state.user || !this.state.user.is_configured) {\n                                this.setState({ isWelcome : true });\n                            }*/\n                        }}\n                        onLoggedIn={(user) => {\n                            this.setState({ user, isLoggingIn: false }, this.refresh);\n                        }}\n                    />\n\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            // Reset filters and then fetch the first page\n                            filters.page = 0;\n                            filters.listing_mode = 1;\n                            this.setState({ filters, tabActiveKey: '1' }, this.refresh);\n                            notification.open({\n                                className: 'success',\n                                message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                                description: 'Tu friword fue publicado exitosamente en la sección `Recientes`',\n                            });\n                        }}\n                    />\n\n                    { this.state.currentFriwordId != null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    this.setState({ currentFriwordId: null }, this.refresh);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.RollbackOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Volver atrás\n                            </Button>\n                        </div>,\n                        <FriwordCard\n                            loading={this.state.isLoading}\n                            friword={this.state.friwords[0]}\n                            comments={this.state.friwords[0].comments}\n                            likes={this.state.friwords[0].likes_qty}\n                            dislikes={this.state.friwords[0].dislikes_qty}\n                            commentsQty={this.state.friwords[0].comments_qty}\n                            user={this.state.user}\n                            onLike={() => {\n                                Services.Friwords.likeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onRequestComments={() => {\n                                this.getFriwordById(this.state.friwords[0].id, true);\n                            }}\n                            onPostedComment={this.getMe}\n                        />\n                    ]}\n\n                    { this.state.currentFriwordId == null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                disabled={this.state.user == null}\n                                onClick={() => {\n                                    if(this.isAuthenticated()) {\n                                        this.setState({ isCreating : true });\n                                    } else {\n                                        this.setState({ isWelcome : true });\n                                    }\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.PlusOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Publicar friword\n                            </Button>\n                        </div>,\n                        (this.state.user == null &&\n                            <a\n                                onClick={() => {\n                                    this.setState({ isWelcome : true })\n                                }}\n                                style={{ display: 'block', textAlign: 'center', marginTop: 15, fontWeight: 600, marginRight: 0, textDecoration: 'underline' }}>\n                                Registrá un alias para comentar y publicar nuevos Friwords\n                            </a>\n                        ),\n                        <Tabs\n                            style={{ marginTop: 20 }}\n                            activeKey={this.state.tabActiveKey}\n                            type={'card'}\n                            onTabClick={(val) => {\n                                if(val == 2) {\n                                    filters.only_me = true;\n                                    filters.page = 0;\n                                } else {\n                                    filters.only_me = false;\n                                    filters.listing_mode = val;\n                                    filters.page = 0;\n                                }\n                                this.setState({\n                                    filters,\n                                    tabActiveKey: val\n                                }, this.getFriwords);\n                            }}\n                            defaultActiveKey={'1'}>\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.HeartOutlined />\n                                            Más destacados\n                                        </span>\n                                    }\n                                key={'0'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    loading={this.state.isLoading}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.FieldTimeOutlined />\n                                            Recientes\n                                        </span>\n                                    }\n                                key={'1'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    loading={this.state.isLoading}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.FieldTimeOutlined />\n                                            Míos\n                                        </span>\n                                    }\n                                key={'2'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    loading={this.state.isLoading}\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n                        </Tabs>\n                    ]}\n\n                    { this.state.isLoading &&\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Spin indicator={\n                                <Icons.LoadingOutlined style={{ fontSize: 24 }} spin />\n                            } />\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderWelcome() {\n        return (\n            <div className=\"friwords-container\">\n                <FriwordWelcome\n                    isVisible={this.state.isWelcome}\n                    onStart={() => {\n                        this.setState({ isWelcome : false }, this.getMe);\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description:\n                                'Bienvenid@ a Friwords. Empieza leyendo y publicando',\n                        });\n\n                        setTimeout(() => {\n                            this.getFriwords();\n                        }, 3000);\n                    }}\n                    onRequestLogin={() => {\n                        this.setState({ isLoggingIn : true, isWelcome: false });\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\n\n// CSS Files\nimport './App.css';\nimport './assets/css/friwords.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}