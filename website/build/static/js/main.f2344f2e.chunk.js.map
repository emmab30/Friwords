{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Firebase.js","components/FriwordWelcome.js","components/FriwordLogin.js","components/FriwordCreatePost.js","components/FadeInSection.js","components/FriwordCard.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","state","randomColor","Math","floor","random","length","comment","style","width","marginLeft","height","backgroundColor","marginTop","marginBottom","borderLeft","hexToRgbA","paddingLeft","gutter","span","justify","src","size","shape","color","fontSize","fontFamily","text","display","textAlign","moment","created_at","fromNow","user_alias","user","country_code","justifyContent","alignItems","hex","opacity","c","test","substring","split","join","Error","ENVIRONMENTS","BASE_URL","SetToken","token","localStorage","setItem","ApiService","timeout","headers","getItem","api","axios","create","baseURL","getBaseUrl","interceptors","response","use","error","axiosRetry","retries","retryDelay","retryCount","setBaseUrl","baseUrl","encodeQueryData","parameters","ret","d","push","encodeURIComponent","Auth","register","success","post","then","catch","err","signInWithAlias","getMe","updateMe","generateRandomAlias","Friwords","getFriwords","getFriwordsByFilter","filter","getFriwordById","id","url","likeById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Option","FriwordWelcome","getRandomAlias","setState","isLoading","Services","auth","alias","form","setFieldsValue","onFinish","password","onStart","notification","open","className","message","description","isVisible","position","top","left","minHeight","zIndex","paddingBottom","maxWidth","margin","ref","e","name","initialValues","Item","rules","required","onChange","evt","value","prefix","placeholder","onClick","textDecoration","padding","type","htmlType","loading","fontWeight","onRequestLogin","FriwordLogin","checkProps","friword","onLoggedIn","isValid","componentWillReceiveProps","title","visible","closable","onCancel","onRequestClose","footer","TextArea","FriwordCreatePost","resetFields","onCreated","gender","remember","autoSize","minRows","maxRows","maxLength","flexDirection","flex","maxHeight","FadeInSection","useState","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","FriwordCard","onDislike","hasLiked","hasDisliked","hideDislikeBtn","setTimeout","onLike","hideLikeBtn","isLoadingComments","isSendingComment","canLeaveComment","showComments","sendCommentSuffix","likes","dislikes","onRequestComments","twoToneColor","spin","bordered","bodyStyle","avatar","borderRadius","duration","particlesAmountCoefficient","oscillationCoefficient","hidden","marginRight","cursor","comments","map","comments_qty","paddingRight","suffix","borderWidth","borderColor","Title","TabPane","isWelcome","ip","ipInfo","country_name","country_code2","getUsersOnline","onlineUsers","previousOnlineUsers","operator","newUsers","newOnlineUsers","hasUpdates","filters","promises","friwords","idx","_","some","Promise","resolve","reject","all","info","ordered","orderBy","page","concat","alert","index","findIndex","listing_mode","tabActiveKey","isCreating","isLoggingIn","setInterval","first","renderWelcome","right","borderTopLeftRadius","borderBottomLeftRadius","borderBottom","textDecorationLine","href","start","end","borderBottomRightRadius","level","is_configured","icon","activeKey","onTabClick","val","only_me","defaultActiveKey","tab","likes_qty","dislikes_qty","commentsQty","indicator","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2344f2e.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar\n} from 'antd';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)]\n        };\n    }\n    render() {\n        const { comment } = this.props;\n\n        return (\n            <div>\n                <div style={{ width: '95%', marginLeft: '5%', height: 5, backgroundColor: 'rgba(0,0,0,.01)', marginTop: 10, marginBottom: 10 }} />\n                <div style={{ width: '95%', marginLeft: '5%', borderLeft: `4px solid ${hexToRgbA(this.state.randomColor, .4)}`, paddingLeft: 10, marginTop: 5 }}>\n                    <Row gutter={24}>\n                        <Col span={24} justify={'center'}>\n                            <Avatar\n                                src={'https://image.flaticon.com/icons/svg/2716/2716406.svg'}\n                                size={'small'}\n                                shape={'square'}\n                            />\n\n                            <span style={{ color: 'rgba(0,0,0,.75)', fontSize: 13, fontFamily: 'Open Sans', marginLeft: 5 }}>{ comment.text }</span>\n                            <span style={{ display: 'block', marginTop: 5, fontSize: 10, textAlign: 'left' }}>{ moment(comment.created_at).fromNow() }</span>\n                            { comment && comment.user_alias &&\n                                <span style={{ display: 'block', marginTop: 5, fontSize: 12, textAlign: 'right' }}>por <i>@{ comment.user_alias }</i></span>\n                            }\n\n                            { comment && comment.user && comment.user.country_code != null &&\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\n                                    <img\n                                        style={{ width: 20 }}\n                                        src={`https://www.countryflags.io/${comment.user.country_code}/shiny/64.png`}\n                                    />\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'https://api.friwords.com/api/v1/'\n};\n\nvar BASE_URL = process.env.NODE_ENV == 'development' ? ENVIRONMENTS.LOCAL : ENVIRONMENTS.PRODUCTION;\nvar JWT_TOKEN = null;\n\nexport function SetToken(token) {\n    localStorage.setItem('JWT_TOKEN', token);\n    JWT_TOKEN = token;\n}\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n\n        if(localStorage.getItem('JWT_TOKEN')) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem('JWT_TOKEN');\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        /*if (error.response.status === 401) {\n            alert(\"error\");\n        }*/\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    register: function(data, success, error) {\n        let url = 'auth/register';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    signInWithAlias: function(data, success, error) {\n        let url = 'auth/sign_in';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getMe: function(success, error) {\n        let url = 'profile/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateMe: function(data, success, error) {\n        let url = 'profile/me';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    generateRandomAlias: function(success, error) {\n        let url = 'auth/generate_alias';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordsByFilter: function(filter, success, error) {\n        let url = 'friwords/filter';\n\n        ApiService().post(url, filter).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n    authDomain: \"friwords-a3536.firebaseapp.com\",\n    databaseURL: \"https://friwords-a3536.firebaseio.com\",\n    projectId: \"friwords-a3536\",\n    storageBucket: \"friwords-a3536.appspot.com\",\n    messagingSenderId: \"882500991771\",\n    appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n    measurementId: \"G-P8SQZY3BKH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordWelcome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.getRandomAlias();\n    }\n\n    getRandomAlias = () => {\n        this.setState({ isLoading: true });\n        Services.Auth.generateRandomAlias((data) => {\n            this.setState({ isLoading: false });\n            if(data.success) {\n                let auth = this.state.auth;\n                auth.alias = data.alias;\n                this.setState({ auth });\n\n                this.form.setFieldsValue({\n                    alias: data.alias\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    onFinish = () => {\n        this.setState({ isLoading : true });\n        Services.Auth.register({\n            alias: this.state.auth.alias,\n            password: this.state.auth.password\n        }, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                if(this.props.onStart)\n                    this.props.onStart();\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message,\n                });\n            }\n\n            this.setState({ isLoading : false });\n        }, (err) => {\n            // Do nothing\n            this.setState({ isLoading : false });\n        });\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        if(!this.props.isVisible)\n            return null;\n\n        return (\n            <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', minHeight: '100%', zIndex: 99999, backgroundColor: '#25b864', paddingBottom: 20 }}>\n                <h1 style={{ textAlign: 'center', color: 'white', marginTop: 10 }}>Ingresa a Friwords</h1>\n\n                <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <p style={{ maxWidth: '80%', margin: '0 auto', color: 'rgba(255,255,255,.8)', textAlign: 'center' }}>Crea tu alias y tu contraseña. Recordá que <b>todo será anónimo</b></p>\n\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    initialValues={{\n                        alias: auth.alias\n                    }}\n                    onFinish={this.onFinish}>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<span>@</span>} placeholder=\"Tu alias\" />\n                    </Form.Item>\n\n                    <a\n                        onClick={this.getRandomAlias}\n                        style={{ width: '90%', color: 'white', textDecoration: 'underline', marginLeft: '5%', margin: '0 auto', padding: 0, display: 'block', marginBottom: 5 }}\n                    >Generar alias al azar</a>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Ingresa una contraseña' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading} style={{ display: 'flex', width: '75%', margin: '0 auto', backgroundColor: 'white', height: 50, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', color: '#00a2ff', marginTop: 15 }}>\n                            Registrarme\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <Button\n                    onClick={() => {\n                        this.props.onRequestLogin();\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={this.state.isLoading} style={{ display: 'flex', width: '100%', margin: '0 auto', height: 40, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', backgroundColor: '#00a2ff' }}>\n                    ¡Ya tengo un alias!\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            auth: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        Services.Auth.signInWithAlias(this.state.auth, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                this.props.onLoggedIn(data.user);\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message\n                });\n            }\n        }, (err) => {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Ese alias no es válido'\n            });\n\n            return false;\n        });\n    }\n\n    isValid = () => {\n        return true;\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Ingresá con tu alias`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¿Tienes un alias distinto? Ingresa tu alias y la contraseña que se te pidió al crearlo.</span>\n                    </div>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            prefix={<Icons.UserSwitchOutlined className=\"site-form-item-icon\" />} placeholder=\"Alias\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa la contraseña' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Ingresar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¡Recuerda! Esto es totalmente anónimo, y tu friword aparecerá creado por <b>{friword.user_alias != null ? friword.user_alias : ''}</b></span>\n                    </div>\n\n                    {/*<div style={{ width: '100%', height: 8, backgroundColor: 'rgba(0,0,0,0.01)', marginTop: 10, marginBottom: 10 }}></div>*/}\n\n                    {/*<Form.Item\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Ingresa un título' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                friword.title = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Título\" />\n                    </Form.Item>*/}\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa el texto' }]}>\n                        <TextArea\n                            placeholder=\"Tu texto\"\n                            autoSize={{ minRows: 2, maxRows: 8 }}\n                            maxLength={500}\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />}\n                        />\n                        {/*<Input\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Texto\" />*/}\n                    </Form.Item>\n                    <span>{500 - (friword && friword.text && friword.text.length ? friword.text.length : 0)} caracteres restantes</span>\n\n                    <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.05)', marginTop: 20, marginBottom: 20 }}></div>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600 }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'female';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'female' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'male';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'male' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Publicar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\nimport FadeInSection from './FadeInSection'\n\n// Modules\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ParticleEffectButton from 'react-particle-effect-button'\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            hideDislikeBtn: false,\n            hideLikeBtn: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    onDislike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onDislike();\n        this.setState({ hideDislikeBtn : true, hasDisliked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideDislikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    onLike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onLike();\n        this.setState({ hideLikeBtn : true, hasLiked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideLikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    render() {\n        const {\n            friword\n        } = this.props;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification['error']({\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: true,\n                            showComments: true\n                        });\n\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n                    }, (err) => {\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                <Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        return (\n            <FadeInSection key={friword.id}>\n                <div className={`data-node-${friword.id}`} style={{ marginBottom: 5 }}>\n                    <div style={{ width: '100%' }}>\n                        <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(0,0,0,.075)' }}></div>\n                        <Card\n                            bordered={false}\n                            // loading={this.props.loading}\n                            bodyStyle={{ padding: 10, opacity: this.props.loading ? .1 : 1 }}>\n                            <Meta\n                                avatar={\n                                    <Avatar\n                                        src={friword.gender == 'female' ? 'https://image.flaticon.com/icons/svg/590/590083.svg' : 'https://image.flaticon.com/icons/svg/921/921071.svg'}\n                                        size={'small'}\n                                        shape={'circle'}\n                                        style={{ width: 30, height: 30, borderRadius: 15 }}\n                                    />\n                                }\n                                title={\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <span>\n                                            { friword.title }\n                                        </span>\n                                    </div>\n                                }\n                                description={friword.text}\n                            />\n\n                            <span style={{ display: 'block', marginTop: 10, fontSize: 12, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>\n\n                            { friword && friword.user_alias &&\n                                <span style={{ display: 'block', marginTop: 0, fontSize: 12, textAlign: 'right' }}>por <i>@{ friword.user_alias }</i></span>\n                            }\n\n                            { friword && friword.user && friword.user.country_code != null &&\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\n                                    <img\n                                        style={{ width: 20 }}\n                                        src={`https://www.countryflags.io/${friword.user.country_code}/shiny/64.png`}\n                                    />\n                                </div>\n                            }\n\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20, marginBottom: 20 }}>\n                                <ParticleEffectButton\n                                    color='#008bdb'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideLikeBtn}>\n                                    <div\n                                        onClick={this.onLike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#008bdb', width: 100, height: 30, borderRadius: 10, marginRight: 10, cursor: 'pointer', opacity: (this.props.likes > 0 ? 1 : .5) }}>\n                                        <Icons.LikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.likes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n\n                                <ParticleEffectButton\n                                    color='#ff2452'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideDislikeBtn}>\n                                    <div\n                                        onClick={this.onDislike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#ff2452', width: 100, height: 30, borderRadius: 10, cursor: 'pointer', opacity: (this.props.dislikes > 0 ? 1 : .5) }}>\n                                        <Icons.DislikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.dislikes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n                            </div>\n\n                            { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e) => {\n                                return (\n                                    <FriwordComment\n                                        comment={e}\n                                    />\n                                );\n                            })}\n\n                            { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                                <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                            }\n\n                            { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: true,\n                                            showComments: true\n                                        });\n                                        this.props.onRequestComments();\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginTop: 20, fontWeight: 500 }}>\n                                    Ver { friword.comments_qty } comentarios\n                                </a>\n                            }\n\n                            { this.state.canLeaveComment &&\n                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 20 }}>\n                                    <div style={{ height: 50 }}>\n                                        <Avatar\n                                            src=\"https://image.flaticon.com/icons/svg/134/134934.svg\"\n                                            size={'small'}\n                                            shape={'square'}\n                                        />\n                                    </div>\n\n                                    <div style={{ display: 'flex', flex: 1 }}>\n                                        <Form\n                                            name=\"post_comment\"\n                                            style={{ width: '100%', paddingLeft: 10, paddingRight: 10 }}>\n                                            <Form.Item\n                                                name=\"comment\"\n                                                rules={[{ required: true, message: 'Ingresa un comentario' }]}>\n                                                <Input\n                                                    suffix={sendCommentSuffix}\n                                                    placeholder=\"Deja tu comentario\"\n                                                    onChange={(evt) => {\n                                                        this.setState({ comment: evt.target.value });\n                                                    }}\n                                                    style={{ borderRadius : 10, borderWidth: 1, borderColor: 'rgba(0,0,0,0.05)', height: 40 }}\n                                                />\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </div>\n                            }\n\n                            {/*<div style={{ width: '100%' }}>\n                                <Button\n                                    onClick={() => {\n                                        this.setState({ isCreating : true });\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.PlusOutlined />}\n                                    size={20}\n                                    style={{ display: 'flex', width: 'auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center' }}>\n                                    Dejar comentario\n                                </Button>\n                            </div>*/}\n\n                        </Card>\n                    </div>\n                </div>\n            </FadeInSection>\n        )\n    }\n};","import React from 'react';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    DatePicker,\n    Switch,\n    Slider,\n    Button,\n    Typography,\n    Tabs,\n    notification,\n    Spin\n} from 'antd';\n\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\n\n// Cards\nimport FriwordWelcome from '../components/FriwordWelcome';\nimport FriwordLogin from '../components/FriwordLogin';\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            filters: {\n                listing_mode : 0,\n                page: 0\n            },\n            tabActiveKey: '0',\n            isWelcome: false,\n            isCreating: false,\n            isLoggingIn: false,\n            isLoading: true,\n            hasUpdates: false,\n            previousOnlineUsers: 132,\n            newOnlineUsers: 132,\n            user: null\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n\n        setInterval(() => {\n            if(this.state.friwords && this.state.friwords.length > 0) {\n                Services.Friwords.hasUpdatesAvailable(_.first(this.state.friwords).id, (data) => {\n                    if(data.success) {\n                        this.setState({ hasUpdates : data.hasUpdates });\n                    }\n                });\n            }\n        }, 10000);\n\n        this.getUsersOnline();\n        setInterval(this.getUsersOnline, 10000);\n\n        this.getMe();\n    }\n\n    getMe = () => {\n        Services.Auth.getMe((data) => {\n            if(data.success) {\n                if(data.user == null) { // Not authenticated\n                    this.setState({ isWelcome : true });\n                } else {\n                    this.setState({ user: data.user });\n\n                    if(data.user && !data.user.country_code && !data.user.ip) {\n                        const apiKey = '45c816eed2d04a8b96e59ff177c609af';\n                        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&fields=geo&output=json`).then((data) => {\n                            if(data && data.data) {\n                                const ipInfo = data.data;\n                                Services.Auth.updateMe({\n                                    country_name: ipInfo && ipInfo.country_name,\n                                    country_code: ipInfo && ipInfo.country_code2,\n                                    ip: ipInfo && ipInfo.ip\n                                }, (success) => {\n                                    if(success.success) {\n                                        this.setState({ user : success.user });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    getUsersOnline = () => {\n        let onlineUsers = this.state.previousOnlineUsers;\n        let offsetIncrement = 5;\n        let operator = Math.random() < 0.5 ? 1 : -1;\n        let newUsers = (onlineUsers + ((Math.floor(Math.random() * offsetIncrement) + 1) * operator));\n\n        this.setState({\n            newOnlineUsers: newUsers,\n            previousOnlineUsers: onlineUsers\n        });\n    }\n\n    getFriwords = () => {\n        this.getUsersOnline()\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwordsByFilter(this.state.filters, (data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n\n                // If there are friwords on the state, we need to append this list (since it's a new page)\n                if(this.state.friwords && this.state.friwords.length > 0 && this.state.filters.page > 0)\n                    ordered = this.state.friwords.concat(ordered);\n\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                let friwords = this.state.friwords;\n                friwords[index] = data.friword;\n                this.setState({ friwords });\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    render() {\n        const {\n            friwords,\n            filters\n        } = this.state;\n\n        if(this.state.isWelcome) {\n            return this.renderWelcome();\n        }\n\n        return (\n            <div className=\"friwords-container\">\n                <div style={{ width: '100%', height: 45, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 45, display: 'flex', flexDirection: 'column', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                        <a\n                            style={{ textDecorationLine: 'underline', fontSize: '0.6em' }}\n                            href=\"#\"\n                            onClick={() => {\n                                this.setState({ isLoggingIn : true });\n                            }}\n                        >Cambiar</a>\n                    </div>\n                    <div\n                        className=\"counter-online-users\"\n                        style={{ height: 45, display: 'flex', flex: 0, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', paddingLeft: 10, paddingRight: 10 }}>\n                        <CountUp\n                            start={this.state.previousOnlineUsers}\n                            end={this.state.newOnlineUsers}\n                        />\n                        <img\n                            style={{ width: 20, height: 20, marginLeft: 10, opacity: .5 }}\n                            src=\"https://image.flaticon.com/icons/svg/745/745205.svg\" />\n                    </div>\n                    <div\n                        onClick={this.getFriwords}\n                        style={{ height: 45, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '0px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.2)', opacity: this.state.hasUpdates ? 1 : .6 }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em', color: 'white' }}>{ this.state.isLoading ? 'Actualizando..' : 'Actualizar' }</span>\n                        <img\n                            style={{ width: 30, height: 30, marginLeft: 10 }}\n                            src=\"https://image.flaticon.com/icons/svg/1688/1688988.svg\" />\n                    </div>\n                </div>\n\n                <section style={{ textAlign: 'center', marginTop: 80, marginBottom: 20 }}>\n                    <Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordLogin\n                        isVisible={this.state.isLoggingIn}\n                        onRequestClose={() => {\n                            this.setState({ isLoggingIn : false });\n                            if(!this.state.user.is_configured) {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        onLoggedIn={(user) => {\n                            this.setState({ user, isLoggingIn: false }, this.getFriwords);\n                        }}\n                    />\n\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            // Reset filters and then fetch the first page\n                            filters.page = 0;\n                            filters.listing_mode = 1;\n                            this.setState({ filters, tabActiveKey: '1' }, this.getFriwords);\n                            notification.open({\n                                className: 'success',\n                                message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                                description: 'Tu friword fue publicado exitosamente en la sección `Recientes`',\n                            });\n                        }}\n                    />\n\n                    <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            onClick={() => {\n                                this.setState({ isCreating : true });\n                            }}\n                            type=\"primary\"\n                            icon={<Icons.PlusOutlined />}\n                            style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                            Escribir algo\n                        </Button>\n                    </div>\n\n                    <Tabs\n                        activeKey={this.state.tabActiveKey}\n                        type={'card'}\n                        onTabClick={(val) => {\n                            if(val == 2) {\n                                filters.only_me = true;\n                                filters.page = 0;\n                            } else {\n                                filters.only_me = false;\n                                filters.listing_mode = val;\n                                filters.page = 0;\n                            }\n                            this.setState({\n                                filters,\n                                tabActiveKey: val\n                            }, this.getFriwords);\n                        }}\n                        defaultActiveKey={'0'}>\n                        <TabPane\n                            tab={\n                                <span>\n                                    <Icons.HeartOutlined />\n                                        Más destacados\n                                    </span>\n                                }\n                            key={'0'}>\n                            { friwords && friwords.map((e, index) => (\n                                <FriwordCard\n                                    loading={this.state.isLoading}\n                                    friword={e}\n                                    comments={e.comments}\n                                    likes={e.likes_qty}\n                                    dislikes={e.dislikes_qty}\n                                    commentsQty={e.comments_qty}\n                                    user={this.state.user}\n                                    onLike={() => {\n                                        Services.Friwords.likeById(e.id, (success) => {\n                                            setTimeout(() => {\n                                                this.getFriwordById(e.id);\n                                            }, 500);\n                                        });\n                                    }}\n                                    onDislike={() => {\n                                        Services.Friwords.dislikeById(e.id, (success) => {\n                                            setTimeout(() => {\n                                                this.getFriwordById(e.id);\n                                            }, 500);\n                                        });\n                                    }}\n                                    onRequestComments={() => {\n                                        this.getFriwordById(e.id);\n                                    }}\n                                />\n                            ))}\n\n                            <Button\n                                onClick={() => {\n                                    filters.page += 1;\n                                    this.setState({ filters }, this.getFriwords);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.ReloadOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Cargar más\n                            </Button>\n                        </TabPane>\n\n                        <TabPane\n                            tab={\n                                <span>\n                                    <Icons.FieldTimeOutlined />\n                                        Recientes\n                                    </span>\n                                }\n                            key={'1'}>\n                            { friwords && friwords.map((e, index) => (\n                                <FriwordCard\n                                    loading={this.state.isLoading}\n                                    friword={e}\n                                    comments={e.comments}\n                                    likes={e.likes_qty}\n                                    dislikes={e.dislikes_qty}\n                                    commentsQty={e.comments_qty}\n                                    user={this.state.user}\n                                    onLike={() => {\n                                        Services.Friwords.likeById(e.id, (success) => {\n                                            setTimeout(() => {\n                                                this.getFriwordById(e.id);\n                                            }, 500);\n                                        });\n                                    }}\n                                    onDislike={() => {\n                                        Services.Friwords.dislikeById(e.id, (success) => {\n                                            setTimeout(() => {\n                                                this.getFriwordById(e.id);\n                                            }, 500);\n                                        });\n                                    }}\n                                    onRequestComments={() => {\n                                        this.getFriwordById(e.id);\n                                    }}\n                                />\n                            ))}\n\n                            <Button\n                                onClick={() => {\n                                    filters.page += 1;\n                                    this.setState({ filters }, this.getFriwords);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.ReloadOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Cargar más\n                            </Button>\n                        </TabPane>\n\n                        <TabPane\n                            tab={\n                                <span>\n                                    <Icons.FieldTimeOutlined />\n                                        Míos\n                                    </span>\n                                }\n                            key={'2'}>\n                            { friwords && friwords.map((e, index) => (\n                                <FriwordCard\n                                    loading={this.state.isLoading}\n                                    friword={e}\n                                    comments={e.comments}\n                                    likes={e.likes_qty}\n                                    dislikes={e.dislikes_qty}\n                                    commentsQty={e.comments_qty}\n                                    user={this.state.user}\n                                    onLike={() => {\n                                        Services.Friwords.likeById(e.id, (success) => {\n                                            setTimeout(() => {\n                                                this.getFriwordById(e.id);\n                                            }, 500);\n                                        });\n                                    }}\n                                    onDislike={() => {\n                                        Services.Friwords.dislikeById(e.id, (success) => {\n                                            setTimeout(() => {\n                                                this.getFriwordById(e.id);\n                                            }, 500);\n                                        });\n                                    }}\n                                    onRequestComments={() => {\n                                        this.getFriwordById(e.id);\n                                    }}\n                                />\n                            ))}\n\n                            <Button\n                                onClick={() => {\n                                    filters.page += 1;\n                                    this.setState({ filters }, this.getFriwords);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.ReloadOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Cargar más\n                            </Button>\n                        </TabPane>\n                    </Tabs>\n\n                    { this.state.isLoading &&\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Spin indicator={\n                                <Icons.LoadingOutlined style={{ fontSize: 24 }} spin />\n                            } />\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderWelcome() {\n        return (\n            <div className=\"friwords-container\">\n                <FriwordWelcome\n                    isVisible={this.state.isWelcome}\n                    onStart={() => {\n                        this.setState({ isWelcome : false }, this.getMe);\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description:\n                                'Bienvenid@ a Friwords. Empieza leyendo y publicando',\n                        });\n                    }}\n                    onRequestLogin={() => {\n                        this.setState({ isLoggingIn : true, isWelcome: false });\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\n\n// CSS Files\nimport './App.css';\nimport './assets/css/friwords.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}