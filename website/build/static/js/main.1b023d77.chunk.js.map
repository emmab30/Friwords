{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Notifications.js","services/Firebase.js","components/FriwordWelcome.js","components/FriwordLogin.js","components/FriwordCreatePost.js","components/FadeInSection.js","components/FriwordCard.js","components/FriwordsNotificationsPanel.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","onLike","onLikeComment","comment","playHeart","setState","isPlayingAnimation","stopHeart","state","randomColor","Math","floor","random","length","heartAnimation","liked","componentWillReceiveProps","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","isAdmin","user","alias","Item","dot","style","marginTop","width","height","borderRadius","backgroundColor","gender","marginBottom","className","padding","gutter","span","justify","display","flex","flexDirection","user_alias","justifyContent","alignItems","fontSize","textAlign","color","fontWeight","onClick","ref","e","options","isStopped","marginLeft","likes_qty","moment","created_at","fromNow","dangerouslySetInnerHTML","__html","html","fontFamily","ENVIRONMENTS","BASE_URL","SetToken","token","localStorage","setItem","ApiService","timeout","headers","getItem","api","axios","create","baseURL","getBaseUrl","interceptors","response","use","error","axiosRetry","retries","retryDelay","retryCount","setBaseUrl","baseUrl","encodeQueryData","parameters","ret","d","push","encodeURIComponent","join","Auth","isAuthenticated","register","success","post","then","catch","err","signInWithAlias","getMe","updateMe","generateRandomAlias","Friwords","getFriwords","getFriwordsByFilter","filter","getFriwordById","id","url","getPossibleMentionsByFriwordId","likeById","likeCommentById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","getTopics","Notifications","getNotifications","updateNotification","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Option","FriwordWelcome","getRandomAlias","isLoading","Services","auth","form","setFieldsValue","onFinish","password","onStart","open","message","description","isVisible","position","top","left","minHeight","zIndex","paddingBottom","maxWidth","margin","name","initialValues","rules","required","onChange","evt","value","prefix","placeholder","textDecoration","type","maxHeight","opacity","src","htmlType","loading","onRequestLogin","FriwordLogin","checkProps","friword","onLoggedIn","isValid","title","visible","closable","onCancel","onRequestClose","footer","TextArea","FriwordCreatePost","resetFields","onCreated","text","remember","topics","defaultValue","topic_id","map","autoSize","minRows","maxRows","maxLength","FadeInSection","useState","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","getMentions","FriwordCard","hasLiked","hasDisliked","isLoadingComments","isSendingComment","canLeaveComment","showComments","mentions","isOnlyFriword","comments","sendCommentSuffix","likes","dislikes","onRequestComments","twoToneColor","onPostedComment","spin","bordered","bodyStyle","paddingTop","avatar","size","substring","initialHeight","readMore","cursor","marginRight","comments_qty","index","refreshFriword","paddingLeft","paddingRight","topic","right","borderBottomLeftRadius","borderTopLeftRadius","FriwordsNotificationsPanel","idx","notifications","seen","notification","onClickNotification","borderBottomWidth","borderBottomColor","Title","TabPane","country_code","ip","ipInfo","country_name","country_code2","hasUpdates","filters","promises","friwords","_","some","Promise","resolve","reject","all","info","ordered","orderBy","page","concat","alert","displayOnlyThis","findIndex","currentFriwordId","refresh","onPressTopic","listing_mode","tabActiveKey","isViewingNotifications","isWelcome","isCreating","isLoggingIn","setInterval","renderWelcome","hasNoticicationsUnread","unread_notifications","borderLeft","borderBottom","textDecorationLine","href","borderBottomRightRadius","level","redirect_to","indexOf","replace","icon","dislikes_qty","commentsQty","setTimeout","disabled","activeKey","onTabClick","val","only_me","defaultActiveKey","tab","overflow","indicator","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b023d77.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Timeline\n} from 'antd';\n\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)],\n            isPlayingAnimation: false\n        };\n\n        this.heartAnimation = null;\n    }\n\n    onLike = () => {\n        if(this.props.onLikeComment)\n            this.props.onLikeComment(this.props.comment);\n    }\n\n    componentDidMount() {\n        const { comment } = this.props;\n\n        if(comment.liked == true) this.playHeart();\n        else this.stopHeart();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.comment) {\n\n            if(nextProps.comment.liked == true) this.playHeart();\n            else this.stopHeart();\n        } else {\n            this.stopHeart()\n        }\n    }\n\n    playHeart = () => {\n        this.setState({ isPlayingAnimation : true });\n    }\n\n    stopHeart = () => {\n        this.setState({ isPlayingAnimation : false });\n    }\n\n    render() {\n        const { comment } = this.props;\n        const defaultOptions = {\n            loop: false,\n            autoplay: false,\n            animationData: animationData.default,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        }\n\n        const isAdmin = comment && comment.user && (comment.user.alias == 'admin' || comment.user.alias == 'friwords');\n\n        return (\n            <Timeline.Item\n                dot={\n                    <div style={{ marginTop: 5, width: 10, height: 10, borderRadius: 5, backgroundColor: isAdmin ? '#ffa002' : (comment && comment.user && comment.user.gender == 'female' ? '#ff8b9a' : '#8baeff') }}></div>\n                }>\n                <div style={{ marginBottom: 0 }}>\n                    {/*<div style={{ width: '95%', marginLeft: '2%', height: 3, backgroundColor: 'rgba(0,0,0,.005)', marginTop: 5, marginBottom: 0 }} />*/}\n                    <div className={`custom-card`} style={{ width: '100%', padding: 5, marginBottom: 0, backgroundColor: 'white', borderRadius: 2 }}>\n                        <Row gutter={24}>\n                            <Col span={24} justify={'center'}>\n\n                                <div style={{ display: 'flex', flex: 1, flexDirection: 'row' }}>\n                                    <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\n                                        { comment && comment.user_alias &&\n                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                <div style={{ display: 'flex', flex: 1, marginBottom: 0, backgroundColor: 'white' }}>\n                                                    <span style={{ display: 'block', marginTop: 0, fontSize: 13, textAlign: 'left', color: isAdmin ? '#ffa002' : (comment && comment.user && comment.user.gender == 'female' ? '#ff8b9a' : '#8baeff'), fontWeight: 500 }}>@{ comment.user_alias }</span>\n                                                </div>\n\n                                                <div\n                                                    onClick={this.onLike}\n                                                    style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0 }}>\n                                                    <Lottie\n                                                        ref={(e) => { this.heartAnimation = e; }}\n                                                        options={defaultOptions}\n                                                        height={20}\n                                                        width={35}\n                                                        isStopped={!this.state.isPlayingAnimation}\n                                                    />\n                                                    <span style={{ color: '#f87676', marginLeft: -5, fontWeight: 800, fontSize: '0.75em' }}>{ comment.likes_qty }</span>\n                                                </div>\n                                            </div>\n                                        }\n\n                                        <div style={{ width: 'auto', marginBottom: 0, backgroundColor: 'white' }}>\n                                            <span style={{ display: 'block', marginTop: 2, marginBottom: 5, fontSize: 10, textAlign: 'left' }}>{ moment(comment.created_at).fromNow() }</span>\n                                        </div>\n\n                                        <span\n                                            dangerouslySetInnerHTML={{ __html: comment.html }}\n                                            style={{ color: 'rgba(0,0,0,.75)', fontSize: 13, fontFamily: 'Open Sans', marginLeft: 0, marginTop: 0, fontWeight: 400 }}></span>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Timeline.Item>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'https://api.friwords.com/api/v1/'\n};\n\nvar BASE_URL = process.env.NODE_ENV == 'development' ? ENVIRONMENTS.LOCAL : ENVIRONMENTS.PRODUCTION;\nvar JWT_TOKEN = null;\n\nexport function SetToken(token) {\n    localStorage.setItem('JWT_TOKEN', token);\n    JWT_TOKEN = token;\n}\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n\n        if(localStorage.getItem('JWT_TOKEN')) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem('JWT_TOKEN');\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        /*if (error.response.status === 401) {\n            alert(\"error\");\n        }*/\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    user: null,\n    isAuthenticated: () => {\n        return Auth.user != null\n    },\n    register: function(data, success, error) {\n        let url = 'auth/register';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    signInWithAlias: function(data, success, error) {\n        let url = 'auth/sign_in';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getMe: function(success, error) {\n        let url = 'profile/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateMe: function(data, success, error) {\n        let url = 'profile/me';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    generateRandomAlias: function(success, error) {\n        let url = 'auth/generate_alias';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordsByFilter: function(filter, success, error) {\n        let url = 'friwords/filter';\n\n        ApiService().post(url, filter).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getPossibleMentionsByFriwordId: function(id, success, error) {\n        let url = `friwords/${id}/possible_mentions`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeCommentById: function(id, success, error) {\n        let url = `friwords/comments/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getTopics: function(success, error) {\n        let url = `friwords/topics`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import { ApiService } from './BaseService.js';\n\nvar Notifications = {\n    getNotifications: function(success, error) {\n        let url = 'notifications/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateNotification: function(data, success, error) {\n        let url = `notifications/${data.id}/update`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Notifications;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n    authDomain: \"friwords-a3536.firebaseapp.com\",\n    databaseURL: \"https://friwords-a3536.firebaseio.com\",\n    projectId: \"friwords-a3536\",\n    storageBucket: \"friwords-a3536.appspot.com\",\n    messagingSenderId: \"882500991771\",\n    appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n    measurementId: \"G-P8SQZY3BKH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordWelcome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.getRandomAlias();\n    }\n\n    getRandomAlias = () => {\n        this.setState({ isLoading: true });\n        Services.Auth.generateRandomAlias((data) => {\n            this.setState({ isLoading: false });\n            if(data.success) {\n                let auth = this.state.auth;\n                auth.alias = data.alias;\n                this.setState({ auth });\n\n                this.form.setFieldsValue({\n                    alias: data.alias\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    onFinish = () => {\n        if(!this.state.auth.gender) {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Escoge tu género',\n            });\n            return;\n        };\n\n        this.setState({ isLoading : true });\n        Services.Auth.register({\n            alias: this.state.auth.alias,\n            password: this.state.auth.password,\n            gender: this.state.auth.gender\n        }, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                if(this.props.onStart)\n                    this.props.onStart();\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message,\n                });\n            }\n\n            this.setState({ isLoading : false });\n        }, (err) => {\n            // Do nothing\n            this.setState({ isLoading : false });\n        });\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        if(!this.props.isVisible)\n            return null;\n\n        return (\n            <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', minHeight: '100%', zIndex: 99999, backgroundColor: '#25b864', paddingBottom: 20 }}>\n                <h1 style={{ textAlign: 'center', color: 'white', marginTop: 10 }}>Ingresa a Friwords</h1>\n\n                <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <p style={{ maxWidth: '80%', margin: '0 auto', color: 'rgba(255,255,255,.8)', textAlign: 'center' }}>Crea tu alias y tu contraseña. Recordá que <b>todo será anónimo</b></p>\n\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    initialValues={{\n                        alias: auth.alias\n                    }}\n                    onFinish={this.onFinish}>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<span>@</span>} placeholder=\"Tu alias\" />\n                    </Form.Item>\n\n                    <a\n                        onClick={this.getRandomAlias}\n                        style={{ width: '90%', color: 'white', textDecoration: 'underline', marginLeft: '5%', margin: '0 auto', padding: 0, display: 'block', marginBottom: 5 }}\n                    >Generar alias al azar</a>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Ingresa una contraseña' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600, color: 'white' }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'female';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'female' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'male';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'male' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading} style={{ display: 'flex', width: '75%', margin: '0 auto', backgroundColor: 'white', height: 50, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', color: '#00a2ff', marginTop: 15 }}>\n                            Registrarme\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <Button\n                    onClick={() => {\n                        this.props.onRequestLogin();\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={this.state.isLoading} style={{ display: 'flex', width: '100%', margin: '0 auto', height: 40, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', backgroundColor: '#00a2ff' }}>\n                    ¡Ya tengo un alias!\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        this.setState({ isLoading : true });\n        Services.Auth.signInWithAlias(this.state.auth, (data) => {\n            this.setState({ isLoading : false });\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                this.props.onLoggedIn(data.user);\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading : false });\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Ese alias no es válido'\n            });\n\n            return false;\n        });\n    }\n\n    isValid = () => {\n        return true;\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Ingresá con tu alias`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¿Tienes un alias distinto? Ingresa tu alias y la contraseña que se te pidió al crearlo.</span>\n                    </div>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            prefix={<Icons.UserSwitchOutlined className=\"site-form-item-icon\" />} placeholder=\"Alias\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa la contraseña' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Ingresar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    { this.props.topics != null &&\n                        <Select\n                            defaultValue=\"Escoge un tópico\"\n                            style={{ width: '100%', marginBottom: 15 }}\n                            onChange={(value) => {\n                                friword.topic_id = value;\n                                this.setState({ friword });\n                            }}>\n                            { this.props.topics.map((e) => {\n                                return (\n                                    <Option value={ e.id }>#{e.name}</Option>\n                                );\n                            })}\n                        </Select>\n                    }\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa el texto' }]}>\n                        <TextArea\n                            placeholder=\"Escribe tu friword\"\n                            autoSize={{ minRows: 2, maxRows: 8 }}\n                            maxLength={750}\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />}\n                        />\n                    </Form.Item>\n                    <span>{750 - (friword && friword.text && friword.text.length ? friword.text.length : 0)} caracteres restantes</span>\n\n                    <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.05)', marginTop: 5, marginBottom: 10 }}></div>\n\n                    {/*<span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600 }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'female';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'female' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'male';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'male' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>*/}\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Publicar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification,\n    Mentions,\n    Timeline\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\nimport FadeInSection from './FadeInSection'\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\n// Modules\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ReadMore from '@crossfield/react-read-more';\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\nconst { Option, getMentions } = Mentions;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n            mentions: null,\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false,\n            friword: null\n        };\n    }\n\n    componentDidMount() {\n        // Get possible mentions\n        if(this.props.user != null) {\n            Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n                if(data.success) {\n                    this.setState({ mentions : data.mentions });\n                }\n            }, (err) => {\n                // Do nothing\n            });\n        }\n\n        if(this.props.friword != null) {\n            this.setState({ friword : this.props.friword });\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.friword != null) {\n            this.setState({ friword : nextProps.friword });\n        }\n\n        if(this.props.user != null && !this.state.mentions) {\n            Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n                if(data.success) {\n                    this.setState({ mentions : data.mentions });\n                } else {\n                    this.setState({ mentions : [] });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ mentions : [] });\n            });\n        }\n\n        if(nextProps.isOnlyFriword == true && nextProps.friword && nextProps.friword.comments) {\n            this.setState({ showComments : true });\n        }\n    }\n\n    onLike = () => {\n        if(this.props.user == null){\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'No se pudo dar like. Debes ingresar con tu alias para hacer esto',\n            });\n            return;\n        } else if(this.state.hasLiked || this.state.hasDisliked) {\n            return;\n        }\n\n        const { friword } = this.state;\n        friword.liked = true;\n        this.setState({ friword });\n\n        this.props.onLike();\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        if(!friword)\n            return null;\n\n        const { mentions } = this.state;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n\n                    if(this.props.user == null) {\n                        notification.open({\n                            className: 'error',\n                            message: 'Ingresa primero',\n                            description:\n                                'Ingresa o crea tu alias para dejar comentarios',\n                        });\n                        return;\n                    }\n\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification.open({\n                            className: 'error',\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n\n                    this.setState({ isSendingComment : true });\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: false,\n                            showComments: true\n                        });\n\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n\n                        if(this.props.onPostedComment)\n                            this.props.onPostedComment();\n                    }, (err) => {\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'transparent', padding: 0, marginTop: 0, display: 'flex', flex: 1 }}>\n                <a style={{ fontWeight: 800, padding: 15 }}>Enviar</a>\n                {/*<Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />*/}\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        let isMale = friword && friword.user && friword.user.gender == 'male';\n        let isFemale = friword && friword.user && friword.user.gender == 'female';\n        const defaultOptions = {\n            loop: false,\n            autoplay: false,\n            animationData: animationData.default,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        }\n\n        return (\n            <FadeInSection key={friword.id}>\n                <div className={`data-node-${friword.id}`}>\n                    <div style={{ width: '100%' }}>\n                        <div style={{ width: '100%', height: 15, backgroundColor: 'rgba(0,0,0,.1)' }}></div>\n                        <Card\n                            bordered={false}\n                            // loading={this.props.loading}\n                            bodyStyle={{ padding: 10, paddingTop: 20, opacity: this.props.loading ? .1 : 1 }}>\n                            <Meta\n                                avatar={\n                                    <Avatar\n                                        src={friword && friword.user && friword.user.gender == 'female' ? 'https://image.flaticon.com/icons/svg/2284/2284897.svg' : 'https://image.flaticon.com/icons/svg/2284/2284900.svg'}\n                                        size={'large'}\n                                        style={{ borderRadius: 0, width: 30, height: 30 }}\n                                    />\n                                }\n                                title={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span>\n                                            { `${friword.text.substring(0, 30)}...` }\n                                        </span>\n                                    </div>\n                                }\n                                description={\n                                    <ReadMore\n                                        initialHeight={250}\n                                        readMore={props => (\n                                            <div\n                                                style={{ width: '100%', padding: 0, marginTop: 5, cursor: 'pointer' }}\n                                                onClick={props.onClick}>\n                                                <span style={{ color: 'white', fontWeight: 400, fontSize: '.75em', marginRight: 5, backgroundColor: 'rgba(20, 20, 20, .75)', padding: 5, borderRadius: 5 }}>\n                                                    {props.open ? 'Leer menos' : 'Leer más'}\n                                                </span>\n                                            </div>\n                                        )}>\n                                        <span style={{ fontSize: '0.9em' }}>{ `${friword.text}` }</span>\n                                    </ReadMore>\n                                }\n                            />\n\n                            <span style={{ display: 'block', marginTop: 10, fontSize: 10, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>\n\n                            { friword && friword.user_alias &&\n                                <span style={{ display: 'block', marginTop: 0, fontSize: 10, textAlign: 'right' }}>por <span style={{ color: '#25b864', fontWeight: 600 }}>@{ friword.user_alias }</span></span>\n                            }\n\n                            <div\n                                onClick={this.onLike}\n                                style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center', marginTop: 5, marginBottom: 5 }}>\n                                <Lottie\n                                    options={defaultOptions}\n                                    autoplay={false}\n                                    height={50}\n                                    width={32}\n                                    isStopped={!friword.liked}\n                                />\n                                <span style={{ color: '#f87676', marginLeft: 5, fontWeight: 800 }}>{ this.props.likes } like{this.props.likes > 1 ? 's' : ''}</span>\n                            </div>\n\n                            { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                                <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                            }\n\n                            { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: true,\n                                            showComments: true\n                                        });\n                                        this.props.onRequestComments();\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginTop: 0, marginBottom: 10, marginLeft: 7, fontWeight: 400, textDecoration: 'underline' }}>\n                                    Ver { friword.comments_qty } comentario{friword.comments_qty > 1 ? 's' : ''}\n                                </a>\n                            }\n\n                            { friword.comments != null && friword.comments.length > 0 && this.state.showComments &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: false,\n                                            showComments: false\n                                        });\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginBottom: 15, fontWeight: 500 }}>\n                                    Ocultar comentarios\n                                </a>\n                            }\n\n                            <div style={{ marginLeft: 5 }}>\n                                <Timeline>\n                                    { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e, index) => {\n                                        return (\n                                            <FriwordComment\n                                                key={`comment_${e.id}`}\n                                                comment={e}\n                                                onLikeComment={(comment) => {\n                                                    if(this.props.user != null) {\n                                                        Services.Friwords.likeCommentById(comment.id, (data) => {\n                                                            this.props.refreshFriword();\n                                                        }, (err) => {\n                                                            this.props.refreshFriword();\n                                                        });\n                                                    } else {\n                                                        notification.open({\n                                                            className: 'error',\n                                                            message: 'Oops',\n                                                            description: 'No se pudo dar like. Debes ingresar con tu alias para hacer esto',\n                                                        });\n                                                        return;\n                                                    }\n                                                }}\n                                            />\n                                        );\n                                    })}\n                                </Timeline>\n                            </div>\n\n                            { this.state.canLeaveComment &&\n                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0 }}>\n                                    <div style={{ display: 'flex', flex: 1 }}>\n                                        <Form\n                                            name=\"post_comment\"\n                                            style={{ width: '100%', paddingLeft: 0, paddingRight: 0, position: 'relative' }}>\n                                            <Form.Item\n                                                name=\"comment\"\n                                                rules={[{ required: true, message: 'Ingresa un comentario' }]}\n                                                style={{ marginBottom: 0, paddingBottom: 0 }}>\n                                                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                    <Mentions\n                                                        onChange={(comment) => {\n                                                            this.setState({ comment });\n                                                        }}\n                                                        className=\"input-comment\"\n                                                        placeholder=\"Deja tu comentario\"\n                                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                                        maxLength={750}>\n                                                        { mentions && mentions.map((e) => {\n                                                            return (\n                                                                <Option value={e.alias}>{e.alias}</Option>\n                                                            );\n                                                        })}\n                                                    </Mentions>\n\n                                                    { sendCommentSuffix }\n                                                </div>\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </div>\n                            }\n\n                            { this.props.user == null &&\n                                <div style={{ width: '100%', backgroundColor: '#25b864', padding: 5, marginTop: 10, borderRadius: 2 }}>\n                                    <span style={{ display: 'block', fontSize: 12, fontWeight: 600, textAlign: 'left', color: 'white' }}>Creá tu alias anónimo para dejar un comentario</span>\n                                </div>\n                            }\n\n                            { this.state.friword && this.state.friword.topic != null &&\n                                <div style={{ width: 'auto', position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(0,0,0,.85)', color: 'white', fontSize: '0.7em', borderBottomLeftRadius: 3, borderTopLeftRadius: 0, padding: 5, opacity: .8 }}>\n                                    #{this.state.friword.topic.name}\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                </div>\n            </FadeInSection>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport moment from 'moment';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordsNotificationsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            notifications: []\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps);\n    }\n\n    checkProps = (props) => {\n        this.setState({ isVisible : props.isVisible });\n        if(props.isVisible == true && this.state.isVisible == false) {\n            this.getNotifications();\n        }\n    }\n\n    getNotifications = () => {\n        this.setState({ isLoading : true });\n        Services.Notifications.getNotifications((data) => {\n            if(data.success) {\n                this.setState({\n                    notifications: data.notifications,\n                    isLoading: false\n                });\n\n                // Mark as seen\n                for(var idx in data.notifications) {\n                    Services.Notifications.updateNotification({\n                        id: data.notifications[idx].id,\n                        seen: true\n                    }, (response) => {\n                        let notifications = this.state;\n                        notifications[idx].seen = true;\n                        this.setState({ notifications });\n                    });\n                }\n            }\n        }, (err) => {\n            this.setState({\n                notifications: [],\n                isLoading: false\n            });\n            // Do nothing\n        });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            notifications,\n            friword,\n            isLoading\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Tus notificaciones`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n\n                { !isLoading && notifications && notifications.length > 0 && notifications.map((notification) => {\n                    return (\n                        <div\n                            onClick={() => {\n                                if(this.props.onClickNotification){\n                                    this.props.onClickNotification(notification);\n                                }\n                            }}\n                            style={{ width: '100%', marginBottom: 10, position: 'relative', backgroundColor: !notification.seen ? 'rgba(255, 160, 0, .15)' : 'white', padding: 10, borderRadius: 5 }}>\n\n                            <div style={{ width: '100%', borderBottomWidth: 5, borderBottomColor: 'rgba(0,0,0,.05)' }} dangerouslySetInnerHTML={{ __html: notification.html }}></div>\n\n                            <span style={{ display: 'block', width: '100%', fontSize: 11, marginTop: 5, textAlign: 'right' }}>{ moment(notification.created_at).fromNow() }</span>\n\n                            <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.1)', marginTop: 10 }}></div>\n                        </div>\n                    );\n                })}\n\n                { !isLoading && (!notifications || notifications.length == 0) &&\n                    <span>¡Aún no tienes notificaciones para revisar!</span>\n                }\n\n                { isLoading &&\n                    <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                }\n\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    DatePicker,\n    Switch,\n    Slider,\n    Button,\n    Typography,\n    Tabs,\n    notification,\n    Spin\n} from 'antd';\n\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\n\n// Cards\nimport FriwordWelcome from '../components/FriwordWelcome';\nimport FriwordLogin from '../components/FriwordLogin';\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\nimport FriwordsNotificationsPanel from '../components/FriwordsNotificationsPanel';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            topics: [],\n            filters: {\n                listing_mode : 1,\n                page: 0\n            },\n            tabActiveKey: '1',\n            isViewingNotifications: false,\n            isWelcome: false,\n            isCreating: false,\n            isLoggingIn: false,\n            isLoading: true,\n            hasUpdates: false,\n            /*previousOnlineUsers: 132,\n            newOnlineUsers: 132,*/\n            user: null,\n            currentFriwordId: null\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n        this.getMe();\n        this.getTopics();\n\n        setInterval(this.getMe, 10000);\n    }\n\n    getTopics = () => {\n        Services.Friwords.getTopics((data) => {\n            if(data.success) {\n                this.setState({ topics: data.topics });\n            }\n        }, (err) => {});\n    }\n\n    getMe = () => {\n        Services.Auth.getMe((data) => {\n            if(data.success) {\n                if(data.user != null) {\n                    this.setState({ user: data.user });\n\n                    Services.Auth.user = data.user;\n\n                    if(data.user && !data.user.country_code && !data.user.ip) {\n                        const apiKey = '45c816eed2d04a8b96e59ff177c609af';\n                        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&fields=geo&output=json`).then((data) => {\n                            if(data && data.data) {\n                                const ipInfo = data.data;\n                                Services.Auth.updateMe({\n                                    country_name: ipInfo && ipInfo.country_name,\n                                    country_code: ipInfo && ipInfo.country_code2,\n                                    ip: ipInfo && ipInfo.ip\n                                }, (success) => {\n                                    if(success.success) {\n                                        this.setState({ user : success.user });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    getFriwords = () => {\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwordsByFilter(this.state.filters, (data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n\n                // If there are friwords on the state, we need to append this list (since it's a new page)\n                if(this.state.friwords && this.state.friwords.length > 0 && this.state.filters.page > 0)\n                    ordered = this.state.friwords.concat(ordered);\n\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id, displayOnlyThis = false) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                if(displayOnlyThis) {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = [data.friword];\n                    this.setState({\n                        friwords,\n                        currentFriwordId: id,\n                        isLoading: false\n                    }, this.getMe);\n                } else {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = this.state.friwords;\n                    friwords[index] = data.friword;\n                    this.setState({\n                        friwords,\n                        isLoading: false\n                    });\n                }\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    refresh = () => {\n        this.getFriwords();\n        this.getMe();\n    }\n\n    isAuthenticated = () => {\n        return Services.Auth.isAuthenticated();\n    }\n\n    onPressTopic = (topic) => {\n        const { filters } = this.state;\n        if(filters.topic_id != null && filters.topic_id == topic.id) {\n            delete filters.topic_id;\n        } else {\n            filters.topic_id = topic.id;\n        }\n\n        this.setState({ filters }, this.getFriwords);\n    }\n\n    render() {\n        const {\n            friwords,\n            filters\n        } = this.state;\n\n        if(this.state.isWelcome) {\n            return this.renderWelcome();\n        }\n\n        const hasNoticicationsUnread = this.state.user != null && this.state.user.unread_notifications > 0;\n\n        return (\n            <div className=\"friwords-container\">\n                <div style={{ width: '100%', height: 45, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 45, display: 'flex', flexDirection: 'column', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                        <a\n                            style={{ textDecorationLine: 'underline', fontSize: '0.6em' }}\n                            href=\"#\"\n                            onClick={() => {\n                                if(this.isAuthenticated()) {\n                                    this.setState({ isLoggingIn : true });\n                                } else {\n                                    this.setState({ isWelcome : true });\n                                }\n                            }}\n                        >{ this.isAuthenticated() ? 'Cambiar' : 'Registrar alias' }</a>\n                    </div>\n                    <div\n                        className=\"counter-online-users\"\n                        onClick={() => {\n                            if(this.isAuthenticated()) {\n                                this.setState({ isViewingNotifications : true });\n                            } else {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        style={{ height: 45, display: 'flex', flex: hasNoticicationsUnread ? 1 : 0, justifyContent: 'center', alignItems: 'center', backgroundColor: hasNoticicationsUnread ? '#fccf84' : 'white', borderTopLeftRadius: 0, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', paddingLeft: 10, paddingRight: 10 }}>\n                        <p style={{ fontWeight: 600, margin: 0, padding: 0, fontSize: '0.75em' }}>{ hasNoticicationsUnread ? `${this.state.user.unread_notifications} nueva${this.state.user.unread_notifications > 1 ? 's' : ''}` : 0 }</p>\n                        <img\n                            style={{ width: 20, height: 20, marginLeft: 5, opacity: 1 }}\n                            src={`/img/bell-${hasNoticicationsUnread ? 'on' : 'off'}.png`} />\n                    </div>\n                    <div\n                        onClick={this.refresh}\n                        style={{ height: 45, display: 'flex', flex: 0, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '0px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.2)', paddingLeft: 10, paddingRight: 10 }}>\n                        <img\n                            style={{ width: 25, height: 25, marginLeft: 0, opacity: this.state.isLoading ? .1 : 1 }}\n                            src=\"/img/update.png\" />\n                    </div>\n                </div>\n\n                <section style={{ textAlign: 'center', marginTop: 80, marginBottom: 20 }}>\n                    <Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordsNotificationsPanel\n                        isVisible={this.state.isViewingNotifications}\n                        user={this.state.user}\n                        onRequestClose={() => {\n                            this.setState({ isViewingNotifications : false }, this.getMe);\n                        }}\n                        onClickNotification={(e) => {\n                            if(e.redirect_to != null) {\n                                if(e.redirect_to.indexOf('friword/') > -1) {\n                                    this.setState({ isLoading : true, isViewingNotifications: false });\n                                    this.getFriwordById(e.redirect_to.replace('friword/', ''), true);\n                                }\n                            }\n                        }}\n                    />\n\n                    <FriwordLogin\n                        isVisible={this.state.isLoggingIn}\n                        onRequestClose={() => {\n                            this.setState({ isLoggingIn : false });\n                            /*if(!this.state.user || !this.state.user.is_configured) {\n                                this.setState({ isWelcome : true });\n                            }*/\n                        }}\n                        onLoggedIn={(user) => {\n                            this.setState({ user, isLoggingIn: false }, this.refresh);\n                        }}\n                    />\n\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        topics={this.state.topics}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            // Reset filters and then fetch the first page\n                            filters.page = 0;\n                            filters.listing_mode = 1;\n                            this.setState({ filters, tabActiveKey: '1' }, this.refresh);\n                            notification.open({\n                                className: 'success',\n                                message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                                description: 'Tu friword fue publicado exitosamente en la sección `Últimos Friwords`',\n                            });\n                        }}\n                    />\n\n                    { this.state.currentFriwordId != null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    this.setState({ currentFriwordId: null }, this.refresh);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.RollbackOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40, backgroundColor: '#007eff' }}>\n                                Volver atrás\n                            </Button>\n                        </div>,\n                        <FriwordCard\n                            isOnlyFriword={true}\n                            loading={this.state.isLoading}\n                            friword={this.state.friwords[0]}\n                            comments={this.state.friwords[0].comments}\n                            likes={this.state.friwords[0].likes_qty}\n                            dislikes={this.state.friwords[0].dislikes_qty}\n                            commentsQty={this.state.friwords[0].comments_qty}\n                            user={this.state.user}\n                            onLike={() => {\n                                Services.Friwords.likeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onRequestComments={() => {\n                                this.getFriwordById(this.state.friwords[0].id, true);\n                            }}\n                            onPostedComment={this.getMe}\n                        />\n                    ]}\n\n                    { this.state.currentFriwordId == null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                disabled={this.state.user == null}\n                                onClick={() => {\n                                    if(this.isAuthenticated()) {\n                                        this.setState({ isCreating : true });\n                                    } else {\n                                        this.setState({ isWelcome : true });\n                                    }\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.PlusOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', justifyContent: 'center', alignItems: 'center', height: 40, backgroundColor: 'white', color: '#25b864' }}>\n                                Publicá tu Friword\n                            </Button>\n                        </div>,\n                        (this.state.user == null &&\n                            <a\n                                onClick={() => {\n                                    this.setState({ isWelcome : true })\n                                }}\n                                style={{ display: 'block', textAlign: 'center', marginTop: 15, fontWeight: 600, marginRight: 0, textDecoration: 'underline' }}>\n                                Registrá un alias para comentar y publicar nuevos Friwords\n                            </a>\n                        ),\n                        <Tabs\n                            style={{ marginTop: 20 }}\n                            activeKey={this.state.tabActiveKey}\n                            type={'card'}\n                            onTabClick={(val) => {\n                                if(val == 2) {\n                                    filters.only_me = true;\n                                    filters.page = 0;\n                                } else {\n                                    filters.only_me = false;\n                                    filters.listing_mode = val;\n                                    filters.page = 0;\n                                }\n                                this.setState({\n                                    filters,\n                                    tabActiveKey: val\n                                }, this.getFriwords);\n                            }}\n                            defaultActiveKey={'1'}>\n                            { /* <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.HeartOutlined />\n                                            Más destacados\n                                        </span>\n                                    }\n                                key={'0'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    loading={this.state.isLoading}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane> */ }\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.AlignCenterOutlined />\n                                            Friwords\n                                        </span>\n                                    }\n                                key={'1'}>\n\n                                { this.state.topics != null && this.state.topics.length > 0 &&\n                                    <div style={{ paddingTop: 0, paddingLeft: 5 }}>\n                                        <h3>Trending topics</h3>\n\n                                        <div style={{ display: 'flex', flexDirection: 'row', overflow: 'scroll', paddingBottom: 15 }}>\n                                            { this.state.topics.map((e, index) => {\n                                                return (\n                                                    <div\n                                                        className=\"card-topic\"\n                                                        onClick={this.onPressTopic.bind(this, e)}\n                                                        style={{\n                                                            width: 'auto',\n                                                            padding: 5,\n                                                            backgroundColor: filters.topic_id == e.id ? '#25b864': 'rgba(37, 184, 100, .65)',\n                                                            opacity: (filters.topic_id != null && filters.topic_id != e.id) ? .2 : 1,\n                                                            color: 'white',\n                                                            borderRadius: 10,\n                                                            marginLeft: index == 0 ? 0 : 5 }}>\n                                                        #{ e.name }\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                }\n\n                                { !this.state.isLoading && (!friwords || !friwords.length) &&\n                                    <p style={{ textAlign: 'center', marginTop: 10, color: '#fe553a', fontWeight: 600 }}>No hay friwords publicados con esos filtros. Inténtalo nuevamente</p>\n                                }\n\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    loading={this.state.isLoading}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            { this.state.user != null &&\n                                <TabPane\n                                    tab={\n                                        <span>\n                                            <Icons.FieldTimeOutlined />\n                                                Mis friwords\n                                            </span>\n                                        }\n                                    key={'2'}>\n                                    { friwords && friwords.map((e, index) => (\n                                        <FriwordCard\n                                            loading={this.state.isLoading}\n                                            friword={e}\n                                            comments={e.comments}\n                                            likes={e.likes_qty}\n                                            dislikes={e.dislikes_qty}\n                                            commentsQty={e.comments_qty}\n                                            user={this.state.user}\n                                            onLike={() => {\n                                                Services.Friwords.likeById(e.id, (success) => {\n                                                    setTimeout(() => {\n                                                        this.getFriwordById(e.id);\n                                                    }, 500);\n                                                });\n                                            }}\n                                            onRequestComments={() => {\n                                                this.getFriwordById(e.id);\n                                            }}\n                                            onPostedComment={this.getMe}\n                                            refreshFriword={() => {\n                                                this.getFriwordById(e.id, false);\n                                            }}\n                                        />\n                                    ))}\n\n                                    <Button\n                                        onClick={() => {\n                                            filters.page += 1;\n                                            this.setState({ filters }, this.getFriwords);\n                                        }}\n                                        type=\"primary\"\n                                        loading={this.state.isLoading}\n                                        icon={<Icons.ReloadOutlined />}\n                                        style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                        Cargar más\n                                    </Button>\n                                </TabPane>\n                            }\n                        </Tabs>\n                    ]}\n\n                    { this.state.isLoading &&\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Spin indicator={\n                                <Icons.LoadingOutlined style={{ fontSize: 24 }} spin />\n                            } />\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderWelcome() {\n        return (\n            <div className=\"friwords-container\">\n                <FriwordWelcome\n                    isVisible={this.state.isWelcome}\n                    onStart={() => {\n                        this.setState({ isWelcome : false }, this.getMe);\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description:\n                                'Bienvenid@ a Friwords. Empieza leyendo y publicando',\n                        });\n\n                        setTimeout(() => {\n                            this.getFriwords();\n                        }, 3000);\n                    }}\n                    onRequestLogin={() => {\n                        this.setState({ isLoggingIn : true, isWelcome: false });\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\n\n// CSS Files\nimport './App.css';\nimport './assets/css/friwords.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}