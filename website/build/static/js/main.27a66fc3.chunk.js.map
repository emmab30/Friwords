{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Notifications.js","services/Firebase.js","components/FriwordWelcome.js","components/FriwordLogin.js","components/FriwordCreatePost.js","components/FadeInSection.js","components/FriwordCard.js","components/FriwordsNotificationsPanel.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","state","randomColor","Math","floor","random","length","comment","style","marginBottom","width","borderLeft","hexToRgbA","paddingLeft","marginTop","gutter","span","justify","user_alias","display","fontSize","textAlign","color","fontWeight","dangerouslySetInnerHTML","__html","html","fontFamily","marginLeft","hex","opacity","c","test","substring","split","join","Error","ENVIRONMENTS","BASE_URL","SetToken","token","localStorage","setItem","ApiService","timeout","headers","getItem","api","axios","create","baseURL","getBaseUrl","interceptors","response","use","error","axiosRetry","retries","retryDelay","retryCount","setBaseUrl","baseUrl","encodeQueryData","parameters","ret","d","push","encodeURIComponent","Auth","user","isAuthenticated","register","success","post","then","catch","err","signInWithAlias","getMe","updateMe","generateRandomAlias","Friwords","getFriwords","getFriwordsByFilter","filter","getFriwordById","id","url","getPossibleMentionsByFriwordId","likeById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","Notifications","getNotifications","updateNotification","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Option","FriwordWelcome","getRandomAlias","setState","isLoading","Services","auth","alias","form","setFieldsValue","onFinish","gender","password","onStart","open","className","message","description","isVisible","position","top","left","minHeight","zIndex","backgroundColor","paddingBottom","height","maxWidth","margin","ref","e","name","initialValues","Item","rules","required","onChange","evt","value","prefix","placeholder","onClick","textDecoration","padding","type","flexDirection","flex","justifyContent","alignItems","maxHeight","src","htmlType","loading","onRequestLogin","FriwordLogin","checkProps","friword","onLoggedIn","isValid","componentWillReceiveProps","title","visible","closable","onCancel","onRequestClose","footer","TextArea","FriwordCreatePost","resetFields","onCreated","text","remember","autoSize","minRows","maxRows","maxLength","FadeInSection","useState","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","getMentions","FriwordCard","onDislike","hasLiked","hasDisliked","hideDislikeBtn","setTimeout","onLike","hideLikeBtn","isLoadingComments","isSendingComment","canLeaveComment","showComments","mentions","sendCommentSuffix","likes","dislikes","onRequestComments","twoToneColor","onPostedComment","console","log","spin","bordered","bodyStyle","avatar","size","shape","borderRadius","country_code","marginRight","duration","particlesAmountCoefficient","oscillationCoefficient","hidden","cursor","comments","comments_qty","map","paddingRight","FriwordsNotificationsPanel","idx","notifications","seen","notification","onClickNotification","borderBottomWidth","borderBottomColor","moment","created_at","fromNow","Title","TabPane","ip","ipInfo","country_name","country_code2","hasUpdates","filters","promises","friwords","_","some","Promise","resolve","reject","all","info","ordered","orderBy","page","concat","alert","displayOnlyThis","findIndex","currentFriwordId","index","refresh","listing_mode","tabActiveKey","isViewingNotifications","isWelcome","isCreating","isLoggingIn","renderWelcome","hasNoticicationsUnread","unread_notifications","right","borderTopLeftRadius","borderBottomLeftRadius","borderBottom","textDecorationLine","href","borderBottomRightRadius","level","redirect_to","indexOf","replace","is_configured","icon","likes_qty","dislikes_qty","commentsQty","activeKey","onTabClick","val","only_me","defaultActiveKey","tab","indicator","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27a66fc3.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar\n} from 'antd';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)]\n        };\n    }\n    render() {\n        const { comment } = this.props;\n\n        return (\n            <div style={{ marginBottom: 15 }}>\n                {/*<div style={{ width: '95%', marginLeft: '2%', height: 3, backgroundColor: 'rgba(0,0,0,.005)', marginTop: 5, marginBottom: 0 }} />*/}\n                <div style={{ width: '100%', borderLeft: `4px solid ${hexToRgbA(this.state.randomColor, .2)}`, paddingLeft: 10, marginTop: 0 }}>\n                    <Row gutter={24}>\n                        <Col span={24} justify={'center'}>\n                            { comment && comment.user_alias &&\n                                <span style={{ display: 'block', marginTop: 0, fontSize: 10, textAlign: 'left' }}><span style={{ color: '#25b864', fontWeight: 600 }}>@{ comment.user_alias }</span></span>\n                            }\n\n                            <span\n                                dangerouslySetInnerHTML={{ __html: comment.html }}\n                                style={{ color: 'rgba(0,0,0,.75)', fontSize: 12, fontFamily: 'Open Sans', marginLeft: 0, marginTop: 5 }}></span>\n\n                            { false && comment && comment.user && comment.user.country_code != null &&\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\n                                    <img\n                                        style={{ width: 20 }}\n                                        src={`https://www.countryflags.io/${comment.user.country_code}/shiny/64.png`}\n                                    />\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'https://api.friwords.com/api/v1/'\n};\n\nvar BASE_URL = process.env.NODE_ENV == 'development' ? ENVIRONMENTS.LOCAL : ENVIRONMENTS.PRODUCTION;\nvar JWT_TOKEN = null;\n\nexport function SetToken(token) {\n    localStorage.setItem('JWT_TOKEN', token);\n    JWT_TOKEN = token;\n}\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n\n        if(localStorage.getItem('JWT_TOKEN')) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem('JWT_TOKEN');\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        /*if (error.response.status === 401) {\n            alert(\"error\");\n        }*/\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    user: null,\n    isAuthenticated: () => {\n        return Auth.user != null\n    },\n    register: function(data, success, error) {\n        let url = 'auth/register';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    signInWithAlias: function(data, success, error) {\n        let url = 'auth/sign_in';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getMe: function(success, error) {\n        let url = 'profile/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateMe: function(data, success, error) {\n        let url = 'profile/me';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    generateRandomAlias: function(success, error) {\n        let url = 'auth/generate_alias';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordsByFilter: function(filter, success, error) {\n        let url = 'friwords/filter';\n\n        ApiService().post(url, filter).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getPossibleMentionsByFriwordId: function(id, success, error) {\n        let url = `friwords/${id}/possible_mentions`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import { ApiService } from './BaseService.js';\n\nvar Notifications = {\n    getNotifications: function(success, error) {\n        let url = 'notifications/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateNotification: function(data, success, error) {\n        let url = `notifications/${data.id}/update`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Notifications;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n    authDomain: \"friwords-a3536.firebaseapp.com\",\n    databaseURL: \"https://friwords-a3536.firebaseio.com\",\n    projectId: \"friwords-a3536\",\n    storageBucket: \"friwords-a3536.appspot.com\",\n    messagingSenderId: \"882500991771\",\n    appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n    measurementId: \"G-P8SQZY3BKH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordWelcome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.getRandomAlias();\n    }\n\n    getRandomAlias = () => {\n        this.setState({ isLoading: true });\n        Services.Auth.generateRandomAlias((data) => {\n            this.setState({ isLoading: false });\n            if(data.success) {\n                let auth = this.state.auth;\n                auth.alias = data.alias;\n                this.setState({ auth });\n\n                this.form.setFieldsValue({\n                    alias: data.alias\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    onFinish = () => {\n        if(!this.state.auth.gender) {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Escoge tu género',\n            });\n            return;\n        };\n\n        this.setState({ isLoading : true });\n        Services.Auth.register({\n            alias: this.state.auth.alias,\n            password: this.state.auth.password,\n            gender: this.state.auth.gender\n        }, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                if(this.props.onStart)\n                    this.props.onStart();\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message,\n                });\n            }\n\n            this.setState({ isLoading : false });\n        }, (err) => {\n            // Do nothing\n            this.setState({ isLoading : false });\n        });\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        if(!this.props.isVisible)\n            return null;\n\n        return (\n            <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', minHeight: '100%', zIndex: 99999, backgroundColor: '#25b864', paddingBottom: 20 }}>\n                <h1 style={{ textAlign: 'center', color: 'white', marginTop: 10 }}>Ingresa a Friwords</h1>\n\n                <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <p style={{ maxWidth: '80%', margin: '0 auto', color: 'rgba(255,255,255,.8)', textAlign: 'center' }}>Crea tu alias y tu contraseña. Recordá que <b>todo será anónimo</b></p>\n\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    initialValues={{\n                        alias: auth.alias\n                    }}\n                    onFinish={this.onFinish}>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<span>@</span>} placeholder=\"Tu alias\" />\n                    </Form.Item>\n\n                    <a\n                        onClick={this.getRandomAlias}\n                        style={{ width: '90%', color: 'white', textDecoration: 'underline', marginLeft: '5%', margin: '0 auto', padding: 0, display: 'block', marginBottom: 5 }}\n                    >Generar alias al azar</a>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Ingresa una contraseña' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600, color: 'white' }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'female';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'female' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'male';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'male' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading} style={{ display: 'flex', width: '75%', margin: '0 auto', backgroundColor: 'white', height: 50, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', color: '#00a2ff', marginTop: 15 }}>\n                            Registrarme\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <Button\n                    onClick={() => {\n                        this.props.onRequestLogin();\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={this.state.isLoading} style={{ display: 'flex', width: '100%', margin: '0 auto', height: 40, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', backgroundColor: '#00a2ff' }}>\n                    ¡Ya tengo un alias!\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            auth: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        Services.Auth.signInWithAlias(this.state.auth, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                this.props.onLoggedIn(data.user);\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message\n                });\n            }\n        }, (err) => {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Ese alias no es válido'\n            });\n\n            return false;\n        });\n    }\n\n    isValid = () => {\n        return true;\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Ingresá con tu alias`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¿Tienes un alias distinto? Ingresa tu alias y la contraseña que se te pidió al crearlo.</span>\n                    </div>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            prefix={<Icons.UserSwitchOutlined className=\"site-form-item-icon\" />} placeholder=\"Alias\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa la contraseña' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Ingresar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¡Recuerda! Esto es totalmente anónimo, y tu friword aparecerá creado por <b>{friword.user_alias != null ? friword.user_alias : ''}</b></span>\n                    </div>\n\n                    {/*<div style={{ width: '100%', height: 8, backgroundColor: 'rgba(0,0,0,0.01)', marginTop: 10, marginBottom: 10 }}></div>*/}\n\n                    {/*<Form.Item\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Ingresa un título' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                friword.title = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Título\" />\n                    </Form.Item>*/}\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa el texto' }]}>\n                        <TextArea\n                            placeholder=\"Tu texto\"\n                            autoSize={{ minRows: 2, maxRows: 8 }}\n                            maxLength={500}\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />}\n                        />\n                        {/*<Input\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Texto\" />*/}\n                    </Form.Item>\n                    <span>{500 - (friword && friword.text && friword.text.length ? friword.text.length : 0)} caracteres restantes</span>\n\n                    <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.05)', marginTop: 20, marginBottom: 20 }}></div>\n\n                    {/*<span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600 }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'female';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'female' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'male';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'male' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>*/}\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Publicar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification,\n    Mentions\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\nimport FadeInSection from './FadeInSection'\n\n// Modules\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ParticleEffectButton from 'react-particle-effect-button'\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\nconst { Option, getMentions } = Mentions;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            hideDislikeBtn: false,\n            hideLikeBtn: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n            mentions: [],\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false\n        };\n    }\n\n    componentDidMount() {\n        // Get possible mentions\n        Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n            if(data.success) {\n                this.setState({ mentions : data.mentions });\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    onDislike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onDislike();\n        this.setState({ hideDislikeBtn : true, hasDisliked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideDislikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    onLike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onLike();\n        this.setState({ hideLikeBtn : true, hasLiked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideLikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    render() {\n        const {\n            friword\n        } = this.props;\n        const { mentions } = this.state;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n\n                    if(this.props.user == null) {\n                        notification.open({\n                            className: 'error',\n                            message: 'Ingresa primero',\n                            description:\n                                'Ingresa o crea tu alias para dejar comentarios',\n                        });\n                        return;\n                    }\n\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification.open({\n                            className: 'error',\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n\n                    this.setState({ isSendingComment : true });\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: false,\n                            showComments: true\n                        });\n\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n\n                        if(this.props.onPostedComment)\n                            this.props.onPostedComment();\n                    }, (err) => {\n                        console.log(err);\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'transparent', padding: 0, marginTop: 0, display: 'flex', flex: 1 }}>\n                <a style={{ fontWeight: 800, padding: 15 }}>Enviar</a>\n                {/*<Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />*/}\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        return (\n            <FadeInSection key={friword.id}>\n                <div className={`data-node-${friword.id}`} style={{ marginBottom: 5 }}>\n                    <div style={{ width: '100%' }}>\n                        <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(0,0,0,.075)' }}></div>\n                        <Card\n                            bordered={false}\n                            // loading={this.props.loading}\n                            bodyStyle={{ padding: 10, opacity: this.props.loading ? .1 : 1 }}>\n                            <Meta\n                                avatar={\n                                    <Avatar\n                                        src={friword && friword.user && friword.user.gender == 'female' ? 'https://image.flaticon.com/icons/svg/590/590083.svg' : 'https://image.flaticon.com/icons/svg/921/921071.svg'}\n                                        size={'small'}\n                                        shape={'circle'}\n                                        style={{ width: 30, height: 30, borderRadius: 15 }}\n                                    />\n                                }\n                                title={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        { friword && friword.user && friword.user.country_code != null &&\n                                            <img\n                                                style={{ width: 23, marginRight: 5 }}\n                                                src={`https://www.countryflags.io/${friword.user.country_code}/shiny/64.png`}\n                                            />\n                                        }\n                                        <span>\n                                            { `${friword.text.substring(0, 30)}...` }\n                                        </span>\n                                    </div>\n                                }\n                                description={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span style={{ fontSize: '0.9em' }}>{ `${friword.text}` }</span>\n                                    </div>\n                                }\n                            />\n\n                            {/*<span style={{ display: 'block', marginTop: 10, fontSize: 12, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>*/}\n\n                            { friword && friword.user_alias &&\n                                <span style={{ display: 'block', marginTop: 0, fontSize: 10, textAlign: 'right' }}>por <span style={{ color: '#25b864', fontWeight: 600 }}>@{ friword.user_alias }</span></span>\n                            }\n\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20, marginBottom: 20 }}>\n                                <ParticleEffectButton\n                                    color='#008bdb'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideLikeBtn}>\n                                    <div\n                                        onClick={this.onLike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#25b864', width: 60, height: 30, borderRadius: 2, marginRight: 10, cursor: 'pointer', opacity: (this.props.likes > 0 ? 1 : .75) }}>\n                                        <Icons.LikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.likes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n\n                                <ParticleEffectButton\n                                    color='#ff2452'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideDislikeBtn}>\n                                    <div\n                                        onClick={this.onDislike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#ff2452', width: 60, height: 30, borderRadius: 2, cursor: 'pointer', opacity: (this.props.dislikes > 0 ? 1 : .75) }}>\n                                        <Icons.DislikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.dislikes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n                            </div>\n\n                            { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                                <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                            }\n\n                            { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: true,\n                                            showComments: true\n                                        });\n                                        this.props.onRequestComments();\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginTop: 5, fontWeight: 500 }}>\n                                    Ver { friword.comments_qty } comentarios\n                                </a>\n                            }\n\n                            { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e) => {\n                                return (\n                                    <FriwordComment\n                                        comment={e}\n                                    />\n                                );\n                            })}\n\n                            { this.state.canLeaveComment &&\n                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 20, marginBottom: 10 }}>\n                                    <div style={{ display: 'flex', flex: 1 }}>\n                                        <Form\n                                            name=\"post_comment\"\n                                            style={{ width: '100%', paddingLeft: 0, paddingRight: 0, position: 'relative' }}>\n                                            <Form.Item\n                                                name=\"comment\"\n                                                rules={[{ required: true, message: 'Ingresa un comentario' }]}\n                                                style={{ marginBottom: 0, paddingBottom: 0 }}>\n                                                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                    <Mentions\n                                                        onChange={(comment) => {\n                                                            this.setState({ comment });\n                                                        }}\n                                                        className=\"input-comment\"\n                                                        placeholder=\"Deja tu comentario\"\n                                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                                        maxLength={500}>\n                                                        { mentions && mentions.map((e) => {\n                                                            return (\n                                                                <Option value={e.alias}>{e.alias}</Option>\n                                                            );\n                                                        })}\n                                                    </Mentions>\n\n                                                    { sendCommentSuffix }\n                                                </div>\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </div>\n                            }\n\n                            { this.props.user == null &&\n                                <div style={{ width: '100%', backgroundColor: '#25b864', padding: 5, marginTop: 10, borderRadius: 2 }}>\n                                    <span style={{ display: 'block', fontSize: 12, fontWeight: 600, textAlign: 'left', color: 'white' }}>Creá tu alias anónimo para dejar un comentario</span>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                </div>\n            </FadeInSection>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport moment from 'moment';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordsNotificationsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            notifications: []\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps);\n    }\n\n    checkProps = (props) => {\n        this.setState({ isVisible : props.isVisible });\n        if(props.isVisible == true && this.state.isVisible == false) {\n            this.getNotifications();\n        }\n    }\n\n    getNotifications = () => {\n        this.setState({ isLoading : true });\n        Services.Notifications.getNotifications((data) => {\n            if(data.success) {\n                this.setState({\n                    notifications: data.notifications,\n                    isLoading: false\n                });\n\n                // Mark as seen\n                for(var idx in data.notifications) {\n                    Services.Notifications.updateNotification({\n                        id: data.notifications[idx].id,\n                        seen: true\n                    }, (response) => {\n                        let notifications = this.state;\n                        notifications[idx].seen = true;\n                        this.setState({ notifications });\n                    });\n                }\n            }\n        }, (err) => {\n            this.setState({\n                notifications: [],\n                isLoading: false\n            });\n            // Do nothing\n        });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            notifications,\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Tus notificaciones`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n\n                { notifications && notifications.length > 0 && notifications.map((notification) => {\n                    return (\n                        <div\n                            onClick={() => {\n                                if(this.props.onClickNotification){\n                                    this.props.onClickNotification(notification);\n                                }\n                            }}\n                            style={{ width: '100%', marginBottom: 10, position: 'relative', backgroundColor: !notification.seen ? 'rgba(255, 160, 0, .15)' : 'white', padding: 10, borderRadius: 5 }}>\n\n                            <div style={{ width: '100%', borderBottomWidth: 5, borderBottomColor: 'rgba(0,0,0,.05)' }} dangerouslySetInnerHTML={{ __html: notification.html }}></div>\n\n                            <span style={{ display: 'block', width: '100%', fontSize: 11, marginTop: 5, textAlign: 'right' }}>{ moment(notification.created_at).fromNow() }</span>\n\n                            <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.1)', marginTop: 10 }}></div>\n                        </div>\n                    );\n                })}\n\n                { !notifications || notifications.length == 0 &&\n                    <span>¡Aún no tienes notificaciones para revisar!</span>\n                }\n\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    DatePicker,\n    Switch,\n    Slider,\n    Button,\n    Typography,\n    Tabs,\n    notification,\n    Spin\n} from 'antd';\n\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\n\n// Cards\nimport FriwordWelcome from '../components/FriwordWelcome';\nimport FriwordLogin from '../components/FriwordLogin';\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\nimport FriwordsNotificationsPanel from '../components/FriwordsNotificationsPanel';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            filters: {\n                listing_mode : 1,\n                page: 0\n            },\n            tabActiveKey: '1',\n            isViewingNotifications: false,\n            isWelcome: false,\n            isCreating: false,\n            isLoggingIn: false,\n            isLoading: true,\n            hasUpdates: false,\n            /*previousOnlineUsers: 132,\n            newOnlineUsers: 132,*/\n            user: null,\n            currentFriwordId: null\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n        this.getMe();\n\n        /*setInterval(() => {\n            if(this.state.friwords && this.state.friwords.length > 0) {\n                Services.Friwords.hasUpdatesAvailable(_.first(this.state.friwords).id, (data) => {\n                    if(data.success) {\n                        this.setState({ hasUpdates : data.hasUpdates });\n                    }\n                });\n            }\n        }, 10000);*/\n    }\n\n    getMe = () => {\n        Services.Auth.getMe((data) => {\n            if(data.success) {\n                if(data.user != null) {\n                    this.setState({ user: data.user });\n\n                    Services.Auth.user = data.user;\n\n                    if(data.user && !data.user.country_code && !data.user.ip) {\n                        const apiKey = '45c816eed2d04a8b96e59ff177c609af';\n                        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&fields=geo&output=json`).then((data) => {\n                            if(data && data.data) {\n                                const ipInfo = data.data;\n                                Services.Auth.updateMe({\n                                    country_name: ipInfo && ipInfo.country_name,\n                                    country_code: ipInfo && ipInfo.country_code2,\n                                    ip: ipInfo && ipInfo.ip\n                                }, (success) => {\n                                    if(success.success) {\n                                        this.setState({ user : success.user });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    /*getUsersOnline = () => {\n        let onlineUsers = this.state.previousOnlineUsers;\n        let offsetIncrement = 5;\n        let operator = Math.random() < 0.5 ? 1 : -1;\n        let newUsers = (onlineUsers + ((Math.floor(Math.random() * offsetIncrement) + 1) * operator));\n\n        this.setState({\n            newOnlineUsers: newUsers,\n            previousOnlineUsers: onlineUsers\n        });\n    }*/\n\n    getFriwords = () => {\n        // this.getUsersOnline()\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwordsByFilter(this.state.filters, (data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n\n                // If there are friwords on the state, we need to append this list (since it's a new page)\n                if(this.state.friwords && this.state.friwords.length > 0 && this.state.filters.page > 0)\n                    ordered = this.state.friwords.concat(ordered);\n\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id, displayOnlyThis = false) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                if(displayOnlyThis) {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = [data.friword];\n                    this.setState({\n                        friwords,\n                        currentFriwordId: id,\n                        isLoading: false\n                    }, this.getMe);\n                } else {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = this.state.friwords;\n                    friwords[index] = data.friword;\n                    this.setState({\n                        friwords,\n                        isLoading: false\n                    });\n                }\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    refresh = () => {\n        this.getFriwords();\n        this.getMe();\n    }\n\n    isAuthenticated = () => {\n        return Services.Auth.isAuthenticated();\n    }\n\n    render() {\n        const {\n            friwords,\n            filters\n        } = this.state;\n\n        if(this.state.isWelcome) {\n            return this.renderWelcome();\n        }\n\n        const hasNoticicationsUnread = this.state.user != null && this.state.user.unread_notifications > 0;\n\n        return (\n            <div className=\"friwords-container\">\n                <div style={{ width: '100%', height: 45, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 45, display: 'flex', flexDirection: 'column', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                        <a\n                            style={{ textDecorationLine: 'underline', fontSize: '0.6em' }}\n                            href=\"#\"\n                            onClick={() => {\n                                if(this.isAuthenticated()) {\n                                    this.setState({ isLoggingIn : true });\n                                } else {\n                                    this.setState({ isWelcome : true });\n                                }\n                            }}\n                        >{ this.isAuthenticated() ? 'Cambiar' : 'Ingresar' }</a>\n                    </div>\n                    <div\n                        className=\"counter-online-users\"\n                        onClick={() => {\n                            if(this.isAuthenticated()) {\n                                this.setState({ isViewingNotifications : true });\n                            } else {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        style={{ height: 45, display: 'flex', flex: hasNoticicationsUnread ? 1 : 0, justifyContent: 'center', alignItems: 'center', backgroundColor: hasNoticicationsUnread ? '#fccf84' : 'white', borderTopLeftRadius: 0, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', paddingLeft: 10, paddingRight: 10 }}>\n                        <p style={{ fontWeight: 600, margin: 0, padding: 0, fontSize: '0.75em' }}>{ hasNoticicationsUnread ? `${this.state.user.unread_notifications} nueva${this.state.user.unread_notifications > 1 ? 's' : ''}` : 0 }</p>\n                        <img\n                            style={{ width: 20, height: 20, marginLeft: 5, opacity: 1 }}\n                            src={`/img/bell-${hasNoticicationsUnread ? 'on' : 'off'}.png`} />\n                    </div>\n                    <div\n                        onClick={this.refresh}\n                        style={{ height: 45, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '0px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.2)', opacity: this.state.hasUpdates ? 1 : .6 }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em', color: 'white' }}>{ this.state.isLoading ? 'Actualizando..' : 'Actualizar' }</span>\n                        <img\n                            style={{ width: 30, height: 30, marginLeft: 10 }}\n                            src=\"https://image.flaticon.com/icons/svg/1688/1688988.svg\" />\n                    </div>\n                </div>\n\n                <section style={{ textAlign: 'center', marginTop: 80, marginBottom: 20 }}>\n                    <Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordsNotificationsPanel\n                        isVisible={this.state.isViewingNotifications}\n                        user={this.state.user}\n                        onRequestClose={() => {\n                            this.setState({ isViewingNotifications : false }, this.getMe);\n                        }}\n                        onClickNotification={(e) => {\n                            if(e.redirect_to != null) {\n                                if(e.redirect_to.indexOf('friword/') > -1) {\n                                    this.setState({ isLoading : true, isViewingNotifications: false });\n                                    this.getFriwordById(e.redirect_to.replace('friword/', ''), true);\n                                }\n                            }\n                        }}\n                    />\n\n                    <FriwordLogin\n                        isVisible={this.state.isLoggingIn}\n                        onRequestClose={() => {\n                            this.setState({ isLoggingIn : false });\n                            if(!this.state.user.is_configured) {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        onLoggedIn={(user) => {\n                            this.setState({ user, isLoggingIn: false }, this.refresh);\n                        }}\n                    />\n\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            // Reset filters and then fetch the first page\n                            filters.page = 0;\n                            filters.listing_mode = 1;\n                            this.setState({ filters, tabActiveKey: '1' }, this.refresh);\n                            notification.open({\n                                className: 'success',\n                                message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                                description: 'Tu friword fue publicado exitosamente en la sección `Recientes`',\n                            });\n                        }}\n                    />\n\n                    { this.state.currentFriwordId != null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    this.setState({ currentFriwordId: null }, this.refresh);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.RollbackOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Volver atrás\n                            </Button>\n                        </div>,\n                        <FriwordCard\n                            loading={this.state.isLoading}\n                            friword={this.state.friwords[0]}\n                            comments={this.state.friwords[0].comments}\n                            likes={this.state.friwords[0].likes_qty}\n                            dislikes={this.state.friwords[0].dislikes_qty}\n                            commentsQty={this.state.friwords[0].comments_qty}\n                            user={this.state.user}\n                            onLike={() => {\n                                Services.Friwords.likeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onDislike={() => {\n                                Services.Friwords.dislikeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onRequestComments={() => {\n                                this.getFriwordById(this.state.friwords[0].id, true);\n                            }}\n                            onPostedComment={this.getMe}\n                        />\n                    ]}\n\n                    { this.state.currentFriwordId == null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    if(this.isAuthenticated()) {\n                                        this.setState({ isCreating : true });\n                                    } else {\n                                        this.setState({ isWelcome : true });\n                                    }\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.PlusOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Publicar friword\n                            </Button>\n                        </div>,\n                        <Tabs\n                            activeKey={this.state.tabActiveKey}\n                            type={'card'}\n                            onTabClick={(val) => {\n                                if(val == 2) {\n                                    filters.only_me = true;\n                                    filters.page = 0;\n                                } else {\n                                    filters.only_me = false;\n                                    filters.listing_mode = val;\n                                    filters.page = 0;\n                                }\n                                this.setState({\n                                    filters,\n                                    tabActiveKey: val\n                                }, this.getFriwords);\n                            }}\n                            defaultActiveKey={'1'}>\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.HeartOutlined />\n                                            Más destacados\n                                        </span>\n                                    }\n                                key={'0'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onDislike={() => {\n                                            Services.Friwords.dislikeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    loading={this.state.isLoading}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.FieldTimeOutlined />\n                                            Recientes\n                                        </span>\n                                    }\n                                key={'1'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onDislike={() => {\n                                            Services.Friwords.dislikeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    loading={this.state.isLoading}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.FieldTimeOutlined />\n                                            Míos\n                                        </span>\n                                    }\n                                key={'2'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onDislike={() => {\n                                            Services.Friwords.dislikeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    loading={this.state.isLoading}\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n                        </Tabs>\n                    ]}\n\n                    { this.state.isLoading &&\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Spin indicator={\n                                <Icons.LoadingOutlined style={{ fontSize: 24 }} spin />\n                            } />\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderWelcome() {\n        return (\n            <div className=\"friwords-container\">\n                <FriwordWelcome\n                    isVisible={this.state.isWelcome}\n                    onStart={() => {\n                        this.setState({ isWelcome : false }, this.getMe);\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description:\n                                'Bienvenid@ a Friwords. Empieza leyendo y publicando',\n                        });\n\n                        setTimeout(() => {\n                            this.getFriwords();\n                        }, 3000);\n                    }}\n                    onRequestLogin={() => {\n                        this.setState({ isLoggingIn : true, isWelcome: false });\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\n\n// CSS Files\nimport './App.css';\nimport './assets/css/friwords.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}