{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Notifications.js","services/Firebase.js","services/Logs.js","components/FriwordImageLightbox.js","components/FadeInSection.js","components/FriwordWelcome.js","components/FriwordLogin.js","components/FriwordCreatePost.js","components/FriwordCard.js","components/FriwordsNotificationsPanel.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","onLike","onLikeComment","comment","playHeart","setState","isPlayingAnimation","stopHeart","state","randomColor","Math","floor","random","length","heartAnimation","liked","componentWillReceiveProps","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","isAdmin","user","alias","Item","dot","style","marginTop","width","height","borderRadius","backgroundColor","gender","marginBottom","className","padding","gutter","span","justify","display","flex","flexDirection","user_alias","justifyContent","alignItems","fontSize","textAlign","color","fontWeight","onClick","ref","e","options","isStopped","marginLeft","likes_qty","moment","created_at","fromNow","dangerouslySetInnerHTML","__html","html","fontFamily","ENVIRONMENTS","BASE_URL","process","SetToken","token","localStorage","setItem","GetToken","getItem","ApiService","timeout","headers","api","axios","create","baseURL","getBaseUrl","interceptors","response","use","error","axiosRetry","retries","retryDelay","retryCount","setBaseUrl","baseUrl","encodeQueryData","parameters","ret","d","push","encodeURIComponent","join","Auth","isAuthenticated","register","success","post","then","catch","err","signInWithAlias","getMe","updateMe","generateRandomAlias","Friwords","getFriwords","getFriwordsByFilter","filter","getFriwordById","id","url","getPossibleMentionsByFriwordId","likeById","likeCommentById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","getTopics","Notifications","getNotifications","updateNotification","FirebaseService","initialized","initialize","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","services","remote","apply","log","format","msg","message","JSON","stringify","level","label","enableAll","Logs","object","json","setToken","info","text","warn","TextArea","Option","getMentions","FriwordImageLightbox","visible","isImageLoading","src","onLoad","maxWidth","maxHeight","onDismiss","type","margin","FadeInSection","useState","isVisible","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","FriwordWelcome","getRandomAlias","isLoading","Services","auth","form","setFieldsValue","onFinish","password","onStart","open","description","position","top","left","minHeight","zIndex","paddingBottom","name","initialValues","rules","required","onChange","evt","value","prefix","placeholder","textDecoration","opacity","htmlType","loading","onRequestLogin","FriwordLogin","checkProps","friword","onLoggedIn","isValid","title","closable","onCancel","onRequestClose","footer","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","FriwordCreatePost","_postFriword","resetFields","onCreated","fileList","uploadImage","image","downloadURL","alert","storage","originFileObj","task","put","on","snapshot","onProgress","getDownloadURL","handleCancel","previewVisible","handlePreview","a","preview","previewImage","handleChange","bodyStyle","remember","topics","defaultValue","topic_id","map","autoSize","minRows","maxRows","maxLength","accept","listType","onPreview","beforeUpload","FriwordCard","hasLiked","hasDisliked","isLoadingComments","isSendingComment","canLeaveComment","showComments","mentions","isShowingTruncated","isOnlyFriword","comments","sendCommentSuffix","likes","dislikes","onRequestComments","twoToneColor","onPostedComment","spin","bordered","paddingTop","avatar","size","substring","discover_image","onShowImage","cursor","marginRight","comments_qty","index","refreshFriword","paddingLeft","paddingRight","topic","right","borderBottomLeftRadius","borderTopLeftRadius","FriwordsNotificationsPanel","idx","notifications","seen","notification","onClickNotification","borderBottomWidth","borderBottomColor","Title","TabPane","country_code","ip","ipInfo","country_name","country_code2","hasUpdates","filters","promises","friwords","_","some","all","ordered","orderBy","page","concat","displayOnlyThis","findIndex","currentFriwordId","refresh","onPressTopic","onPressTopCta","isLoadingButton","database","transaction","commited","canVoteHashtag","listing_mode","tabActiveKey","isViewingNotifications","isWelcome","isCreating","isLoggingIn","covidCounter","showImageURL","setInterval","val","renderWelcome","hasNoticicationsUnread","unread_notifications","borderLeft","borderBottom","textDecorationLine","href","borderBottomRightRadius","covidAnimationData","ghost","alignSelf","redirect_to","indexOf","replace","icon","dislikes_qty","commentsQty","setTimeout","activeKey","onTabClick","only_me","defaultActiveKey","tab","overflow","indicator","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bf8693b.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Timeline\n} from 'antd';\n\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)],\n            isPlayingAnimation: false\n        };\n\n        this.heartAnimation = null;\n    }\n\n    onLike = () => {\n        if(this.props.onLikeComment)\n            this.props.onLikeComment(this.props.comment);\n    }\n\n    componentDidMount() {\n        const { comment } = this.props;\n\n        if(comment.liked == true) this.playHeart();\n        else this.stopHeart();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.comment) {\n\n            if(nextProps.comment.liked == true) this.playHeart();\n            else this.stopHeart();\n        } else {\n            this.stopHeart()\n        }\n    }\n\n    playHeart = () => {\n        this.setState({ isPlayingAnimation : true });\n    }\n\n    stopHeart = () => {\n        this.setState({ isPlayingAnimation : false });\n    }\n\n    render() {\n        const { comment } = this.props;\n        const defaultOptions = {\n            loop: false,\n            autoplay: false,\n            animationData: animationData.default,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        }\n\n        const isAdmin = comment && comment.user && (comment.user.alias == 'admin' || comment.user.alias == 'friwords');\n\n        return (\n            <Timeline.Item\n                dot={\n                    <div style={{ marginTop: 5, width: 10, height: 10, borderRadius: 5, backgroundColor: isAdmin ? '#ffa002' : (comment && comment.user && comment.user.gender == 'female' ? '#ff8b9a' : '#8baeff') }}></div>\n                }>\n                <div style={{ marginBottom: 0 }}>\n                    {/*<div style={{ width: '95%', marginLeft: '2%', height: 3, backgroundColor: 'rgba(0,0,0,.005)', marginTop: 5, marginBottom: 0 }} />*/}\n                    <div className={`custom-card`} style={{ width: '100%', padding: 5, marginBottom: 0, backgroundColor: 'white', borderRadius: 2 }}>\n                        <Row gutter={24}>\n                            <Col span={24} justify={'center'}>\n\n                                <div style={{ display: 'flex', flex: 1, flexDirection: 'row' }}>\n                                    <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\n                                        { comment && comment.user_alias &&\n                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                <div style={{ display: 'flex', flex: 1, marginBottom: 0, backgroundColor: 'white' }}>\n                                                    <span style={{ display: 'block', marginTop: 0, fontSize: 13, textAlign: 'left', color: isAdmin ? '#ffa002' : (comment && comment.user && comment.user.gender == 'female' ? '#ff8b9a' : '#8baeff'), fontWeight: 500 }}>@{ comment.user_alias }</span>\n                                                </div>\n\n                                                <div\n                                                    onClick={this.onLike}\n                                                    style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0 }}>\n                                                    <Lottie\n                                                        ref={(e) => { this.heartAnimation = e; }}\n                                                        options={defaultOptions}\n                                                        height={20}\n                                                        width={35}\n                                                        isStopped={!this.state.isPlayingAnimation}\n                                                    />\n                                                    <span style={{ color: '#f87676', marginLeft: -5, fontWeight: 800, fontSize: '0.75em' }}>{ comment.likes_qty }</span>\n                                                </div>\n                                            </div>\n                                        }\n\n                                        <div style={{ width: 'auto', marginBottom: 0, backgroundColor: 'white' }}>\n                                            <span style={{ display: 'block', marginTop: 2, marginBottom: 5, fontSize: 10, textAlign: 'left' }}>{ moment(comment.created_at).fromNow() }</span>\n                                        </div>\n\n                                        <span\n                                            dangerouslySetInnerHTML={{ __html: comment.html }}\n                                            style={{ color: 'rgba(0,0,0,.75)', fontSize: 13, fontFamily: 'Open Sans', marginLeft: 0, marginTop: 0, fontWeight: 400 }}></span>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Timeline.Item>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'https://api.friwords.com/api/v1/'\n};\n\n// var BASE_URL = process.env.NODE_ENV == 'development' ? ENVIRONMENTS.LOCAL : ENVIRONMENTS.PRODUCTION;\nvar BASE_URL = process.env.REACT_APP_API_URL;\nvar JWT_TOKEN = null;\n\nexport function SetToken(token) {\n    localStorage.setItem('JWT_TOKEN', token);\n    JWT_TOKEN = token;\n}\n\nexport function GetToken() {\n    let token = localStorage.getItem('JWT_TOKEN')\n    return token;\n}\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n\n        if(localStorage.getItem('JWT_TOKEN')) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem('JWT_TOKEN');\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        /*if (error.response.status === 401) {\n            alert(\"error\");\n        }*/\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    user: null,\n    isAuthenticated: () => {\n        return Auth.user != null\n    },\n    register: function(data, success, error) {\n        let url = 'auth/register';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    signInWithAlias: function(data, success, error) {\n        let url = 'auth/sign_in';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getMe: function(success, error) {\n        let url = 'profile/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateMe: function(data, success, error) {\n        let url = 'profile/me';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    generateRandomAlias: function(success, error) {\n        let url = 'auth/generate_alias';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordsByFilter: function(filter, success, error) {\n        let url = 'friwords/filter';\n\n        ApiService().post(url, filter).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getPossibleMentionsByFriwordId: function(id, success, error) {\n        let url = `friwords/${id}/possible_mentions`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeCommentById: function(id, success, error) {\n        let url = `friwords/comments/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getTopics: function(success, error) {\n        let url = `friwords/topics`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import { ApiService } from './BaseService.js';\n\nvar Notifications = {\n    getNotifications: function(success, error) {\n        let url = 'notifications/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateNotification: function(data, success, error) {\n        let url = `notifications/${data.id}/update`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Notifications;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nvar FirebaseService = {\n    initialized: false,\n    initialize: () => {\n        if(!FirebaseService.initialized) {\n            const config = {\n                apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n                authDomain: \"friwords-a3536.firebaseapp.com\",\n                databaseURL: \"https://friwords-a3536.firebaseio.com\",\n                projectId: \"friwords-a3536\",\n                storageBucket: \"friwords-a3536.appspot.com\",\n                messagingSenderId: \"882500991771\",\n                appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n                measurementId: \"G-P8SQZY3BKH\"\n            };\n\n            firebase.initializeApp(config);\n\n            FirebaseService.initialized = true;\n        }\n    },\n    services: () => {\n        return firebase\n    }\n}\n\nFirebaseService.initialize();\n\nexport default FirebaseService;","import log from 'loglevel';\nimport remote from 'loglevel-plugin-remote';\nimport { GetToken } from './BaseService';\n\nconst customJSON = log => {\n    return {\n        msg: typeof log.message == 'Object' ? JSON.stringify(log.message) : log.message,\n        level: log.level.label\n    }\n};\n\nremote.apply(log, { format: customJSON, url: `${process.env.REACT_APP_API_URL}logs/client` });\nlog.enableAll();\n\nvar Logs = {\n    object: (json) => {\n        const token = GetToken();\n        if(token != null)\n            remote.setToken(token)\n        log.info('%j', json);\n    },\n    info: (text) => {\n        const token = GetToken();\n        if(token != null)\n            remote.setToken(token)\n        log.info(text);\n    },\n    warn: (text) => {\n        const token = GetToken();\n        if(token != null)\n            remote.setToken(token)\n        log.warn(text);\n    }\n};\n\nexport default Logs;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification,\n    Mentions,\n    Timeline\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\n// Modules\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ReadMore from '@crossfield/react-read-more';\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\nconst { Option, getMentions } = Mentions;\nconst MAX_CHARACTERS_FOR_TRUNCATE = 80;\n\nexport default class FriwordImageLightbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: null,\n            visible: false,\n            isImageLoading: true\n        };\n    }\n\n    componentDidMount() {\n        if(this.props.url != null) {\n            this.setState({ url : this.props.url });\n        }\n\n        if(this.props.visible != null) {\n            this.setState({ visible : this.props.visible });\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.url != null) {\n            this.setState({ url : nextProps.url });\n        }\n\n        if(nextProps.visible != null) {\n            this.setState({ visible : nextProps.visible });\n        }\n    }\n\n    render() {\n        const {\n            url,\n            visible\n        } = this.state;\n\n        if(!url || !visible)\n            return null;\n\n        return (\n            <div className={`image-lightbox`}>\n\n                { this.state.isImageLoading &&\n                    <Spin\n                        style={{ marginTop: 10, marginBottom: 10 }}\n                    />\n                }\n\n                <img\n                    src={url}\n                    onLoad={() => {\n                        this.setState({ isImageLoading : false });\n                    }}\n                    style={{ maxWidth: '100%', maxHeight: '100%' }}\n                />\n                <Button\n                    onClick={() => {\n                        this.props.onDismiss()\n                    }}\n                    type=\"primary\"\n                    style={{ display: 'flex', width: '90%', margin: '0 auto', justifyContent: 'center', alignItems: 'center', height: 40, marginTop: 20 }}>\n                    Cerrar\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordWelcome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.getRandomAlias();\n    }\n\n    getRandomAlias = () => {\n        this.setState({ isLoading: true });\n        Services.Auth.generateRandomAlias((data) => {\n            this.setState({ isLoading: false });\n            if(data.success) {\n                let auth = this.state.auth;\n                auth.alias = data.alias;\n                this.setState({ auth });\n\n                this.form.setFieldsValue({\n                    alias: data.alias\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    onFinish = () => {\n        if(!this.state.auth.gender) {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Escoge tu género',\n            });\n            return;\n        };\n\n        this.setState({ isLoading : true });\n        Services.Auth.register({\n            alias: this.state.auth.alias,\n            password: this.state.auth.password,\n            gender: this.state.auth.gender\n        }, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                if(this.props.onStart)\n                    this.props.onStart();\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message,\n                });\n            }\n\n            this.setState({ isLoading : false });\n        }, (err) => {\n            // Do nothing\n            this.setState({ isLoading : false });\n        });\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        if(!this.props.isVisible)\n            return null;\n\n        return (\n            <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', minHeight: '100%', zIndex: 99999, backgroundColor: '#25b864', paddingBottom: 20 }}>\n                <h1 style={{ textAlign: 'center', color: 'white', marginTop: 10 }}>Ingresa a Friwords</h1>\n\n                <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <p style={{ maxWidth: '80%', margin: '0 auto', color: 'rgba(255,255,255,.8)', textAlign: 'center' }}>Crea tu alias y tu contraseña. Recordá que <b>todo será anónimo</b></p>\n\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    initialValues={{\n                        alias: auth.alias\n                    }}\n                    onFinish={this.onFinish}>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<span>@</span>} placeholder=\"Tu alias\" />\n                    </Form.Item>\n\n                    <a\n                        onClick={this.getRandomAlias}\n                        style={{ width: '90%', color: 'white', textDecoration: 'underline', marginLeft: '5%', margin: '0 auto', padding: 0, display: 'block', marginBottom: 5 }}\n                    >Generar alias al azar</a>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Ingresa una contraseña' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600, color: 'white' }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'female';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 40, maxHeight: 40, opacity: auth.gender == 'female' ? 1 : 0.6 }}\n                                src=\"/img/genders/female_character.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'male';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 40, maxHeight: 40, opacity: auth.gender == 'male' ? 1 : 0.6 }}\n                                src=\"/img/genders/male_character.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading} style={{ display: 'flex', width: '75%', margin: '0 auto', backgroundColor: 'white', height: 50, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', color: '#00a2ff', marginTop: 15 }}>\n                            Registrarme\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <Button\n                    onClick={() => {\n                        this.props.onRequestLogin();\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={this.state.isLoading} style={{ display: 'flex', width: '100%', margin: '0 auto', height: 40, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', backgroundColor: '#00a2ff' }}>\n                    ¡Ya tengo un alias!\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        this.setState({ isLoading : true });\n        Services.Auth.signInWithAlias(this.state.auth, (data) => {\n            this.setState({ isLoading : false });\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                this.props.onLoggedIn(data.user);\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading : false });\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Ese alias no es válido'\n            });\n\n            return false;\n        });\n    }\n\n    isValid = () => {\n        return true;\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Ingresá con tu alias`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¿Tienes un alias distinto? Ingresa tu alias y la contraseña que se te pidió al crearlo.</span>\n                    </div>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            prefix={<Icons.UserSwitchOutlined className=\"site-form-item-icon\" />} placeholder=\"Alias\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa la contraseña' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Ingresar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification,\n    Upload\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {},\n            previewVisible: false,\n            previewImage: '',\n            fileList: []\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n\n            const _postFriword = (friword) => {\n                Services.Friwords.postFriword(friword, (data) => {\n                    this.setState({ isLoading : false });\n                    if(data.success) {\n                        this.setState({\n                            isVisible: false,\n                            friword: {}\n                        });\n\n                        // Reset form\n                        if(this.form)\n                            this.form.resetFields();\n\n                        this.props.onCreated(data.friword);\n                    } else {\n                        notification.open({\n                            className: 'error',\n                            message: 'Oops',\n                            description: data.message,\n                        });\n                    }\n                }, (err) => {\n                    // Do nothing\n                    this.setState({ isLoading : false });\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description:\n                            'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                    });\n                });\n            }\n\n            if(this.state.fileList && this.state.fileList.length > 0) {\n                this.uploadImage((data) => {\n                    friword.image = data.downloadURL;\n                    _postFriword(friword);\n                }, (err) => {\n                    this.setState({ isLoading : false });\n                    alert(`Error al subir la imagen. Contáctate con soporte y envíale este texto: ` + JSON.stringify(err));\n                    Services.Logs.object(err);\n                });\n            } else {\n                _postFriword(friword);\n            }\n        }\n    }\n\n    uploadImage = (success, err, options) => {\n        // Upload image\n        const storage = Services.Firebase.services().storage();\n\n        const file = this.state.fileList[0].originFileObj;\n        const storageRef = storage.ref(`${process.env.REACT_APP_STORAGE_FIREBASE_CONTAINER}/${file.name}`)\n        const task = storageRef.put(file)\n        task.on('state_changed', (snapshot) => {\n            // Se lanza durante el progreso de subida\n            if(options && options.onProgress)\n                options.onProgress(snapshot);\n        }, (error) => {\n            if(err)\n                err(error);\n        }, (data) => {\n            if(success){\n                task.snapshot.ref.getDownloadURL().then((data) => {\n                    success({\n                        downloadURL: data\n                    });\n                });\n            }\n        });\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n          file.preview = await getBase64(file.originFileObj);\n        }\n\n         this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    handleChange = ({ fileList }) => {\n        this.setState({ fileList });\n    };\n\n    render() {\n        const { friword, previewVisible, previewImage, fileList } = this.state;\n\n        return (\n            <Modal\n                style={{ top: 50, height: '100%' }}\n                bodyStyle={{ paddingBottom: 30 }}\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    { this.props.topics != null &&\n                        <Select\n                            defaultValue=\"Escoge un tópico\"\n                            style={{ width: '100%', marginBottom: 15 }}\n                            onChange={(value) => {\n                                friword.topic_id = value;\n                                this.setState({ friword });\n                            }}>\n                            { this.props.topics.map((e) => {\n                                return (\n                                    <Option value={ e.id }>#{e.name}</Option>\n                                );\n                            })}\n                        </Select>\n                    }\n\n                    <TextArea\n                        placeholder=\"Escribe tu friword\"\n                        autoSize={{ minRows: 2, maxRows: 8 }}\n                        maxLength={750}\n                        onChange={(evt) => {\n                            friword.text = evt.target.value;\n                            this.setState({ friword });\n                        }}\n                        prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />}\n                        style={{ marginBottom: 5 }}\n                    />\n                    <span>{750 - (friword && friword.text && friword.text.length ? friword.text.length : 0)} caracteres restantes</span>\n\n                    <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.05)', marginTop: 5, marginBottom: 10 }}></div>\n\n                    <Upload\n                        accept={\".png, .jpeg, .jpg, .JPG, .JPEG\"}\n                        listType=\"picture-card\"\n                        fileList={fileList}\n                        onPreview={this.handlePreview}\n                        onChange={this.handleChange}\n                        beforeUpload={ (file) => {\n                            this.setState(state => ({\n                                fileList: [...state.fileList, file],\n                            }));\n                            return false;\n                        }}>\n                        {fileList.length >= 8 ? null : (\n                            <div>\n                                <Icons.PlusOutlined />\n                                <div className=\"ant-upload-text\">{ fileList.length > 0 ? 'Reemplazar imagen' : 'Subir imagen (opcional)' }</div>\n                            </div>\n                        )}\n                    </Upload>\n\n                    <Form.Item>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading}\n                            style={{ width: '100%' }}>\n                            Publicar friword\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification,\n    Mentions,\n    Timeline\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Animations\nimport * as animationData from '../assets/animations/like.json'\n\n// Modules\nimport Lottie from 'react-lottie';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ReadMore from '@crossfield/react-read-more';\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\nconst { Option, getMentions } = Mentions;\nconst MAX_CHARACTERS_FOR_TRUNCATE = 80;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n            mentions: null,\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false,\n            friword: null,\n            isShowingTruncated: false,\n            isImageLoading: false\n        };\n    }\n\n    componentDidMount() {\n        // Get possible mentions\n        if(this.props.user != null) {\n            Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n                if(data.success) {\n                    this.setState({ mentions : data.mentions });\n                }\n            }, (err) => {\n                // Do nothing\n            });\n        }\n\n        if(this.props.friword != null) {\n            this.setState({\n                friword : this.props.friword\n            }, () => {\n                if(this.props.friword.text.length > MAX_CHARACTERS_FOR_TRUNCATE) {\n                    this.setState({ isShowingTruncated : true });\n                }\n\n                if(this.props.friword.image != null) {\n                    this.setState({ isImageLoading : true });\n                }\n            });\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.friword != null) {\n            this.setState({ friword : nextProps.friword });\n        }\n\n        if(this.props.user != null && !this.state.mentions) {\n            Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n                if(data.success) {\n                    this.setState({ mentions : data.mentions });\n                } else {\n                    this.setState({ mentions : [] });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ mentions : [] });\n            });\n        }\n\n        if(nextProps.isOnlyFriword == true && nextProps.friword && nextProps.friword.comments) {\n            this.setState({ showComments : true });\n        }\n    }\n\n    onLike = () => {\n        if(this.props.user == null){\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'No se pudo dar like. Debes ingresar con tu alias para hacer esto',\n            });\n            return;\n        } else if(this.state.hasLiked || this.state.hasDisliked) {\n            return;\n        }\n\n        const { friword } = this.state;\n        friword.liked = true;\n        this.setState({ friword });\n\n        this.props.onLike();\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        if(!friword)\n            return null;\n\n        const { mentions } = this.state;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n\n                    if(this.props.user == null) {\n                        notification.open({\n                            className: 'error',\n                            message: 'Ingresa primero',\n                            description:\n                                'Ingresa o crea tu alias para dejar comentarios',\n                        });\n                        return;\n                    }\n\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification.open({\n                            className: 'error',\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n\n                    this.setState({ isSendingComment : true });\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: false,\n                            showComments: true\n                        });\n\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n\n                        if(this.props.onPostedComment)\n                            this.props.onPostedComment();\n                    }, (err) => {\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'transparent', padding: 0, marginTop: 0, display: 'flex', flex: 1 }}>\n                <a style={{ fontWeight: 800, padding: 15 }}>Enviar</a>\n                {/*<Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />*/}\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        let isMale = friword && friword.user && friword.user.gender == 'male';\n        let isFemale = friword && friword.user && friword.user.gender == 'female';\n        const defaultOptions = {\n            loop: false,\n            autoplay: false,\n            animationData: animationData.default,\n            rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice'\n            }\n        }\n\n        return (\n            <div className={`data-node-${friword.id}`}>\n                <div style={{ width: '100%' }}>\n                    <div style={{ width: '100%', height: 15, backgroundColor: 'rgba(0,0,0,.1)' }}></div>\n                    <Card\n                        bordered={false}\n                        // loading={this.props.loading}\n                        bodyStyle={{ padding: 10, paddingTop: 20, opacity: this.props.loading ? .1 : 1 }}>\n                        <Meta\n                            avatar={\n                                <Avatar\n                                    src={friword && friword.user && friword.user.gender == 'female' ? '/img/genders/female.svg' : '/img/genders/male.svg'}\n                                    size={'large'}\n                                    style={{ borderRadius: 0, width: 30, height: 30 }}\n                                />\n                            }\n                            title={\n                                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                    <span>\n                                        { `${friword.text.substring(0, 30)}...` }\n                                    </span>\n                                </div>\n                            }\n                            description={\n                                <div style={{ width: '100%' }}>\n                                    { friword.image != null &&\n                                        <div\n                                            onClick={() => {\n                                                if(friword.discover_image == true) {\n                                                    if(this.props.onShowImage){\n                                                        this.props.onShowImage(friword.image);\n                                                    }\n                                                } else {\n                                                    friword.discover_image = true;\n                                                    this.setState({ friword });\n                                                }\n                                            }}\n                                            style={{ width: '100%', marginBottom: 5 }}>\n\n                                            { this.state.isImageLoading &&\n                                                <Spin\n                                                    style={{ marginTop: 10, marginBottom: 10 }}\n                                                />\n                                            }\n\n                                            <img\n                                                className={friword.discover_image ? '' : \"filter-uploaded\"}\n                                                src={friword.image}\n                                                onLoad={() => {\n                                                    this.setState({ isImageLoading: false });\n                                                }}\n                                                style={{ maxHeight: 200, maxWidth: '100%', borderRadius: 3 }}\n                                            />\n                                            <div>\n                                                <span style={{ fontSize: '0.6em', color: 'rgb(37, 184, 100)' }}>{ (!friword.discover_image) ? 'Toca para ver la imagen completa' : 'Toca de nuevo para agrandar la imagen' }</span>\n                                            </div>\n                                        </div>\n                                    }\n\n                                    { this.state.isShowingTruncated ?\n                                        <div>\n                                            <span style={{ fontSize: '0.9em' }}>{ `${friword.text.substring(0, 100)}` }...</span>\n                                            <div\n                                                style={{ width: '100%', padding: 0, marginTop: 5, cursor: 'pointer' }}\n                                                onClick={() => {\n                                                    this.setState({ isShowingTruncated : false });\n                                                }}>\n                                                <span style={{ color: 'white', fontWeight: 400, fontSize: '.75em', marginRight: 5, backgroundColor: 'rgba(20, 20, 20, .75)', padding: 5, borderRadius: 5 }}>\n                                                    Leer más\n                                                </span>\n                                            </div>\n                                        </div>\n                                    :\n                                        <span style={{ fontSize: '0.9em' }}>{ `${friword.text}` }</span>\n                                    }\n                                </div>\n                            }\n                        />\n\n                        <span style={{ display: 'block', marginTop: 10, fontSize: 10, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>\n\n                        { friword && friword.user_alias &&\n                            <span style={{ display: 'block', marginTop: 0, fontSize: 10, textAlign: 'right' }}>por <span style={{ color: '#25b864', fontWeight: 600 }}>@{ friword.user_alias }</span></span>\n                        }\n\n                        <div\n                            onClick={this.onLike}\n                            style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center', marginTop: 5, marginBottom: 5 }}>\n                            <Lottie\n                                options={defaultOptions}\n                                autoplay={false}\n                                height={50}\n                                width={32}\n                                isStopped={!friword.liked}\n                            />\n                            <span style={{ color: '#f87676', marginLeft: 5, fontWeight: 800 }}>{ this.props.likes } like{this.props.likes > 1 ? 's' : ''}</span>\n                        </div>\n\n                        { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                            <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                        }\n\n                        { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                            <a\n                                onClick={() => {\n                                    this.setState({\n                                        isLoadingComments: true,\n                                        showComments: true\n                                    });\n                                    this.props.onRequestComments();\n                                }}\n                                style={{ display: 'block', marginLeft: 0, marginTop: 0, marginBottom: 10, marginLeft: 7, fontWeight: 400, textDecoration: 'underline' }}>\n                                Ver { friword.comments_qty } comentario{friword.comments_qty > 1 ? 's' : ''}\n                            </a>\n                        }\n\n                        { friword.comments != null && friword.comments.length > 0 && this.state.showComments &&\n                            <a\n                                onClick={() => {\n                                    this.setState({\n                                        isLoadingComments: false,\n                                        showComments: false\n                                    });\n                                }}\n                                style={{ display: 'block', marginLeft: 0, marginBottom: 15, fontWeight: 500 }}>\n                                Ocultar comentarios\n                            </a>\n                        }\n\n                        <div style={{ marginLeft: 5 }}>\n                            <Timeline>\n                                { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e, index) => {\n                                    return (\n                                        <FriwordComment\n                                            key={`comment_${e.id}`}\n                                            comment={e}\n                                            onLikeComment={(comment) => {\n                                                if(this.props.user != null) {\n                                                    Services.Friwords.likeCommentById(comment.id, (data) => {\n                                                        this.props.refreshFriword();\n                                                    }, (err) => {\n                                                        this.props.refreshFriword();\n                                                    });\n                                                } else {\n                                                    notification.open({\n                                                        className: 'error',\n                                                        message: 'Oops',\n                                                        description: 'No se pudo dar like. Debes ingresar con tu alias para hacer esto',\n                                                    });\n                                                    return;\n                                                }\n                                            }}\n                                        />\n                                    );\n                                })}\n                            </Timeline>\n                        </div>\n\n                        { this.state.canLeaveComment &&\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0 }}>\n                                <div style={{ display: 'flex', flex: 1 }}>\n                                    <Form\n                                        name=\"post_comment\"\n                                        style={{ width: '100%', paddingLeft: 0, paddingRight: 0, position: 'relative' }}>\n                                        <Form.Item\n                                            name=\"comment\"\n                                            rules={[{ required: true, message: 'Ingresa un comentario' }]}\n                                            style={{ marginBottom: 0, paddingBottom: 0 }}>\n                                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                <Mentions\n                                                    onChange={(comment) => {\n                                                        this.setState({ comment });\n                                                    }}\n                                                    className=\"input-comment\"\n                                                    placeholder=\"Deja tu comentario\"\n                                                    autoSize={{ minRows: 1, maxRows: 3 }}\n                                                    maxLength={750}>\n                                                    { mentions && mentions.map((e) => {\n                                                        return (\n                                                            <Option value={e.alias}>{e.alias}</Option>\n                                                        );\n                                                    })}\n                                                </Mentions>\n\n                                                { sendCommentSuffix }\n                                            </div>\n                                        </Form.Item>\n                                    </Form>\n                                </div>\n                            </div>\n                        }\n\n                        { this.props.user == null &&\n                            <div style={{ width: '100%', backgroundColor: '#25b864', padding: 5, marginTop: 10, borderRadius: 2 }}>\n                                <span style={{ display: 'block', fontSize: 12, fontWeight: 600, textAlign: 'left', color: 'white' }}>Creá tu alias anónimo para dejar un comentario</span>\n                            </div>\n                        }\n\n                        { this.state.friword && this.state.friword.topic != null &&\n                            <div style={{ width: 'auto', position: 'absolute', top: 0, right: 0, backgroundColor: 'rgba(0,0,0,.85)', color: 'white', fontSize: '0.7em', borderBottomLeftRadius: 3, borderTopLeftRadius: 0, padding: 5, opacity: .8 }}>\n                                #{this.state.friword.topic.name}\n                            </div>\n                        }\n\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport moment from 'moment';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordsNotificationsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            notifications: []\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps);\n    }\n\n    checkProps = (props) => {\n        this.setState({ isVisible : props.isVisible });\n        if(props.isVisible == true && this.state.isVisible == false) {\n            this.getNotifications();\n        }\n    }\n\n    getNotifications = () => {\n        this.setState({ isLoading : true });\n        Services.Notifications.getNotifications((data) => {\n            if(data.success) {\n                this.setState({\n                    notifications: data.notifications,\n                    isLoading: false\n                });\n\n                // Mark as seen\n                for(var idx in data.notifications) {\n                    Services.Notifications.updateNotification({\n                        id: data.notifications[idx].id,\n                        seen: true\n                    }, (response) => {\n                        let notifications = this.state;\n                        notifications[idx].seen = true;\n                        this.setState({ notifications });\n                    });\n                }\n            }\n        }, (err) => {\n            this.setState({\n                notifications: [],\n                isLoading: false\n            });\n            // Do nothing\n        });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            notifications,\n            friword,\n            isLoading\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Tus notificaciones`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n\n                { !isLoading && notifications && notifications.length > 0 && notifications.map((notification) => {\n                    return (\n                        <div\n                            onClick={() => {\n                                if(this.props.onClickNotification){\n                                    this.props.onClickNotification(notification);\n                                }\n                            }}\n                            style={{ width: '100%', marginBottom: 10, position: 'relative', backgroundColor: !notification.seen ? 'rgba(255, 160, 0, .15)' : 'white', padding: 10, borderRadius: 5 }}>\n\n                            <div style={{ width: '100%', borderBottomWidth: 5, borderBottomColor: 'rgba(0,0,0,.05)' }} dangerouslySetInnerHTML={{ __html: notification.html }}></div>\n\n                            <span style={{ display: 'block', width: '100%', fontSize: 11, marginTop: 5, textAlign: 'right' }}>{ moment(notification.created_at).fromNow() }</span>\n\n                            <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.1)', marginTop: 10 }}></div>\n                        </div>\n                    );\n                })}\n\n                { !isLoading && (!notifications || notifications.length == 0) &&\n                    <span>¡Aún no tienes notificaciones para revisar!</span>\n                }\n\n                { isLoading &&\n                    <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                }\n\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    DatePicker,\n    Switch,\n    Slider,\n    Button,\n    Typography,\n    Tabs,\n    notification,\n    Spin\n} from 'antd';\n\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport * as covidAnimationData from '../assets/animations/covid19.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\n\n// Cards\nimport FriwordImageLightbox from '../components/FriwordImageLightbox';\nimport FadeInSection from '../components/FadeInSection'\nimport FriwordWelcome from '../components/FriwordWelcome';\nimport FriwordLogin from '../components/FriwordLogin';\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\nimport FriwordsNotificationsPanel from '../components/FriwordsNotificationsPanel';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            topics: [],\n            filters: {\n                listing_mode : 1,\n                page: 0\n            },\n            tabActiveKey: '1',\n            isViewingNotifications: false,\n            isWelcome: false,\n            isCreating: false,\n            isLoggingIn: false,\n            isLoading: true,\n            hasUpdates: false,\n\n            // Statistics - Number of covid counter\n            covidCounter: 0,\n            canVoteHashtag: true,\n            isLoadingButton: false,\n            user: null,\n            currentFriwordId: null,\n            showImageURL: null // This enables the lightbox for images\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n        this.getMe();\n        this.getTopics();\n\n        setInterval(this.getMe, 10000);\n\n        const databaseCovid = Services.Firebase.services().database().ref('hashtags/yomequedoencasa');\n        databaseCovid.on('value', (snapshot) => {\n            this.setState({ covidCounter : snapshot.val() });\n        });\n\n        if(localStorage.getItem('hashtags/yomequedoencasa') != null) {\n            this.setState({ canVoteHashtag : false });\n        }\n    }\n\n    getTopics = () => {\n        Services.Friwords.getTopics((data) => {\n            if(data.success) {\n                this.setState({ topics: data.topics });\n            }\n        }, (err) => {});\n    }\n\n    getMe = () => {\n        Services.Auth.getMe((data) => {\n            if(data.success) {\n                if(data.user != null) {\n                    this.setState({ user: data.user });\n\n                    Services.Auth.user = data.user;\n\n                    if(data.user && !data.user.country_code && !data.user.ip) {\n                        const apiKey = '45c816eed2d04a8b96e59ff177c609af';\n                        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&fields=geo&output=json`).then((data) => {\n                            if(data && data.data) {\n                                const ipInfo = data.data;\n                                Services.Auth.updateMe({\n                                    country_name: ipInfo && ipInfo.country_name,\n                                    country_code: ipInfo && ipInfo.country_code2,\n                                    ip: ipInfo && ipInfo.ip\n                                }, (success) => {\n                                    if(success.success) {\n                                        this.setState({ user : success.user });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    getFriwords = () => {\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwordsByFilter(this.state.filters, (data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n\n                // If there are friwords on the state, we need to append this list (since it's a new page)\n                if(this.state.friwords && this.state.friwords.length > 0 && this.state.filters.page > 0)\n                    ordered = this.state.friwords.concat(ordered);\n\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id, displayOnlyThis = false) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                if(displayOnlyThis) {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = [data.friword];\n                    this.setState({\n                        friwords,\n                        currentFriwordId: id,\n                        isLoading: false\n                    }, this.getMe);\n                } else {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = this.state.friwords;\n                    friwords[index] = data.friword;\n                    this.setState({\n                        friwords,\n                        isLoading: false\n                    });\n                }\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    refresh = () => {\n        this.getFriwords();\n        this.getMe();\n    }\n\n    isAuthenticated = () => {\n        return Services.Auth.isAuthenticated();\n    }\n\n    onPressTopic = (topic) => {\n        const { filters } = this.state;\n        if(filters.topic_id != null && filters.topic_id == topic.id) {\n            delete filters.topic_id;\n        } else {\n            filters.topic_id = topic.id;\n        }\n\n        this.setState({ filters }, this.getFriwords);\n    }\n\n    onPressTopCta = () => {\n        this.setState({ isLoadingButton : true });\n\n        const databaseCovid = Services.Firebase.services().database().ref('hashtags/yomequedoencasa');\n        databaseCovid.transaction((value) => {\n            if(value == null) {\n                return 1;\n            } else if(typeof value == 'number') {\n                return value + 1;\n            }\n        }, (err, commited, snapshot) => {\n            // Commited\n            if(!err) {\n                localStorage.setItem('hashtags/yomequedoencasa', 'true');\n                this.setState({\n                    isLoadingButton : false,\n                    canVoteHashtag: false\n                });\n            }\n        });\n    }\n\n    render() {\n        const {\n            friwords,\n            filters,\n            showImageURL\n        } = this.state;\n\n        if(this.state.isWelcome) {\n            return this.renderWelcome();\n        }\n\n        const hasNoticicationsUnread = this.state.user != null && this.state.user.unread_notifications > 0;\n\n        return (\n            <div className=\"friwords-container\">\n                <div style={{ width: '100%', height: 45, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 45, display: 'flex', flexDirection: 'column', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                        <a\n                            style={{ textDecorationLine: 'underline', fontSize: '0.6em' }}\n                            href=\"#\"\n                            onClick={() => {\n                                if(this.isAuthenticated()) {\n                                    this.setState({ isLoggingIn : true });\n                                } else {\n                                    this.setState({ isWelcome : true });\n                                }\n                            }}\n                        >{ this.isAuthenticated() ? 'Cambiar' : 'Registrar alias' }</a>\n                    </div>\n                    <div\n                        className=\"counter-online-users\"\n                        onClick={() => {\n                            if(this.isAuthenticated()) {\n                                this.setState({ isViewingNotifications : true });\n                            } else {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        style={{ height: 45, display: 'flex', flex: hasNoticicationsUnread ? 1 : 0, justifyContent: 'center', alignItems: 'center', backgroundColor: hasNoticicationsUnread ? '#fccf84' : 'white', borderTopLeftRadius: 0, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', paddingLeft: 10, paddingRight: 10 }}>\n                        <p style={{ fontWeight: 600, margin: 0, padding: 0, fontSize: '0.75em' }}>{ hasNoticicationsUnread ? `${this.state.user.unread_notifications} nueva${this.state.user.unread_notifications > 1 ? 's' : ''}` : 0 }</p>\n                        <img\n                            style={{ width: 20, height: 20, marginLeft: 5, opacity: 1 }}\n                            src={`/img/bell-${hasNoticicationsUnread ? 'on' : 'off'}.png`} />\n                    </div>\n                    <div\n                        onClick={this.refresh}\n                        style={{ height: 45, display: 'flex', flex: 0, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '0px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.2)', paddingLeft: 10, paddingRight: 10 }}>\n                        <img\n                            style={{ width: 25, height: 25, marginLeft: 0, opacity: this.state.isLoading ? .1 : 1 }}\n                            src=\"/img/update.png\" />\n                    </div>\n                </div>\n\n                { showImageURL != null &&\n                    <FriwordImageLightbox\n                        visible={true}\n                        url={showImageURL}\n                        onDismiss={() => {\n                            this.setState({ showImageURL : null });\n                        }}\n                    />\n                }\n\n                <section style={{ textAlign: 'center', marginTop: 45, marginBottom: 0, borderBottom: '5px solid rgba(0,0,0,.05)' }}>\n                    {/*<Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>*/}\n\n                    { this.state.covidCounter > -1 &&\n                        <FadeInSection key={'hashtags/yomequedoencasa'}>\n                            <div\n                                style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', backgroundColor: 'rgba(0,0,0,.8)', paddingTop: 0, paddingBottom: 0 }}>\n                                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                                    <Lottie\n                                        options={{\n                                            loop: true,\n                                            autoplay: true,\n                                            animationData: covidAnimationData.default,\n                                            rendererSettings: {\n                                                preserveAspectRatio: 'xMidYMid slice'\n                                            }\n                                        }}\n                                        height={125}\n                                        width={200}\n                                    />\n                                    {/*<p style={{ fontFamily: 'Open Sans', fontSize: '1em', fontWeight: 400, margin: 0, padding: 0, marginLeft: 10 }}>#QuedateEnCasa</p>*/}\n                                </div>\n\n                                { this.state.covidCounter > 0 &&\n                                    <p style={{ fontSize: '1em', marginTop: 0, marginBottom: 10, color: 'white' }}>{ this.state.covidCounter } personas han apoyado el hashtag <b>#YoMeQuedoEnCasa</b>, { this.state.canVoteHashtag ? '¿y vos?' : '¡y vos tambien!'}</p>\n                                }\n\n                                { this.state.canVoteHashtag &&\n                                    <div style={{ display: 'flex', flexDirection: 'row', width: '100%', marginTop: 0, justifyContent: 'center', alignItems: 'center' }}>\n                                        <Button\n                                            ghost={true}\n                                            onClick={this.onPressTopCta}\n                                            loading={this.state.isLoadingButton}\n                                            type=\"primary\"\n                                            style={{ width: '95%', alignSelf: 'center', marginBottom: 10 }}>\n                                            #YoMeQuedoEnCasa\n                                        </Button>\n                                    </div>\n                                }\n                            </div>\n                        </FadeInSection>\n                    }\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordsNotificationsPanel\n                        isVisible={this.state.isViewingNotifications}\n                        user={this.state.user}\n                        onRequestClose={() => {\n                            this.setState({ isViewingNotifications : false }, this.getMe);\n                        }}\n                        onClickNotification={(e) => {\n                            if(e.redirect_to != null) {\n                                if(e.redirect_to.indexOf('friword/') > -1) {\n                                    this.setState({ isLoading : true, isViewingNotifications: false });\n                                    this.getFriwordById(e.redirect_to.replace('friword/', ''), true);\n                                }\n                            }\n                        }}\n                    />\n\n                    <FriwordLogin\n                        isVisible={this.state.isLoggingIn}\n                        onRequestClose={() => {\n                            this.setState({ isLoggingIn : false });\n                            /*if(!this.state.user || !this.state.user.is_configured) {\n                                this.setState({ isWelcome : true });\n                            }*/\n                        }}\n                        onLoggedIn={(user) => {\n                            this.setState({ user, isLoggingIn: false }, this.refresh);\n                        }}\n                    />\n\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        topics={this.state.topics}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            // Reset filters and then fetch the first page\n                            filters.page = 0;\n                            filters.listing_mode = 1;\n                            this.setState({ filters, tabActiveKey: '1' }, this.refresh);\n                            notification.open({\n                                className: 'success',\n                                message: 'Éxito',\n                                description: 'Tu friword fue publicado exitosamente en la sección `Últimos Friwords`',\n                            });\n                        }}\n                    />\n\n                    { this.state.currentFriwordId != null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    this.setState({ currentFriwordId: null }, this.refresh);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.RollbackOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40, backgroundColor: '#007eff' }}>\n                                Volver atrás\n                            </Button>\n                        </div>,\n                        <FriwordCard\n                            isOnlyFriword={true}\n                            loading={this.state.isLoading}\n                            friword={this.state.friwords[0]}\n                            comments={this.state.friwords[0].comments}\n                            likes={this.state.friwords[0].likes_qty}\n                            dislikes={this.state.friwords[0].dislikes_qty}\n                            commentsQty={this.state.friwords[0].comments_qty}\n                            user={this.state.user}\n                            onLike={() => {\n                                Services.Friwords.likeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onRequestComments={() => {\n                                this.getFriwordById(this.state.friwords[0].id, true);\n                            }}\n                            onPostedComment={this.getMe}\n                            onShowImage={(url) => {\n                                this.setState({ showImageURL : url });\n                            }}\n                        />\n                    ]}\n\n                    { this.state.currentFriwordId == null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                                <div\n                                    onClick={() => {\n                                        if(this.isAuthenticated()) {\n                                            this.setState({ isCreating : true });\n                                        } else {\n                                            this.setState({ isWelcome : true });\n                                        }\n                                    }}\n                                    style={{ display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: 50, height: 50, borderRadius: 25, padding: 10, backgroundColor: this.state.user == null ? '#aaaaaa' : '#25b864' }}>\n                                        <Icons.PlusOutlined\n                                            style={{ fontSize: '2em', color: 'white' }}\n                                        />\n                                    </div>\n                                    <span style={{ color: '#25b864', fontWeight: 800, marginTop: 5 }}>Publicar Friword</span>\n                                </div>\n                            </div>\n                            { /* <Button\n                                disabled={this.state.user == null}\n                                onClick={() => {\n                                    \n                                }}\n                                type=\"primary\"\n                                icon={<Icons.PlusOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Publicá tu Friword\n                            </Button> */ }\n                        </div>,\n                        (this.state.user == null &&\n                            <a\n                                onClick={() => {\n                                    this.setState({ isWelcome : true })\n                                }}\n                                style={{ display: 'block', textAlign: 'center', marginTop: 15, fontWeight: 600, marginRight: 0, textDecoration: 'underline' }}>\n                                Registrá un alias para comentar y publicar nuevos Friwords\n                            </a>\n                        ),\n                        <Tabs\n                            style={{ marginTop: 15 }}\n                            activeKey={this.state.tabActiveKey}\n                            type={'card'}\n                            onTabClick={(val) => {\n                                if(val == 2) {\n                                    filters.only_me = true;\n                                    filters.page = 0;\n                                } else {\n                                    filters.only_me = false;\n                                    filters.listing_mode = val;\n                                    filters.page = 0;\n                                }\n                                this.setState({\n                                    filters,\n                                    tabActiveKey: val\n                                }, this.getFriwords);\n                            }}\n                            defaultActiveKey={'1'}>\n                            { /* <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.HeartOutlined />\n                                            Más destacados\n                                        </span>\n                                    }\n                                key={'0'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    loading={this.state.isLoading}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane> */ }\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.AlignCenterOutlined />\n                                            Friwords\n                                        </span>\n                                    }\n                                key={'1'}>\n\n                                { this.state.topics != null && this.state.topics.length > 0 &&\n                                    <div style={{ paddingTop: 0, paddingLeft: 5 }}>\n                                        <h3>Trending topics</h3>\n\n                                        <div style={{ display: 'flex', flexDirection: 'row', overflow: 'scroll', paddingBottom: 15 }}>\n                                            { this.state.topics.map((e, index) => {\n                                                return (\n                                                    <div\n                                                        className=\"card-topic\"\n                                                        onClick={this.onPressTopic.bind(this, e)}\n                                                        style={{\n                                                            width: 'auto',\n                                                            padding: 5,\n                                                            backgroundColor: filters.topic_id == e.id ? '#25b864': 'rgba(37, 184, 100, .65)',\n                                                            opacity: (filters.topic_id != null && filters.topic_id != e.id) ? .2 : 1,\n                                                            color: 'white',\n                                                            borderRadius: 10,\n                                                            marginLeft: index == 0 ? 0 : 5 }}>\n                                                        #{ e.name }\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                }\n\n                                { !this.state.isLoading && (!friwords || !friwords.length) &&\n                                    <p style={{ textAlign: 'center', marginTop: 10, color: '#fe553a', fontWeight: 600 }}>No hay friwords publicados con esos filtros. Inténtalo nuevamente</p>\n                                }\n\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                        refreshFriword={() => {\n                                            this.getFriwordById(e.id, false);\n                                        }}\n                                        onShowImage={(url) => {\n                                            this.setState({ showImageURL : url });\n                                        }}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    loading={this.state.isLoading}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            { this.state.user != null &&\n                                <TabPane\n                                    tab={\n                                        <span>\n                                            <Icons.FieldTimeOutlined />\n                                                Mis friwords\n                                            </span>\n                                        }\n                                    key={'2'}>\n                                    { friwords && friwords.map((e, index) => (\n                                        <FriwordCard\n                                            loading={this.state.isLoading}\n                                            friword={e}\n                                            comments={e.comments}\n                                            likes={e.likes_qty}\n                                            dislikes={e.dislikes_qty}\n                                            commentsQty={e.comments_qty}\n                                            user={this.state.user}\n                                            onLike={() => {\n                                                Services.Friwords.likeById(e.id, (success) => {\n                                                    setTimeout(() => {\n                                                        this.getFriwordById(e.id);\n                                                    }, 500);\n                                                });\n                                            }}\n                                            onRequestComments={() => {\n                                                this.getFriwordById(e.id);\n                                            }}\n                                            onPostedComment={this.getMe}\n                                            refreshFriword={() => {\n                                                this.getFriwordById(e.id, false);\n                                            }}\n                                            onShowImage={(url) => {\n                                                this.setState({ showImageURL : url });\n                                            }}\n                                        />\n                                    ))}\n\n                                    <Button\n                                        onClick={() => {\n                                            filters.page += 1;\n                                            this.setState({ filters }, this.getFriwords);\n                                        }}\n                                        type=\"primary\"\n                                        loading={this.state.isLoading}\n                                        icon={<Icons.ReloadOutlined />}\n                                        style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                        Cargar más\n                                    </Button>\n                                </TabPane>\n                            }\n                        </Tabs>\n                    ]}\n\n                    { this.state.isLoading &&\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Spin indicator={\n                                <Icons.LoadingOutlined style={{ fontSize: 24 }} spin />\n                            } />\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderWelcome() {\n        return (\n            <div className=\"friwords-container\">\n                <FriwordWelcome\n                    isVisible={this.state.isWelcome}\n                    onStart={() => {\n                        this.setState({ isWelcome : false }, this.getMe);\n                        notification.open({\n                            className: 'success',\n                            message: 'Éxito',\n                            description:\n                                'Bienvenid@ a Friwords. Empieza leyendo y publicando',\n                        });\n\n                        setTimeout(() => {\n                            this.getFriwords();\n                        }, 3000);\n                    }}\n                    onRequestLogin={() => {\n                        this.setState({ isLoggingIn : true, isWelcome: false });\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\n\n// CSS Files\nimport './App.css';\nimport './assets/css/friwords.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}