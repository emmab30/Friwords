{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Firebase.js","components/FriwordCreatePost.js","components/FadeInSection.js","components/FriwordCard.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","state","randomColor","Math","floor","random","length","comment","style","width","marginLeft","height","backgroundColor","marginTop","marginBottom","borderLeft","hexToRgbA","paddingLeft","gutter","span","justify","src","size","shape","color","fontSize","fontFamily","text","display","textAlign","moment","created_at","fromNow","user_alias","hex","opacity","c","test","substring","split","join","Error","ENVIRONMENTS","BASE_URL","ApiService","timeout","headers","api","axios","create","baseURL","interceptors","response","use","error","status","alert","axiosRetry","retries","retryDelay","retryCount","Auth","signInAnonymously","success","post","then","catch","err","Friwords","getFriwords","getFriwordById","id","url","likeById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Option","FriwordCreatePost","checkProps","user","alias","friword","setState","isVisible","onFinish","isValid","Services","onCreated","gender","notification","message","description","componentWillReceiveProps","title","visible","closable","onCancel","onRequestClose","footer","name","className","initialValues","remember","padding","Item","rules","required","onChange","evt","value","prefix","placeholder","fontWeight","flexDirection","onClick","flex","justifyContent","alignItems","maxWidth","maxHeight","type","htmlType","loading","isLoading","FadeInSection","useState","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","ref","FriwordCard","onDislike","hasLiked","hasDisliked","hideDislikeBtn","setTimeout","onLike","hideLikeBtn","isLoadingComments","isSendingComment","canLeaveComment","showComments","sendCommentSuffix","likes","dislikes","onRequestComments","open","twoToneColor","spin","bordered","bodyStyle","avatar","borderRadius","duration","particlesAmountCoefficient","oscillationCoefficient","hidden","marginRight","cursor","comments","map","e","comments_qty","paddingRight","suffix","borderWidth","borderColor","Title","getUsersOnline","onlineUsers","previousOnlineUsers","operator","newUsers","newOnlineUsers","hasUpdates","promises","friwords","idx","_","some","console","log","push","Promise","resolve","reject","all","info","ordered","orderBy","index","findIndex","isCreating","updateListText","setInterval","first","auth","code","onAuthStateChanged","userState","uid","position","top","right","zIndex","borderTopLeftRadius","borderBottomLeftRadius","borderBottom","start","end","borderBottomRightRadius","level","icon","margin","likes_qty","dislikes_qty","commentsQty","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64b54d6a.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar\n} from 'antd';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)]\n        };\n    }\n    render() {\n        const { comment } = this.props;\n\n        return (\n            <div>\n                <div style={{ width: '95%', marginLeft: '5%', height: 5, backgroundColor: 'rgba(0,0,0,.01)', marginTop: 10, marginBottom: 10 }} />\n                <div style={{ width: '95%', marginLeft: '5%', borderLeft: `4px solid ${hexToRgbA(this.state.randomColor, .4)}`, paddingLeft: 10, marginTop: 5 }}>\n                    <Row gutter={24}>\n                        <Col span={24} justify={'center'}>\n                            <Avatar\n                                src={'https://image.flaticon.com/icons/svg/2743/2743220.svg'}\n                                size={'small'}\n                                shape={'circle'}\n                            />\n                            <span style={{ color: 'rgba(0,0,0,.75)', fontSize: 13, fontFamily: 'Open Sans', marginLeft: 5 }}>{ comment.text }</span>\n                            <span style={{ display: 'block', marginTop: 5, fontSize: 10, textAlign: 'left' }}>{ moment(comment.created_at).fromNow() }</span>\n                            { comment && comment.user_alias &&\n                                <span style={{ display: 'block', marginTop: 5, fontSize: 12, textAlign: 'right' }}>por <i>@{ comment.user_alias }</i></span>\n                            }\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'http://167.99.159.107:3334/api/v1/'\n};\n\nvar BASE_URL = ENVIRONMENTS.PRODUCTION;\nvar JWT_TOKEN = null;\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n        if(JWT_TOKEN) {\n            headers['Authorization'] = 'Bearer ' + JWT_TOKEN;\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        if (error.response.status === 401) {\n            alert(\"error\");\n        }\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    signInAnonymously: function(data, success, error) {\n        let url = 'auth/anonymous';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n    authDomain: \"friwords-a3536.firebaseapp.com\",\n    databaseURL: \"https://friwords-a3536.firebaseio.com\",\n    projectId: \"friwords-a3536\",\n    storageBucket: \"friwords-a3536.appspot.com\",\n    messagingSenderId: \"882500991771\",\n    appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n    measurementId: \"G-P8SQZY3BKH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            Services.Friwords.postFriword(this.state.friword, (data) => {\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n                    this.props.onCreated(data.friword);\n                }\n            }, (err) => {\n                // Do nothing\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¡Recuerda! Esto es totalmente anónimo, y tu friword aparecerá creado por <b>{friword.user_alias != null ? friword.user_alias : ''}</b></span>\n                    </div>\n\n                    {/*<div style={{ width: '100%', height: 8, backgroundColor: 'rgba(0,0,0,0.01)', marginTop: 10, marginBottom: 10 }}></div>*/}\n\n                    <Form.Item\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Ingresa un título' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                friword.title = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Título\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa el texto' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Texto\" />\n                    </Form.Item>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600 }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'female';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'female' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'male';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'male' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Publicar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\nimport FadeInSection from './FadeInSection'\n\n// Modules\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ParticleEffectButton from 'react-particle-effect-button'\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            hideDislikeBtn: false,\n            hideLikeBtn: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    onDislike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onDislike();\n        this.setState({ hideDislikeBtn : true, hasDisliked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideDislikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    onLike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onLike();\n        this.setState({ hideLikeBtn : true, hasLiked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideLikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    render() {\n        const {\n            friword\n        } = this.props;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification['error']({\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: true\n                        });\n\n                        notification.open({\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n                    }, (err) => {\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                <Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        return (\n            <FadeInSection key={friword.id}>\n                <div className={`data-node-${friword.id}`} style={{ marginBottom: 5 }}>\n                    <div style={{ width: '100%' }}>\n                        <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(0,0,0,.075)' }}></div>\n                        <Card\n                            bordered={false}\n                            // loading={this.props.loading}\n                            bodyStyle={{ padding: 10, opacity: this.props.loading ? .1 : 1 }}>\n                            <Meta\n                                avatar={\n                                    <Avatar\n                                        src={friword.gender == 'female' ? 'https://image.flaticon.com/icons/svg/590/590083.svg' : 'https://image.flaticon.com/icons/svg/921/921071.svg'}\n                                        size={'small'}\n                                        shape={'circle'}\n                                        style={{ width: 30, height: 30, borderRadius: 15 }}\n                                    />\n                                }\n                                title={\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <span>\n                                            { friword.title }\n                                        </span>\n                                    </div>\n                                }\n                                description={friword.text}\n                            />\n\n                            <span style={{ display: 'block', marginTop: 5, fontSize: 12, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>\n                            { friword && friword.user_alias &&\n                                <span style={{ display: 'block', marginTop: 5, fontSize: 12, textAlign: 'right' }}>por <i>@{ friword.user_alias }</i></span>\n                            }\n\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20, marginBottom: 20 }}>\n                                <ParticleEffectButton\n                                    color='#008bdb'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideLikeBtn}>\n                                    <div\n                                        onClick={this.onLike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#008bdb', width: 100, height: 30, borderRadius: 10, marginRight: 10, cursor: 'pointer', opacity: (this.props.likes > 0 ? 1 : .5) }}>\n                                        <Icons.LikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.likes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n\n                                <ParticleEffectButton\n                                    color='#ff2452'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideDislikeBtn}>\n                                    <div\n                                        onClick={this.onDislike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#ff2452', width: 100, height: 30, borderRadius: 10, cursor: 'pointer', opacity: (this.props.dislikes > 0 ? 1 : .5) }}>\n                                        <Icons.DislikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.dislikes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n                            </div>\n\n                            { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e) => {\n                                return (\n                                    <FriwordComment\n                                        comment={e}\n                                    />\n                                );\n                            })}\n\n                            { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                                <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                            }\n\n                            { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: true,\n                                            showComments: true\n                                        });\n                                        this.props.onRequestComments();\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginTop: 20, fontWeight: 500 }}>\n                                    Ver { friword.comments_qty } comentarios\n                                </a>\n                            }\n\n                            { this.state.canLeaveComment &&\n                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 20 }}>\n                                    <div style={{ height: 50 }}>\n                                        <Avatar\n                                            src=\"https://image.flaticon.com/icons/svg/402/402256.svg\"\n                                            size={'small'}\n                                            shape={'circle'}\n                                            style={{ width: 30, height: 30, borderRadius: 15 }}\n                                        />\n                                    </div>\n\n                                    <div style={{ display: 'flex', flex: 1 }}>\n                                        <Form\n                                            name=\"post_comment\"\n                                            style={{ width: '100%', paddingLeft: 10, paddingRight: 10 }}>\n                                            <Form.Item\n                                                name=\"comment\"\n                                                rules={[{ required: true, message: 'Ingresa un comentario' }]}>\n                                                <Input\n                                                    suffix={sendCommentSuffix}\n                                                    placeholder=\"Deja tu comentario\"\n                                                    onChange={(evt) => {\n                                                        this.setState({ comment: evt.target.value });\n                                                    }}\n                                                    style={{ borderRadius : 10, borderWidth: 1, borderColor: 'rgba(0,0,0,0.05)', height: 40 }}\n                                                />\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </div>\n                            }\n\n                            {/*<div style={{ width: '100%' }}>\n                                <Button\n                                    onClick={() => {\n                                        this.setState({ isCreating : true });\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.PlusOutlined />}\n                                    size={20}\n                                    style={{ display: 'flex', width: 'auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center' }}>\n                                    Dejar comentario\n                                </Button>\n                            </div>*/}\n\n                        </Card>\n                    </div>\n                </div>\n            </FadeInSection>\n        )\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography, notification } from 'antd';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\nimport '../App.css';\n\n// Cards\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            isCreating: false,\n            isLoading: true,\n            hasUpdates: false,\n            previousOnlineUsers: 132,\n            newOnlineUsers: 132,\n            updateListText: 'Actualizar',\n            user: null\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n\n        setInterval(() => {\n            if(this.state.friwords && this.state.friwords.length > 0) {\n                Services.Friwords.hasUpdatesAvailable(_.first(this.state.friwords).id, (data) => {\n                    if(data.success) {\n                        this.setState({ hasUpdates : data.hasUpdates });\n                    }\n                });\n            }\n        }, 10000);\n\n        this.getUsersOnline();\n        setInterval(this.getUsersOnline, 10000);\n\n        Services.firebase.auth().signInAnonymously().catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n        });\n\n        Services.firebase.auth().onAuthStateChanged((user, err) => {\n            if (user) {\n                // User is signed in.\n                let userState = {\n                    type: 'anonymous',\n                    uid: user.uid\n                };\n                this.setState({ user: userState });\n\n                Services.Auth.signInAnonymously(userState, (data) => {\n                    if(data.success){\n                        this.setState({ user : data.user });\n                    }\n                }, (err) => {\n                    // Do nothing\n                });\n            }\n        });\n    }\n\n    getUsersOnline = () => {\n        let onlineUsers = this.state.previousOnlineUsers;\n        let offsetIncrement = 5;\n        let operator = Math.random() < 0.5 ? 1 : -1;\n        let newUsers = (onlineUsers + ((Math.floor(Math.random() * offsetIncrement) + 1) * operator));\n\n        this.setState({\n            newOnlineUsers: newUsers,\n            previousOnlineUsers: onlineUsers\n        });\n    }\n\n    getFriwords = () => {\n        this.getUsersOnline()\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwords((data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    console.log(`Setting promises`);\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                console.log(\"Friword a pushear\", friword);\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                let friwords = this.state.friwords;\n                friwords[index] = data.friword;\n                this.setState({ friwords });\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    render() {\n        const { friwords } = this.state;\n        const defaultOptions = {\n            loop: true,\n            autoplay: true,\n            animationData: animationLoadingData\n        };\n\n        return (\n            <div className=\"friwords-container\">\n\n                <ScrollManager scrollKey=\"friwords-list\" />\n\n                <div style={{ width: '100%', height: 60, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 60, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.75em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                    </div>\n                    <div\n                        style={{ height: 60, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <CountUp\n                            start={this.state.previousOnlineUsers}\n                            end={this.state.newOnlineUsers}\n                        />\n                        <img\n                            style={{ width: 30, height: 30, marginLeft: 10, opacity: .5 }}\n                            src=\"https://image.flaticon.com/icons/svg/745/745205.svg\" />\n                    </div>\n                    <div\n                        onClick={this.getFriwords}\n                        style={{ height: 60, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', opacity: this.state.hasUpdates ? 1 : .6 }}>\n                        <span style={{ fontWeight: 500, fontSize: '1.2em', color: 'white' }}>{ this.state.isLoading ? 'Actualizando..' : 'Actualizar' }</span>\n                        <img\n                            style={{ width: 30, height: 30, marginLeft: 10 }}\n                            src=\"https://image.flaticon.com/icons/svg/1688/1688988.svg\" />\n                    </div>\n                </div>\n\n                <section style={{ textAlign: 'center', marginTop: 80, marginBottom: 20 }}>\n                    <Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            this.getFriwords();\n                            notification.open({\n                                message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                                description:\n                                    'Tu friword fue publicado exitosamente',\n                            });\n                        }}\n                    />\n\n                    <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            onClick={() => {\n                                this.setState({ isCreating : true });\n                            }}\n                            type=\"primary\"\n                            icon={<Icons.PlusOutlined />}\n                            style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                            Escribir algo\n                        </Button>\n                    </div>\n\n                    { friwords && friwords.map((e, index) => (\n                        <FriwordCard\n                            loading={this.state.isLoading}\n                            friword={e}\n                            comments={e.comments}\n                            likes={e.likes_qty}\n                            dislikes={e.dislikes_qty}\n                            commentsQty={e.comments_qty}\n                            user={this.state.user}\n                            onLike={() => {\n                                Services.Friwords.likeById(e.id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(e.id);\n                                    }, 500);\n                                });\n                            }}\n                            onDislike={() => {\n                                Services.Friwords.dislikeById(e.id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(e.id);\n                                    }, 500);\n                                });\n                            }}\n                            onRequestComments={() => {\n                                this.getFriwordById(e.id);\n                            }}\n                        />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\nimport './App.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}