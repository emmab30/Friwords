{"version":3,"sources":["utils/ScrollManager.js","components/FriwordComment.js","services/BaseService.js","services/Auth.js","services/Friwords.js","services/Notifications.js","services/Firebase.js","components/FriwordWelcome.js","components/FriwordLogin.js","components/FriwordCreatePost.js","components/FadeInSection.js","components/FriwordCard.js","components/FriwordsNotificationsPanel.js","pages/Friwords.js","App.js","serviceWorker.js","index.js"],"names":["memoryStore","data","Map","get","key","this","set","ScrollPositionManager","React","Component","constructor","props","super","arguments","connectScrollTarget","bind","_target","window","node","restoreScrollPosition","pos","scrollStore","scrollKey","requestAnimationFrame","target","x","y","Window","scrollTo","scrollLeft","scrollTop","saveScrollPosition","scrollX","scrollY","getScrollPosition","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","children","defaultProps","Meta","RANDOM_COLORS","FriwordComment","state","randomColor","Math","floor","random","length","comment","style","marginBottom","className","user","gender","width","paddingLeft","backgroundColor","borderRadius","gutter","span","justify","dangerouslySetInnerHTML","__html","html","color","fontSize","fontFamily","marginLeft","marginTop","fontWeight","user_alias","display","justifyContent","alignItems","padding","flex","textAlign","ENVIRONMENTS","BASE_URL","SetToken","token","localStorage","setItem","ApiService","timeout","headers","getItem","api","axios","create","baseURL","getBaseUrl","interceptors","response","use","error","axiosRetry","retries","retryDelay","retryCount","setBaseUrl","baseUrl","encodeQueryData","parameters","ret","d","push","encodeURIComponent","join","Auth","isAuthenticated","register","success","post","then","catch","err","signInWithAlias","getMe","updateMe","generateRandomAlias","Friwords","getFriwords","getFriwordsByFilter","filter","getFriwordById","id","url","getPossibleMentionsByFriwordId","likeById","dislikeById","postFriword","postComment","friword_id","hasUpdatesAvailable","lastId","Notifications","getNotifications","updateNotification","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Option","FriwordWelcome","getRandomAlias","setState","isLoading","Services","auth","alias","form","setFieldsValue","onFinish","password","onStart","open","message","description","isVisible","position","top","left","minHeight","zIndex","paddingBottom","height","maxWidth","margin","ref","e","name","initialValues","Item","rules","required","onChange","evt","value","prefix","placeholder","onClick","textDecoration","type","flexDirection","maxHeight","opacity","src","htmlType","loading","onRequestLogin","FriwordLogin","checkProps","friword","onLoggedIn","isValid","componentWillReceiveProps","title","visible","closable","onCancel","onRequestClose","footer","TextArea","FriwordCreatePost","resetFields","onCreated","text","remember","autoSize","minRows","maxRows","maxLength","FadeInSection","useState","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","getMentions","FriwordCard","onDislike","hasLiked","hasDisliked","hideDislikeBtn","setTimeout","onLike","hideLikeBtn","isLoadingComments","isSendingComment","canLeaveComment","showComments","mentions","sendCommentSuffix","likes","dislikes","onRequestComments","twoToneColor","onPostedComment","console","log","spin","bordered","bodyStyle","avatar","size","substring","duration","particlesAmountCoefficient","oscillationCoefficient","hidden","marginRight","cursor","comments","comments_qty","map","paddingRight","FriwordsNotificationsPanel","idx","notifications","seen","notification","onClickNotification","borderBottomWidth","borderBottomColor","moment","created_at","fromNow","Title","TabPane","country_code","ip","ipInfo","country_name","country_code2","hasUpdates","filters","promises","friwords","_","some","Promise","resolve","reject","all","info","ordered","orderBy","page","concat","alert","displayOnlyThis","findIndex","currentFriwordId","index","refresh","listing_mode","tabActiveKey","isViewingNotifications","isWelcome","isCreating","isLoggingIn","renderWelcome","hasNoticicationsUnread","unread_notifications","right","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","borderBottom","textDecorationLine","href","borderBottomRightRadius","level","redirect_to","indexOf","replace","is_configured","icon","likes_qty","dislikes_qty","commentsQty","activeKey","onTabClick","val","only_me","defaultActiveKey","tab","indicator","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8611af10.chunk.js","sourcesContent":["import React from 'react';\nimport requestAnimationFrame from 'raf';\n\nexport const memoryStore = {\n    data: new Map(),\n    get(key) {\n        if (!key) {\n            return null;\n        }\n\n        return this.data.get(key) || null;\n    },\n    set(key, data) {\n        if (!key) {\n            return;\n        }\n        return this.data.set(key, data);\n    }\n};\n\n/**\n * Component that will save and restore Window scroll position.\n */\n\nexport default class ScrollPositionManager extends React.Component {\n    constructor(props) {\n        super(...arguments);\n        this.connectScrollTarget = this.connectScrollTarget.bind(this);\n        this._target = window;\n    }\n\n    connectScrollTarget(node) {\n        this._target = node;\n    }\n\n    restoreScrollPosition(pos) {\n        pos = pos || this.props.scrollStore.get(this.props.scrollKey);\n        if (this._target && pos) {\n            requestAnimationFrame(() => {\n                scroll(this._target, pos.x, pos.y);\n            });\n        }\n    }\n\n    saveScrollPosition(key) {\n        if (this._target) {\n            const pos = getScrollPosition(this._target);\n            key = key || this.props.scrollKey;\n            this.props.scrollStore.set(key, pos);\n        }\n    }\n\n    componentDidMount() {\n        this.restoreScrollPosition();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.props.scrollKey !== nextProps.scrollKey) {\n            this.saveScrollPosition();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.scrollKey !== prevProps.scrollKey) {\n            this.restoreScrollPosition();\n        }\n    }\n\n    componentWillUnmount() {\n        this.saveScrollPosition();\n    }\n\n    render() {\n        const { children = null, ...props } = this.props;\n        return children && children({ ...props, connectScrollTarget: this.connectScrollTarget });\n    }\n}\n\nScrollPositionManager.defaultProps = {\n    scrollStore: memoryStore\n};\n\nfunction scroll(target, x, y) {\n    if (target instanceof window.Window) {\n        target.scrollTo(x, y);\n    } else {\n        target.scrollLeft = x;\n        target.scrollTop = y;\n    }\n}\n\nfunction getScrollPosition(target) {\n    if (target instanceof window.Window) {\n        return { x: target.scrollX, y: target.scrollY };\n    }\n\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\n","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar\n} from 'antd';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst RANDOM_COLORS = ['#f69600', '#f66200', '#edf600', '#00f6a8', '#00b9f6', '#1700f6', '#8b00f6', '#f600e2', '#f60057']\n\nexport default class FriwordComment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomColor: RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)]\n        };\n    }\n    render() {\n        const { comment } = this.props;\n\n        return (\n            <div style={{ marginBottom: 15 }}>\n                {/*<div style={{ width: '95%', marginLeft: '2%', height: 3, backgroundColor: 'rgba(0,0,0,.005)', marginTop: 5, marginBottom: 0 }} />*/}\n                <div className={`custom-card ${comment && comment.user && comment.user.gender == 'female' ? 'female' : 'male'}`} style={{ width: '100%', paddingLeft: 10, marginBottom: 10, backgroundColor: 'rgba(0,0,0,.02)', borderRadius: 1 }}>\n                    <Row gutter={24}>\n                        <Col span={24} justify={'center'}>\n                            <span\n                                dangerouslySetInnerHTML={{ __html: comment.html }}\n                                style={{ color: 'rgba(0,0,0,.75)', fontSize: 12, fontFamily: 'Open Sans', marginLeft: 0, marginTop: 5, fontWeight: 400 }}></span>\n\n                            { false && comment && comment.user && comment.user.country_code != null &&\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\n                                    <img\n                                        style={{ width: 20 }}\n                                        src={`https://www.countryflags.io/${comment.user.country_code}/shiny/64.png`}\n                                    />\n                                </div>\n                            }\n\n                            { comment && comment.user_alias &&\n                                <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'center', marginBottom: 0, marginTop: 15, padding: 5 }}>\n                                    <span style={{ display: 'flex', flex: 0, marginTop: 0, fontSize: 12, textAlign: 'left' }}><span style={{ color: `${comment && comment.user && comment.user.gender == 'male' ? '#3483db' : '#ff8b9a'}`, fontWeight: 600 }}>@{ comment.user_alias }</span></span>\n                                    { false && comment && comment.user && comment.user.gender != null &&\n                                        <Avatar\n                                            src={comment.user.gender == 'female' ? 'https://image.flaticon.com/icons/svg/2284/2284897.svg' : 'https://image.flaticon.com/icons/svg/2284/2284900.svg'}\n                                            size={'small'}\n                                            style={{ borderRadius: 0, width: 15, height: 15, marginLeft: 5, opacity: .25 }}\n                                        />\n                                    }\n                                </div>\n                            }\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n};\n\nfunction hexToRgbA(hex, opacity){\n    var c;\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n        c= hex.substring(1).split('');\n        if(c.length== 3){\n            c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c= '0x'+c.join('');\n        return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n    }\n    throw new Error('Bad Hex');\n}","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\n/** This function configure the Axios library **/\n\nvar ENVIRONMENTS = {\n    LOCAL: 'http://localhost:3333/api/v1/',\n    PRODUCTION: 'https://api.friwords.com/api/v1/'\n};\n\nvar BASE_URL = process.env.NODE_ENV == 'development' ? ENVIRONMENTS.PRODUCTION : ENVIRONMENTS.PRODUCTION;\nvar JWT_TOKEN = null;\n\nexport function SetToken(token) {\n    localStorage.setItem('JWT_TOKEN', token);\n    JWT_TOKEN = token;\n}\n\nexport function ApiService(timeout = 15000, headers) {\n\n    if(!headers) {\n        headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        };\n\n        if(localStorage.getItem('JWT_TOKEN')) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem('JWT_TOKEN');\n        }\n    }\n\n    // Instance the webservice caller\n    var api = axios.create({\n        baseURL: getBaseUrl(),\n        timeout: timeout,\n        headers: headers\n    });\n\n    api.interceptors.response.use(response => {\n        return response;\n    }, error => {\n        /*if (error.response.status === 401) {\n            alert(\"error\");\n        }*/\n\n        return error;\n    });\n\n    axiosRetry(api, {\n        retries: 5,\n        retryDelay: (retryCount) => {\n            return retryCount * 1000;\n        }\n    });\n\n    return api;\n}\n\nexport function setBaseUrl(baseUrl) {\n    if(baseUrl == null) {\n        BASE_URL = ENVIRONMENTS.PRODUCTION;\n    } else {\n        BASE_URL = baseUrl;\n    }\n}\n\nexport function getBaseUrl() {\n    return BASE_URL;\n}\n\nexport function encodeQueryData(parameters) {\n    let ret = [];\n    for (let d in parameters)\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(parameters[d]));\n    return ret.join('&');\n}","import { ApiService } from './BaseService.js';\n\nvar Auth = {\n    user: null,\n    isAuthenticated: () => {\n        return Auth.user != null\n    },\n    register: function(data, success, error) {\n        let url = 'auth/register';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    signInWithAlias: function(data, success, error) {\n        let url = 'auth/sign_in';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getMe: function(success, error) {\n        let url = 'profile/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateMe: function(data, success, error) {\n        let url = 'profile/me';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    generateRandomAlias: function(success, error) {\n        let url = 'auth/generate_alias';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Auth;","import { ApiService } from './BaseService.js';\n\nvar Friwords = {\n    getFriwords: function(success, error) {\n        let url = 'friwords';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordsByFilter: function(filter, success, error) {\n        let url = 'friwords/filter';\n\n        ApiService().post(url, filter).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getFriwordById: function(id, success, error) {\n        let url = `friwords/${id}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    getPossibleMentionsByFriwordId: function(id, success, error) {\n        let url = `friwords/${id}/possible_mentions`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    likeById: function(id, success, error) {\n        let url = `friwords/${id}/like`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    dislikeById: function(id, success, error) {\n        let url = `friwords/${id}/dislike`;\n\n        ApiService().post(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postFriword: function(data, success, error) {\n        let url = 'friwords';\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    postComment: function(data, success, error) {\n        let url = `friwords/${data.friword_id}/comments`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    hasUpdatesAvailable: function(lastId, success, error) {\n        let url = `friwords/updates_available/${lastId}`;\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Friwords;","import { ApiService } from './BaseService.js';\n\nvar Notifications = {\n    getNotifications: function(success, error) {\n        let url = 'notifications/me';\n\n        ApiService().get(url).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    },\n    updateNotification: function(data, success, error) {\n        let url = `notifications/${data.id}/update`;\n\n        ApiService().post(url, data).then((response) => {\n            if(success) success(response.data);\n        }).catch((err) => {\n            if(error) error(err);\n        });\n    }\n};\n\nexport default Notifications;","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyCSAjJKGPVlX6zNOHWT2Otg2nXljs5f_lA\",\n    authDomain: \"friwords-a3536.firebaseapp.com\",\n    databaseURL: \"https://friwords-a3536.firebaseio.com\",\n    projectId: \"friwords-a3536\",\n    storageBucket: \"friwords-a3536.appspot.com\",\n    messagingSenderId: \"882500991771\",\n    appId: \"1:882500991771:web:f125ad3a2aa021a0eaf1be\",\n    measurementId: \"G-P8SQZY3BKH\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordWelcome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.getRandomAlias();\n    }\n\n    getRandomAlias = () => {\n        this.setState({ isLoading: true });\n        Services.Auth.generateRandomAlias((data) => {\n            this.setState({ isLoading: false });\n            if(data.success) {\n                let auth = this.state.auth;\n                auth.alias = data.alias;\n                this.setState({ auth });\n\n                this.form.setFieldsValue({\n                    alias: data.alias\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    onFinish = () => {\n        if(!this.state.auth.gender) {\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Escoge tu género',\n            });\n            return;\n        };\n\n        this.setState({ isLoading : true });\n        Services.Auth.register({\n            alias: this.state.auth.alias,\n            password: this.state.auth.password,\n            gender: this.state.auth.gender\n        }, (data) => {\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                if(this.props.onStart)\n                    this.props.onStart();\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message,\n                });\n            }\n\n            this.setState({ isLoading : false });\n        }, (err) => {\n            // Do nothing\n            this.setState({ isLoading : false });\n        });\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        if(!this.props.isVisible)\n            return null;\n\n        return (\n            <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', minHeight: '100%', zIndex: 99999, backgroundColor: '#25b864', paddingBottom: 20 }}>\n                <h1 style={{ textAlign: 'center', color: 'white', marginTop: 10 }}>Ingresa a Friwords</h1>\n\n                <div style={{ width: '100%', height: 10, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <p style={{ maxWidth: '80%', margin: '0 auto', color: 'rgba(255,255,255,.8)', textAlign: 'center' }}>Crea tu alias y tu contraseña. Recordá que <b>todo será anónimo</b></p>\n\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    initialValues={{\n                        alias: auth.alias\n                    }}\n                    onFinish={this.onFinish}>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<span>@</span>} placeholder=\"Tu alias\" />\n                    </Form.Item>\n\n                    <a\n                        onClick={this.getRandomAlias}\n                        style={{ width: '90%', color: 'white', textDecoration: 'underline', marginLeft: '5%', margin: '0 auto', padding: 0, display: 'block', marginBottom: 5 }}\n                    >Generar alias al azar</a>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Ingresa una contraseña' }]}\n                        style={{ width: '90%', margin: '5px auto' }}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            style={{ width: '100%', margin: '0 auto' }}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600, color: 'white' }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'female';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'female' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                auth.gender = 'male';\n                                this.setState({ auth });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: auth.gender == 'male' ? 1 : 0.6 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>\n\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={this.state.isLoading} style={{ display: 'flex', width: '75%', margin: '0 auto', backgroundColor: 'white', height: 50, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', color: '#00a2ff', marginTop: 15 }}>\n                            Registrarme\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(255,255,255,.15)', marginBottom: 10, marginTop: 10 }}></div>\n\n                <Button\n                    onClick={() => {\n                        this.props.onRequestLogin();\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={this.state.isLoading} style={{ display: 'flex', width: '100%', margin: '0 auto', height: 40, color: 'white', fontWeight: 600, justifyContent: 'center', alignItems: 'center', backgroundColor: '#00a2ff' }}>\n                    ¡Ya tengo un alias!\n                </Button>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nexport default class FriwordLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isLoading: false,\n            auth: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        this.setState({ isLoading : true });\n        Services.Auth.signInWithAlias(this.state.auth, (data) => {\n            this.setState({ isLoading : false });\n            if(data.success) {\n                Services.Base.SetToken(data.token);\n                this.props.onLoggedIn(data.user);\n            } else {\n                notification.open({\n                    className: 'error',\n                    message: <Icons.CloseCircleFilled />,\n                    description: data.message\n                });\n            }\n        }, (err) => {\n            this.setState({ isLoading : false });\n            notification.open({\n                className: 'error',\n                message: <Icons.CloseCircleFilled />,\n                description: 'Ese alias no es válido'\n            });\n\n            return false;\n        });\n    }\n\n    isValid = () => {\n        return true;\n    }\n\n    render() {\n        const {\n            auth\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Ingresá con tu alias`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    name=\"login_in\"\n                    className=\"login-in\"\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¿Tienes un alias distinto? Ingresa tu alias y la contraseña que se te pidió al crearlo.</span>\n                    </div>\n\n                    <Form.Item\n                        name=\"alias\"\n                        rules={[{ required: true, message: 'Ingresa tu alias' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.alias = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            prefix={<Icons.UserSwitchOutlined className=\"site-form-item-icon\" />} placeholder=\"Alias\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa la contraseña' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                auth.password = evt.target.value;\n                                this.setState({ auth });\n                            }}\n                            type={'password'}\n                            prefix={<Icons.KeyOutlined className=\"site-form-item-icon\" />} placeholder=\"Contraseña\" />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Ingresar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordCreatePost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            friword: {}\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if(props.user && props.user.alias) {\n            let friword = this.state.friword;\n            friword.user_alias = props.user.alias;\n            this.setState({ friword });\n        }\n\n        this.setState({ isVisible : props.isVisible });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            friword\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Publica tu friword`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n                <Form\n                    ref={(e) => { this.form = e; }}\n                    name=\"post_friword\"\n                    className=\"post-friword\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}>\n\n                    <div style={{ marginBottom: 10, backgroundColor: 'rgba(0,0,0,.03)', padding: 10 }}>\n                        <span>¡Recuerda! Esto es totalmente anónimo, y tu friword aparecerá creado por <b>{friword.user_alias != null ? friword.user_alias : ''}</b></span>\n                    </div>\n\n                    {/*<div style={{ width: '100%', height: 8, backgroundColor: 'rgba(0,0,0,0.01)', marginTop: 10, marginBottom: 10 }}></div>*/}\n\n                    {/*<Form.Item\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Ingresa un título' }]}>\n                        <Input\n                            onChange={(evt) => {\n                                friword.title = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Título\" />\n                    </Form.Item>*/}\n\n                    <Form.Item\n                        name=\"text\"\n                        rules={[{ required: true, message: 'Ingresa el texto' }]}>\n                        <TextArea\n                            placeholder=\"Tu texto\"\n                            autoSize={{ minRows: 2, maxRows: 8 }}\n                            maxLength={750}\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />}\n                        />\n                        {/*<Input\n                            onChange={(evt) => {\n                                friword.text = evt.target.value;\n                                this.setState({ friword });\n                            }}\n                            prefix={<Icons.QuestionCircleOutlined className=\"site-form-item-icon\" />} placeholder=\"Texto\" />*/}\n                    </Form.Item>\n                    <span>{750 - (friword && friword.text && friword.text.length ? friword.text.length : 0)} caracteres restantes</span>\n\n                    <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.05)', marginTop: 20, marginBottom: 20 }}></div>\n\n                    {/*<span style={{ width: '100%', display: 'block', textAlign: 'center', fontWeight: 600 }}>Selecciona tu género</span>\n                    <div style={{ width: '100%', height: 40, display: 'flex', flexDirection: 'row', marginBottom: 20 }}>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'female';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'female' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/590/590083.svg\"\n                            />\n                        </div>\n                        <div\n                            onClick={() => {\n                                friword.gender = 'male';\n                                this.setState({ friword });\n                            }}\n                            style={{ display: 'flex', flex: 1, flexDirection: 'row', backgroundColor: 'transparent', justifyContent: 'center', alignItems: 'center' }}>\n                            <img\n                                style={{ maxWidth: 35, maxHeight: 35, opacity: friword.gender == 'male' ? 1 : 0.5 }}\n                                src=\"https://image.flaticon.com/icons/svg/921/921071.svg\" />\n                        </div>\n                    </div>*/}\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                            Publicar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n};","import React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(true);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => setVisible(entry.isIntersecting));\n        });\n        observer.observe(domRef.current);\n        return () => observer.unobserve(domRef.current);\n    }, []);\n    return (\n        <div\n            className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n            ref={domRef}>\n            {props.children}\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Button,\n    Form,\n    Input,\n    notification,\n    Mentions\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\nimport FadeInSection from './FadeInSection'\n\n// Modules\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport ParticleEffectButton from 'react-particle-effect-button'\n\n// Services\nimport * as Services from '../services'\n\nimport '../App.css';\n\nconst { Meta } = Card;\nconst { TextArea } = Input;\nconst { Option, getMentions } = Mentions;\n\nexport default class FriwordCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingComments: false,\n            hideDislikeBtn: false,\n            hideLikeBtn: false,\n            isSendingComment: false,\n            canLeaveComment: true,\n            comment: '',\n            showComments: false,\n            mentions: [],\n\n            // False both\n            hasDisliked: false,\n            hasLiked: false\n        };\n    }\n\n    componentDidMount() {\n        // Get possible mentions\n        Services.Friwords.getPossibleMentionsByFriwordId(this.props.friword.id, (data) => {\n            if(data.success) {\n                this.setState({ mentions : data.mentions });\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    onDislike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onDislike();\n        this.setState({ hideDislikeBtn : true, hasDisliked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideDislikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    onLike = () => {\n        if(this.state.hasLiked || this.state.hasDisliked)\n            return;\n\n        this.props.onLike();\n        this.setState({ hideLikeBtn : true, hasLiked : true }, () => {\n            setTimeout(() => {\n                this.setState({ hideLikeBtn : false });\n            }, 1000);\n        });\n    }\n\n    render() {\n        const {\n            friword\n        } = this.props;\n        const { mentions } = this.state;\n\n        let sendCommentSuffix = (\n            <div\n                onClick={() => {\n\n                    if(this.props.user == null) {\n                        notification.open({\n                            className: 'error',\n                            message: 'Ingresa primero',\n                            description:\n                                'Ingresa o crea tu alias para dejar comentarios',\n                        });\n                        return;\n                    }\n\n                    // Create comment\n                    if(!this.state.comment || this.state.comment.length < 2) {\n                        notification.open({\n                            className: 'error',\n                            message: 'El comentario..',\n                            description:\n                                'A tu comentario le falta un poco de magia. Complétalo',\n                        });\n                        return;\n                    }\n\n                    this.setState({ isSendingComment : true });\n                    Services.Friwords.postComment({\n                        text: this.state.comment,\n                        user_alias: this.props.user != null && this.props.user.alias != null ? this.props.user.alias : '',\n                        friword_id: friword.id,\n                        likes: 0,\n                        dislikes: 0\n                    }, (data) => {\n                        this.props.onRequestComments();\n                        this.setState({\n                            canLeaveComment : false,\n                            isSendingComment: false,\n                            showComments: true\n                        });\n\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description: 'Tu comentario ya está visible',\n                        });\n\n                        if(this.props.onPostedComment)\n                            this.props.onPostedComment();\n                    }, (err) => {\n                        console.log(err);\n                        // Do nothing\n                    });\n                }}\n                style={{ backgroundColor: 'transparent', padding: 0, marginTop: 0, display: 'flex', flex: 1 }}>\n                <a style={{ fontWeight: 800, padding: 15 }}>Enviar</a>\n                {/*<Icons.SendOutlined style={{ color: 'rgba(0,0,0,.75)' }} />*/}\n            </div>\n        );\n\n        if(this.state.isSendingComment) {\n            sendCommentSuffix = (\n                <div style={{ backgroundColor: 'white', padding: 0, marginTop: 5 }}>\n                    <Icons.SendOutlined spin style={{ color: 'rgba(0,0,0,.75)' }} />\n                </div>\n            );\n        }\n\n        let isMale = friword && friword.user && friword.user.gender == 'male';\n        let isFemale = friword && friword.user && friword.user.gender == 'female';\n\n        return (\n            <FadeInSection key={friword.id}>\n                <div className={`data-node-${friword.id}`} style={{ marginBottom: 20 }}>\n                    <div style={{ width: '100%' }}>\n                        <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,.025)' }}></div>\n                        <Card\n                            bordered={false}\n                            // loading={this.props.loading}\n                            bodyStyle={{ padding: 10, opacity: this.props.loading ? .1 : 1 }}>\n                            <Meta\n                                avatar={\n                                    <Avatar\n                                        src={friword && friword.user && friword.user.gender == 'female' ? 'https://image.flaticon.com/icons/svg/2284/2284897.svg' : 'https://image.flaticon.com/icons/svg/2284/2284900.svg'}\n                                        size={'large'}\n                                        style={{ borderRadius: 0, width: 30, height: 30 }}\n                                    />\n                                }\n                                title={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span>\n                                            { `${friword.text.substring(0, 30)}...` }\n                                        </span>\n                                    </div>\n                                }\n                                description={\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span style={{ fontSize: '0.9em' }}>{ `${friword.text}` }</span>\n                                    </div>\n                                }\n                            />\n\n                            {/*<span style={{ display: 'block', marginTop: 10, fontSize: 12, textAlign: 'right' }}>{ moment(friword.created_at).fromNow() }</span>*/}\n\n                            { friword && friword.user_alias &&\n                                <span style={{ display: 'block', marginTop: 0, fontSize: 10, textAlign: 'right' }}>por <span style={{ color: '#25b864', fontWeight: 600 }}>@{ friword.user_alias }</span></span>\n                            }\n\n                            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20, marginBottom: 20 }}>\n                                <ParticleEffectButton\n                                    color='#008bdb'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideLikeBtn}>\n                                    <div\n                                        onClick={this.onLike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#25b864', width: 60, height: 30, borderRadius: 2, marginRight: 10, cursor: 'pointer', opacity: (this.props.likes > 0 ? 1 : .75) }}>\n                                        <Icons.LikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.likes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n\n                                <ParticleEffectButton\n                                    color='#ff2452'\n                                    duration={250}\n                                    type={'rectangle'}\n                                    particlesAmountCoefficient={1}\n                                    oscillationCoefficient={5}\n                                    hidden={this.state.hideDislikeBtn}>\n                                    <div\n                                        onClick={this.onDislike}\n                                        style={{ display: 'flex', flex: 0, alignItems: 'center', justifyContent: 'center', backgroundColor: '#ff2452', width: 60, height: 30, borderRadius: 2, cursor: 'pointer', opacity: (this.props.dislikes > 0 ? 1 : .75) }}>\n                                        <Icons.DislikeOutlined style={{ color: 'white' }} />\n                                        <span style={{ color: 'white', marginLeft: 5 }}>{ this.props.dislikes }</span>\n                                    </div>\n                                </ParticleEffectButton>\n                            </div>\n\n                            { this.state.isLoadingComments && (!friword.comments || !friword.comments.length) &&\n                                <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                            }\n\n                            { !this.state.isLoadingComments && !this.state.showComments && friword.comments_qty > 0 &&\n                                <a\n                                    onClick={() => {\n                                        this.setState({\n                                            isLoadingComments: true,\n                                            showComments: true\n                                        });\n                                        this.props.onRequestComments();\n                                    }}\n                                    style={{ display: 'block', marginLeft: 0, marginTop: 5, fontWeight: 500 }}>\n                                    Ver { friword.comments_qty } comentarios\n                                </a>\n                            }\n\n                            { this.state.showComments && friword.comments != null && friword.comments.length > 0 && friword.comments.map((e) => {\n                                return (\n                                    <FriwordComment\n                                        comment={e}\n                                    />\n                                );\n                            })}\n\n                            { this.state.canLeaveComment &&\n                                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 20, marginBottom: 10 }}>\n                                    <div style={{ display: 'flex', flex: 1 }}>\n                                        <Form\n                                            name=\"post_comment\"\n                                            style={{ width: '100%', paddingLeft: 0, paddingRight: 0, position: 'relative' }}>\n                                            <Form.Item\n                                                name=\"comment\"\n                                                rules={[{ required: true, message: 'Ingresa un comentario' }]}\n                                                style={{ marginBottom: 0, paddingBottom: 0 }}>\n                                                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                                    <Mentions\n                                                        onChange={(comment) => {\n                                                            this.setState({ comment });\n                                                        }}\n                                                        className=\"input-comment\"\n                                                        placeholder=\"Deja tu comentario\"\n                                                        autoSize={{ minRows: 1, maxRows: 3 }}\n                                                        maxLength={750}>\n                                                        { mentions && mentions.map((e) => {\n                                                            return (\n                                                                <Option value={e.alias}>{e.alias}</Option>\n                                                            );\n                                                        })}\n                                                    </Mentions>\n\n                                                    { sendCommentSuffix }\n                                                </div>\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </div>\n                            }\n\n                            { this.props.user == null &&\n                                <div style={{ width: '100%', backgroundColor: '#25b864', padding: 5, marginTop: 10, borderRadius: 2 }}>\n                                    <span style={{ display: 'block', fontSize: 12, fontWeight: 600, textAlign: 'left', color: 'white' }}>Creá tu alias anónimo para dejar un comentario</span>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                </div>\n            </FadeInSection>\n        )\n    }\n};","import React from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Modal,\n    Button,\n    Form,\n    Input,\n    Select,\n    notification\n} from 'antd';\n\n// Components\nimport FriwordComment from './FriwordComment';\n\n// Modules\nimport moment from 'moment';\nimport * as Icons from '@ant-design/icons';\nimport { Spin } from 'antd';\n\nimport '../App.css';\n\n// Services\nimport * as Services from '../services'\n\nconst { Meta } = Card;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default class FriwordsNotificationsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            notifications: []\n        };\n\n        this.form = null;\n    }\n\n    componentDidMount() {\n        this.checkProps(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.checkProps(nextProps);\n    }\n\n    checkProps = (props) => {\n        this.setState({ isVisible : props.isVisible });\n        if(props.isVisible == true && this.state.isVisible == false) {\n            this.getNotifications();\n        }\n    }\n\n    getNotifications = () => {\n        this.setState({ isLoading : true });\n        Services.Notifications.getNotifications((data) => {\n            if(data.success) {\n                this.setState({\n                    notifications: data.notifications,\n                    isLoading: false\n                });\n\n                // Mark as seen\n                for(var idx in data.notifications) {\n                    Services.Notifications.updateNotification({\n                        id: data.notifications[idx].id,\n                        seen: true\n                    }, (response) => {\n                        let notifications = this.state;\n                        notifications[idx].seen = true;\n                        this.setState({ notifications });\n                    });\n                }\n            }\n        }, (err) => {\n            this.setState({\n                notifications: [],\n                isLoading: false\n            });\n            // Do nothing\n        });\n    }\n\n    onFinish = () => {\n        if(this.isValid()) {\n            this.setState({ isLoading : true });\n\n            const { friword } = this.state;\n            // friword.title = friword.text.substring(0, 12) + '...';\n\n            Services.Friwords.postFriword(friword, (data) => {\n                this.setState({ isLoading : false });\n                if(data.success) {\n                    this.setState({\n                        isVisible: false,\n                        friword: {}\n                    });\n\n                    // Reset form\n                    if(this.form)\n                        this.form.resetFields();\n\n                    this.props.onCreated(data.friword);\n                } else {\n                    notification.open({\n                        className: 'error',\n                        message: 'Oops',\n                        description: data.message,\n                    });\n                }\n            }, (err) => {\n                // Do nothing\n                this.setState({ isLoading : false });\n                notification.open({\n                    className: 'error',\n                    message: 'Oops',\n                    description:\n                        'Tu friword no pudo ser creado ahora. Intenta en unos momentos.',\n                });\n            });\n        }\n    }\n\n    isValid = () => {\n        const { friword } = this.state;\n        /*if(friword.gender == null) {\n            notification['error']({\n                message: 'El género',\n                description:\n                    'Selecciona tu género',\n            });\n\n            return false;\n        }*/\n\n        if(!friword || !friword.text || friword.text.length < 10) {\n            notification.open({\n                className: 'error',\n                message: 'Oops',\n                description: 'Escribe un texto de al menos 10 caracteres',\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const {\n            notifications,\n            friword,\n            isLoading\n        } = this.state;\n\n        return (\n            <Modal\n                title={`Tus notificaciones`}\n                visible={this.state.isVisible}\n                closable={true}\n                onCancel={() => {\n                    this.props.onRequestClose()\n                }}\n                footer={null}>\n\n                { !isLoading && notifications && notifications.length > 0 && notifications.map((notification) => {\n                    return (\n                        <div\n                            onClick={() => {\n                                if(this.props.onClickNotification){\n                                    this.props.onClickNotification(notification);\n                                }\n                            }}\n                            style={{ width: '100%', marginBottom: 10, position: 'relative', backgroundColor: !notification.seen ? 'rgba(255, 160, 0, .15)' : 'white', padding: 10, borderRadius: 5 }}>\n\n                            <div style={{ width: '100%', borderBottomWidth: 5, borderBottomColor: 'rgba(0,0,0,.05)' }} dangerouslySetInnerHTML={{ __html: notification.html }}></div>\n\n                            <span style={{ display: 'block', width: '100%', fontSize: 11, marginTop: 5, textAlign: 'right' }}>{ moment(notification.created_at).fromNow() }</span>\n\n                            <div style={{ width: '100%', height: 5, backgroundColor: 'rgba(0,0,0,0.1)', marginTop: 10 }}></div>\n                        </div>\n                    );\n                })}\n\n                { !isLoading && !notifications || notifications.length == 0 &&\n                    <span>¡Aún no tienes notificaciones para revisar!</span>\n                }\n\n                { isLoading &&\n                    <Icons.LoadingOutlined style={{ fontSize: 24, color: '#ff306f', marginTop: 10 }} spin />\n                }\n\n            </Modal>\n        )\n    }\n};","import React from 'react';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    DatePicker,\n    Switch,\n    Slider,\n    Button,\n    Typography,\n    Tabs,\n    notification,\n    Spin\n} from 'antd';\n\nimport axios from 'axios';\nimport Lottie from 'react-lottie';\nimport * as Icons from '@ant-design/icons';\nimport * as animationLoadingData from '../assets/animations/load.json'\nimport _ from 'lodash';\nimport CountUp from 'react-countup';\nimport ScrollManager from '../utils/ScrollManager'\n\n// Cards\nimport FriwordWelcome from '../components/FriwordWelcome';\nimport FriwordLogin from '../components/FriwordLogin';\nimport FriwordCreatePost from '../components/FriwordCreatePost';\nimport FriwordCard from '../components/FriwordCard';\nimport FriwordsNotificationsPanel from '../components/FriwordsNotificationsPanel';\n\n// Services\nimport * as Services from '../services'\n\nconst { Option } = Select;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nexport default class Friwords extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            friwords: [],\n            filters: {\n                listing_mode : 1,\n                page: 0\n            },\n            tabActiveKey: '1',\n            isViewingNotifications: false,\n            isWelcome: false,\n            isCreating: false,\n            isLoggingIn: false,\n            isLoading: true,\n            hasUpdates: false,\n            /*previousOnlineUsers: 132,\n            newOnlineUsers: 132,*/\n            user: null,\n            currentFriwordId: null\n        };\n    }\n\n    componentDidMount() {\n        this.getFriwords();\n        this.getMe();\n\n        /*setInterval(() => {\n            if(this.state.friwords && this.state.friwords.length > 0) {\n                Services.Friwords.hasUpdatesAvailable(_.first(this.state.friwords).id, (data) => {\n                    if(data.success) {\n                        this.setState({ hasUpdates : data.hasUpdates });\n                    }\n                });\n            }\n        }, 10000);*/\n    }\n\n    getMe = () => {\n        Services.Auth.getMe((data) => {\n            if(data.success) {\n                if(data.user != null) {\n                    this.setState({ user: data.user });\n\n                    Services.Auth.user = data.user;\n\n                    if(data.user && !data.user.country_code && !data.user.ip) {\n                        const apiKey = '45c816eed2d04a8b96e59ff177c609af';\n                        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&fields=geo&output=json`).then((data) => {\n                            if(data && data.data) {\n                                const ipInfo = data.data;\n                                Services.Auth.updateMe({\n                                    country_name: ipInfo && ipInfo.country_name,\n                                    country_code: ipInfo && ipInfo.country_code2,\n                                    ip: ipInfo && ipInfo.ip\n                                }, (success) => {\n                                    if(success.success) {\n                                        this.setState({ user : success.user });\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    /*getUsersOnline = () => {\n        let onlineUsers = this.state.previousOnlineUsers;\n        let offsetIncrement = 5;\n        let operator = Math.random() < 0.5 ? 1 : -1;\n        let newUsers = (onlineUsers + ((Math.floor(Math.random() * offsetIncrement) + 1) * operator));\n\n        this.setState({\n            newOnlineUsers: newUsers,\n            previousOnlineUsers: onlineUsers\n        });\n    }*/\n\n    getFriwords = () => {\n        // this.getUsersOnline()\n        this.setState({ isLoading : true, hasUpdates: false });\n        Services.Friwords.getFriwordsByFilter(this.state.filters, (data) => {\n\n            // Check those which have comments. If they have comments loaded, then we need to pull the new comments for those\n            let promises = [];\n            let friwords = [];\n            for(var idx in data.friwords) {\n                const friword = data.friwords[idx];\n                if(_.some(this.state.friwords, (e) => e.id == friword.id && e.comments && e.comments.length > 0)) {\n                    promises.push(new Promise((resolve, reject) => {\n                        Services.Friwords.getFriwordById(friword.id, (friword) => {\n                            if(friword.success) {\n                                friwords.push(friword.friword);\n                                resolve();\n                            } else {\n                                friwords.push(friword.friword);\n                                resolve();\n                            }\n                        }, (err) => {\n                            friwords.push(friword.friword);\n                            resolve();\n                        });\n                    }));\n                } else {\n                    friwords.push(friword);\n                }\n            }\n\n            Promise.all(promises).then((info) => {\n\n                let ordered = _.orderBy(friwords, ['created_at'], ['desc'])\n\n                // If there are friwords on the state, we need to append this list (since it's a new page)\n                if(this.state.friwords && this.state.friwords.length > 0 && this.state.filters.page > 0)\n                    ordered = this.state.friwords.concat(ordered);\n\n                this.setState({\n                    isLoading : false,\n                    friwords: ordered\n                });\n            });\n        }, (err) => {\n            alert(`Estamos teniendo algunos problemas en este momento. Refresca la página en unos segundos.`);\n            this.setState({ isLoading : false });\n        });\n    }\n\n    getFriwordById = (id, displayOnlyThis = false) => {\n        Services.Friwords.getFriwordById(id, (data) => {\n            if(data.success) {\n                if(displayOnlyThis) {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = [data.friword];\n                    this.setState({\n                        friwords,\n                        currentFriwordId: id,\n                        isLoading: false\n                    }, this.getMe);\n                } else {\n                    let index = _.findIndex(this.state.friwords, (e) => e.id == data.friword.id);\n                    let friwords = this.state.friwords;\n                    friwords[index] = data.friword;\n                    this.setState({\n                        friwords,\n                        isLoading: false\n                    });\n                }\n            }\n        }, (err) => {\n            // Do nothing\n        });\n    }\n\n    refresh = () => {\n        this.getFriwords();\n        this.getMe();\n    }\n\n    isAuthenticated = () => {\n        return Services.Auth.isAuthenticated();\n    }\n\n    render() {\n        const {\n            friwords,\n            filters\n        } = this.state;\n\n        if(this.state.isWelcome) {\n            return this.renderWelcome();\n        }\n\n        const hasNoticicationsUnread = this.state.user != null && this.state.user.unread_notifications > 0;\n\n        return (\n            <div className=\"friwords-container\">\n                <div style={{ width: '100%', height: 45, display: 'flex', flexDirection: 'row', position: 'fixed', top: 0, right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 0, backgroundColor: 'white', zIndex: 9999 }}>\n                    <div\n                        style={{ height: 45, display: 'flex', flexDirection: 'column', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', borderTopLeftRadius: 0, borderBottomLeftRadius: 10, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)' }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em' }}>{ this.state.user && this.state.user.alias ? `@${this.state.user.alias}` : '-' }</span>\n                        <a\n                            style={{ textDecorationLine: 'underline', fontSize: '0.6em' }}\n                            href=\"#\"\n                            onClick={() => {\n                                if(this.isAuthenticated()) {\n                                    this.setState({ isLoggingIn : true });\n                                } else {\n                                    this.setState({ isWelcome : true });\n                                }\n                            }}\n                        >{ this.isAuthenticated() ? 'Cambiar' : 'Ingresar' }</a>\n                    </div>\n                    <div\n                        className=\"counter-online-users\"\n                        onClick={() => {\n                            if(this.isAuthenticated()) {\n                                this.setState({ isViewingNotifications : true });\n                            } else {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        style={{ height: 45, display: 'flex', flex: hasNoticicationsUnread ? 1 : 0, justifyContent: 'center', alignItems: 'center', backgroundColor: hasNoticicationsUnread ? '#fccf84' : 'white', borderTopLeftRadius: 0, cursor: 'pointer', zIndex: 9999, borderLeft: '2px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.05)', paddingLeft: 10, paddingRight: 10 }}>\n                        <p style={{ fontWeight: 600, margin: 0, padding: 0, fontSize: '0.75em' }}>{ hasNoticicationsUnread ? `${this.state.user.unread_notifications} nueva${this.state.user.unread_notifications > 1 ? 's' : ''}` : 0 }</p>\n                        <img\n                            style={{ width: 20, height: 20, marginLeft: 5, opacity: 1 }}\n                            src={`/img/bell-${hasNoticicationsUnread ? 'on' : 'off'}.png`} />\n                    </div>\n                    <div\n                        onClick={this.refresh}\n                        style={{ height: 45, display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#25b864', cursor: 'pointer', zIndex: 9999, borderBottomRightRadius: 10, borderLeft: '0px solid rgba(0,0,0,.05)', borderBottom: '2px solid rgba(0,0,0,.2)', opacity: this.state.hasUpdates ? 1 : .6 }}>\n                        <span style={{ fontWeight: 500, fontSize: '0.6em', color: 'white' }}>{ this.state.isLoading ? 'Actualizando..' : 'Actualizar' }</span>\n                        <img\n                            style={{ width: 30, height: 30, marginLeft: 10 }}\n                            src=\"https://image.flaticon.com/icons/svg/1688/1688988.svg\" />\n                    </div>\n                </div>\n\n                <section style={{ textAlign: 'center', marginTop: 80, marginBottom: 20 }}>\n                    <Title level={2} className=\"Title\">\n                        Friwords\n                    </Title>\n                </section>\n\n                <div className=\"scroll-container\">\n                    <FriwordsNotificationsPanel\n                        isVisible={this.state.isViewingNotifications}\n                        user={this.state.user}\n                        onRequestClose={() => {\n                            this.setState({ isViewingNotifications : false }, this.getMe);\n                        }}\n                        onClickNotification={(e) => {\n                            if(e.redirect_to != null) {\n                                if(e.redirect_to.indexOf('friword/') > -1) {\n                                    this.setState({ isLoading : true, isViewingNotifications: false });\n                                    this.getFriwordById(e.redirect_to.replace('friword/', ''), true);\n                                }\n                            }\n                        }}\n                    />\n\n                    <FriwordLogin\n                        isVisible={this.state.isLoggingIn}\n                        onRequestClose={() => {\n                            this.setState({ isLoggingIn : false });\n                            if(!this.state.user.is_configured) {\n                                this.setState({ isWelcome : true });\n                            }\n                        }}\n                        onLoggedIn={(user) => {\n                            this.setState({ user, isLoggingIn: false }, this.refresh);\n                        }}\n                    />\n\n                    <FriwordCreatePost\n                        isVisible={this.state.isCreating}\n                        onRequestClose={() => {\n                            this.setState({ isCreating : false });\n                        }}\n                        user={this.state.user}\n                        onCreated={(friword) => {\n                            this.setState({ isCreating : false });\n\n                            // Reset filters and then fetch the first page\n                            filters.page = 0;\n                            filters.listing_mode = 1;\n                            this.setState({ filters, tabActiveKey: '1' }, this.refresh);\n                            notification.open({\n                                className: 'success',\n                                message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                                description: 'Tu friword fue publicado exitosamente en la sección `Recientes`',\n                            });\n                        }}\n                    />\n\n                    { this.state.currentFriwordId != null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    this.setState({ currentFriwordId: null }, this.refresh);\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.RollbackOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Volver atrás\n                            </Button>\n                        </div>,\n                        <FriwordCard\n                            loading={this.state.isLoading}\n                            friword={this.state.friwords[0]}\n                            comments={this.state.friwords[0].comments}\n                            likes={this.state.friwords[0].likes_qty}\n                            dislikes={this.state.friwords[0].dislikes_qty}\n                            commentsQty={this.state.friwords[0].comments_qty}\n                            user={this.state.user}\n                            onLike={() => {\n                                Services.Friwords.likeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onDislike={() => {\n                                Services.Friwords.dislikeById(this.state.friwords[0].id, (success) => {\n                                    setTimeout(() => {\n                                        this.getFriwordById(this.state.friwords[0].id, true);\n                                        this.getMe();\n                                    }, 500);\n                                });\n                            }}\n                            onRequestComments={() => {\n                                this.getFriwordById(this.state.friwords[0].id, true);\n                            }}\n                            onPostedComment={this.getMe}\n                        />\n                    ]}\n\n                    { this.state.currentFriwordId == null && [\n                        <div style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Button\n                                onClick={() => {\n                                    if(this.isAuthenticated()) {\n                                        this.setState({ isCreating : true });\n                                    } else {\n                                        this.setState({ isWelcome : true });\n                                    }\n                                }}\n                                type=\"primary\"\n                                icon={<Icons.PlusOutlined />}\n                                style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                Publicar friword\n                            </Button>\n                        </div>,\n                        <Tabs\n                            activeKey={this.state.tabActiveKey}\n                            type={'card'}\n                            onTabClick={(val) => {\n                                if(val == 2) {\n                                    filters.only_me = true;\n                                    filters.page = 0;\n                                } else {\n                                    filters.only_me = false;\n                                    filters.listing_mode = val;\n                                    filters.page = 0;\n                                }\n                                this.setState({\n                                    filters,\n                                    tabActiveKey: val\n                                }, this.getFriwords);\n                            }}\n                            defaultActiveKey={'1'}>\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.HeartOutlined />\n                                            Más destacados\n                                        </span>\n                                    }\n                                key={'0'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onDislike={() => {\n                                            Services.Friwords.dislikeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                    this.getMe();\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    loading={this.state.isLoading}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.FieldTimeOutlined />\n                                            Recientes\n                                        </span>\n                                    }\n                                key={'1'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onDislike={() => {\n                                            Services.Friwords.dislikeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    icon={<Icons.ReloadOutlined />}\n                                    loading={this.state.isLoading}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n\n                            <TabPane\n                                tab={\n                                    <span>\n                                        <Icons.FieldTimeOutlined />\n                                            Míos\n                                        </span>\n                                    }\n                                key={'2'}>\n                                { friwords && friwords.map((e, index) => (\n                                    <FriwordCard\n                                        loading={this.state.isLoading}\n                                        friword={e}\n                                        comments={e.comments}\n                                        likes={e.likes_qty}\n                                        dislikes={e.dislikes_qty}\n                                        commentsQty={e.comments_qty}\n                                        user={this.state.user}\n                                        onLike={() => {\n                                            Services.Friwords.likeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onDislike={() => {\n                                            Services.Friwords.dislikeById(e.id, (success) => {\n                                                setTimeout(() => {\n                                                    this.getFriwordById(e.id);\n                                                }, 500);\n                                            });\n                                        }}\n                                        onRequestComments={() => {\n                                            this.getFriwordById(e.id);\n                                        }}\n                                        onPostedComment={this.getMe}\n                                    />\n                                ))}\n\n                                <Button\n                                    onClick={() => {\n                                        filters.page += 1;\n                                        this.setState({ filters }, this.getFriwords);\n                                    }}\n                                    type=\"primary\"\n                                    loading={this.state.isLoading}\n                                    icon={<Icons.ReloadOutlined />}\n                                    style={{ display: 'flex', width: '80%', margin: '0 auto', marginBottom: 20, justifyContent: 'center', alignItems: 'center', height: 40 }}>\n                                    Cargar más\n                                </Button>\n                            </TabPane>\n                        </Tabs>\n                    ]}\n\n                    { this.state.isLoading &&\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                            <Spin indicator={\n                                <Icons.LoadingOutlined style={{ fontSize: 24 }} spin />\n                            } />\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderWelcome() {\n        return (\n            <div className=\"friwords-container\">\n                <FriwordWelcome\n                    isVisible={this.state.isWelcome}\n                    onStart={() => {\n                        this.setState({ isWelcome : false }, this.getMe);\n                        notification.open({\n                            className: 'success',\n                            message: <Icons.HeartTwoTone twoToneColor=\"#eb2f96\" />,\n                            description:\n                                'Bienvenid@ a Friwords. Empieza leyendo y publicando',\n                        });\n\n                        setTimeout(() => {\n                            this.getFriwords();\n                        }, 3000);\n                    }}\n                    onRequestLogin={() => {\n                        this.setState({ isLoggingIn : true, isWelcome: false });\n                    }}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography } from 'antd';\nimport Friwords from './pages/Friwords';\n\n// CSS Files\nimport './App.css';\nimport './assets/css/friwords.css';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst App = () => (\n    <Friwords />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}